Grammar

    0 $accept: mdl $end

    1 mdl: mdl_version import_declarations module_declaration global_declarations
    2    | mdl_version import_declarations global_declarations
    3    | mdl_version module_declaration global_declarations
    4    | mdl_version import_declarations module_declaration
    5    | mdl_version import_declarations
    6    | mdl_version module_declaration
    7    | mdl_version global_declarations
    8    | mdl_version

    9 mdl_version: MDL FLOATING_LITERAL SEMICOLON

   10 import_declarations: import_declarations import_declaration
   11                    | import_declaration

   12 global_declarations: global_declarations global_declaration
   13                    | global_declaration

   14 variable_declarations: variable_declarations variable_declaration
   15                      | variable_declaration

   16 import_declaration: IMPORT qualified_imports SEMICOLON
   17                   | EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON

   18 qualified_imports: qualified_imports COMMA qualified_import
   19                  | qualified_import

   20 qualified_import_prefix: qualified_import_prefix_relative_current qualified_name_infix
   21                        | qualified_import_prefix_relative_parent qualified_name_infix
   22                        | qualified_import_prefix_absolute qualified_name_infix
   23                        | qualified_name_infix

   24 unqualified_import: unqualified_import_simple_names
   25                   | STAR

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | qualified_name_infix qualified_import_suffix
   30                 | qualified_import_prefix_relative_current qualified_name_infix
   31                 | qualified_import_prefix_relative_parent qualified_name_infix
   32                 | qualified_import_prefix_absolute qualified_name_infix
   33                 | qualified_name_infix

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name
   35                                | simple_name

   36 qualified_import_prefix_relative_current: DOT SCOPE

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | DOTDOT SCOPE

   39 qualified_import_prefix_absolute: SCOPE

   40 qualified_name_infix: qualified_name_infix SCOPE simple_name
   41                     | simple_name

   42 qualified_import_suffix: SCOPE STAR

   43 module_declaration: MODULE annotation_block SEMICOLON
   44                   | MODULE SEMICOLON

   45 variable_declaration: type variable_declarators SEMICOLON

   46 variable_declarators: variable_declarators COMMA variable_declarator
   47                     | variable_declarator

   48 variable_declarator: simple_name argument_list annotation_block
   49                    | simple_name argument_list
   50                    | simple_name ASSIGN_OP assignment_expression annotation_block
   51                    | simple_name ASSIGN_OP assignment_expression
   52                    | simple_name annotation_block
   53                    | simple_name

   54 global_declaration: EXPORT annotation_declaration
   55                   | EXPORT constant_declaration
   56                   | EXPORT type_declaration
   57                   | EXPORT function_declaration
   58                   | annotation_declaration
   59                   | constant_declaration
   60                   | type_declaration
   61                   | function_declaration

   62 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | ANNOTATION simple_name parameter_list SEMICOLON

   64 constant_declaration: CONST type constant_declarators SEMICOLON

   65 constant_declarators: constant_declarators COMMA constant_declarator
   66                     | constant_declarator

   67 constant_declarator: simple_name argument_list annotation_block
   68                    | simple_name argument_list
   69                    | simple_name ASSIGN_OP conditional_expression annotation_block
   70                    | simple_name ASSIGN_OP conditional_expression

   71 type_declaration: alias_type_declaration
   72                 | struct_type_declaration
   73                 | enum_type_declaration

   74 alias_type_declaration: TYPEDEF type simple_name SEMICOLON

   75 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

   79 struct_field_declarators: struct_field_declarators struct_field_declarator
   80                         | struct_field_declarator

   81 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | type simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | type simple_name annotation_block SEMICOLON
   84                        | type simple_name SEMICOLON

   85 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

   89 enum_value_declarators: enum_value_declarators COMMA enum_value_declarator
   90                       | enum_value_declarator

   91 enum_value_declarator: simple_name ASSIGN_OP assignment_expression annotation_block
   92                      | simple_name ASSIGN_OP assignment_expression
   93                      | simple_name annotation_block
   94                      | simple_name

   95 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | type annotation_block simple_name parameter_list SEMICOLON
  101                     | type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | type simple_name parameter_list annotation_block SEMICOLON
  104                     | type simple_name parameter_list UNIFORM SEMICOLON
  105                     | type simple_name parameter_list VARYING SEMICOLON
  106                     | type simple_name parameter_list SEMICOLON
  107                     | type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | type annotation_block simple_name parameter_list compound_statement
  113                     | type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | type simple_name parameter_list annotation_block compound_statement
  116                     | type simple_name parameter_list UNIFORM compound_statement
  117                     | type simple_name parameter_list VARYING compound_statement
  118                     | type simple_name parameter_list compound_statement
  119                     | type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

  135 compound_statement: LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

  137 statements: statements statement
  138           | statement

  139 statement: matched_statement
  140          | unmatched_statement

  141 matched_statement: compound_statement
  142                  | type_declaration
  143                  | constant_declaration
  144                  | matched_if_statement
  145                  | switch_statement
  146                  | matched_while_statement
  147                  | matched_do_statement
  148                  | matched_for_statement
  149                  | break_statement
  150                  | continue_statement
  151                  | return_statement
  152                  | variable_declaration
  153                  | comma_expression SEMICOLON
  154                  | SEMICOLON

  155 unmatched_statement: unmatched_if_statement
  156                    | unmatched_while_statement
  157                    | unmatched_do_statement
  158                    | unmatched_for_statement

  159 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement

  160 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

  164 switch_cases: switch_cases switch_case
  165             | switch_case

  166 switch_case: CASE comma_expression COLON statement
  167            | CASE comma_expression COLON
  168            | DEFAULT COLON statement
  169            | DEFAULT COLON

  170 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement

  171 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement

  172 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

  173 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement

  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

  198 break_statement: BREAK SEMICOLON

  199 continue_statement: CONTINUE SEMICOLON

  200 return_statement: RETURN comma_expression SEMICOLON

  201 parameter_list: LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  202               | LEFT_PARENTHESIS RIGHT_PARENTHESIS

  203 parameters: parameters COMMA parameter
  204           | parameter

  205 parameter: type simple_name ASSIGN_OP assignment_expression annotation_block
  206          | type simple_name ASSIGN_OP assignment_expression
  207          | type simple_name annotation_block
  208          | type simple_name

  209 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

  210 annotations: annotations COMMA annotation
  211            | annotation

  212 qualified_name: SCOPE qualified_name_infix
  213               | qualified_name_infix

  214 annotation: qualified_name argument_list

  215 argument_list: LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  216              | LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  217              | LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  218              | LEFT_PARENTHESIS RIGHT_PARENTHESIS

  219 named_arguments: named_arguments COMMA named_argument
  220                | named_argument

  221 positional_arguments: positional_arguments COMMA positional_argument
  222                     | positional_argument

  223 named_argument: simple_name COLON assignment_expression

  224 positional_argument: assignment_expression

  225 comma_expression: assignment_expression COMMA comma_expression
  226                 | assignment_expression

  227 assignment_expression: logical_or_expression ASSIGN_OP assignment_expression
  228                      | logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | conditional_expression

  240 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | logical_or_expression

  242 logical_or_expression: logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | logical_and_expression

  244 logical_and_expression: logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | inclusive_or_expression

  246 inclusive_or_expression: inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | exclusive_or_expression

  248 exclusive_or_expression: exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | and_expression

  250 and_expression: and_expression BITWISE_AND_OP equality_expression
  251               | equality_expression

  252 equality_expression: equality_expression EQUAL_OP relational_expression
  253                    | equality_expression NOT_EQUAL_OP relational_expression
  254                    | relational_expression

  255 relational_expression: relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | shift_expression

  260 shift_expression: shift_expression SHIFT_LEFT_OP additive_expression
  261                 | shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | additive_expression

  264 additive_expression: additive_expression POSITIVE_OP multiplicative_expression
  265                    | additive_expression NEGATIVE_OP multiplicative_expression
  266                    | multiplicative_expression

  267 multiplicative_expression: multiplicative_expression STAR unary_expression
  268                          | multiplicative_expression DIVIDE_OP unary_expression
  269                          | multiplicative_expression MODULO_OP unary_expression
  270                          | unary_expression

  271 unary_expression: BITWISE_COMPLEMENT_OP unary_expression
  272                 | LOGICAL_NOT_OP unary_expression
  273                 | POSITIVE_OP unary_expression
  274                 | NEGATIVE_OP unary_expression
  275                 | INCREMENT_OP unary_expression
  276                 | DECREMENT_OP unary_expression
  277                 | postfix_expression
  278                 | let_expression

  279 postfix_expression: matched_postfix_expression
  280                   | unmatched_postfix_expression

  281 matched_postfix_expression: matched_postfix_expression INCREMENT_OP
  282                           | matched_postfix_expression DECREMENT_OP
  283                           | matched_postfix_expression DOT simple_name
  284                           | matched_postfix_expression argument_list
  285                           | matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | matched_primary_expression
  287                           | cast_expression

  288 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | literal_expression
  291                           | LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS

  292 unmatched_postfix_expression: unmatched_postfix_expression INCREMENT_OP
  293                             | unmatched_postfix_expression DECREMENT_OP
  294                             | unmatched_postfix_expression DOT simple_name
  295                             | unmatched_postfix_expression argument_list
  296                             | unmatched_primary_expression

  297 unmatched_primary_expression: simple_type

  298 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

  299 let_expression: LET variable_declaration IN unary_expression
  300               | LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression

  301 literal_expression: boolean_literal
  302                   | integer_literal
  303                   | floating_literal
  304                   | string_literal

  305 boolean_literal: TRUE
  306                | FALSE

  307 integer_literal: INTEGER_LITERAL

  308 floating_literal: FLOATING_LITERAL

  309 string_literal: string_literal STRING_LITERAL
  310               | STRING_LITERAL

  311 type: VARYING array_type
  312     | UNIFORM array_type
  313     | array_type

  314 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | simple_type

  318 simple_type: SCOPE relative_type
  319            | relative_type

  320 relative_type: BOOL
  321              | BOOL2
  322              | BOOL3
  323              | BOOL4
  324              | INT
  325              | INT2
  326              | INT3
  327              | INT4
  328              | FLOAT
  329              | FLOAT2
  330              | FLOAT3
  331              | FLOAT4
  332              | FLOAT2X2
  333              | FLOAT2X3
  334              | FLOAT2X4
  335              | FLOAT3X2
  336              | FLOAT3X3
  337              | FLOAT3X4
  338              | FLOAT4X2
  339              | FLOAT4X3
  340              | FLOAT4X4
  341              | DOUBLE
  342              | DOUBLE2
  343              | DOUBLE3
  344              | DOUBLE4
  345              | DOUBLE2X2
  346              | DOUBLE2X3
  347              | DOUBLE2X4
  348              | DOUBLE3X2
  349              | DOUBLE3X3
  350              | DOUBLE3X4
  351              | DOUBLE4X2
  352              | DOUBLE4X3
  353              | DOUBLE4X4
  354              | COLOR
  355              | STRING
  356              | SDF
  357              | EDF
  358              | VDF
  359              | LIGHT_PROFILE
  360              | MATERIAL
  361              | MATERIAL_EMISSION
  362              | MATERIAL_GEOMETRY
  363              | MATERIAL_SURFACE
  364              | MATERIAL_VOLUME
  365              | TEXTURE_2D
  366              | TEXTURE_3D
  367              | TEXTURE_CUBE
  368              | TEXTURE_PTEX
  369              | BSDF_MEASUREMENT
  370              | INTENSITY_MODE
  371              | INTENSITY_RADIANT_EXITANCE
  372              | INTENSITY_POWER
  373              | HAIR_BSDF
  374              | qualified_name_infix

  375 simple_name: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING_LITERAL (258) 309 310
SEMICOLON (259) 9 16 17 43 44 45 62 63 64 74 75 76 77 78 81 82 83 84
    85 86 87 88 95 96 97 98 99 100 101 102 103 104 105 106 119 120
    121 122 123 124 125 126 127 128 129 130 131 132 133 134 153 154
    172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187
    188 189 190 191 192 193 194 195 196 197 198 199 200
COMMA (260) 18 34 46 65 89 203 210 215 219 221 225
MDL (261) 9
IMPORT (262) 16 17
USING (263) 17
MODULE (264) 43 44
EXPORT (265) 17 54 55 56 57
UNIFORM (266) 95 98 101 104 107 110 113 116 119 122 125 128 312
VARYING (267) 96 99 102 105 108 111 114 117 120 123 126 129 311
BOOL (268) 320
BOOL2 (269) 321
BOOL3 (270) 322
BOOL4 (271) 323
INT (272) 324
INT2 (273) 325
INT3 (274) 326
INT4 (275) 327
FLOAT (276) 328
FLOAT2 (277) 329
FLOAT3 (278) 330
FLOAT4 (279) 331
FLOAT2X2 (280) 332
FLOAT2X3 (281) 333
FLOAT2X4 (282) 334
FLOAT3X2 (283) 335
FLOAT3X3 (284) 336
FLOAT3X4 (285) 337
FLOAT4X2 (286) 338
FLOAT4X3 (287) 339
FLOAT4X4 (288) 340
DOUBLE (289) 341
DOUBLE2 (290) 342
DOUBLE3 (291) 343
DOUBLE4 (292) 344
DOUBLE2X2 (293) 345
DOUBLE2X3 (294) 346
DOUBLE2X4 (295) 347
DOUBLE3X2 (296) 348
DOUBLE3X3 (297) 349
DOUBLE3X4 (298) 350
DOUBLE4X2 (299) 351
DOUBLE4X3 (300) 352
DOUBLE4X4 (301) 353
COLOR (302) 354
STRING (303) 355
SDF (304) 356
EDF (305) 357
VDF (306) 358
LIGHT_PROFILE (307) 359
MATERIAL (308) 360
MATERIAL_EMISSION (309) 361
MATERIAL_GEOMETRY (310) 362
MATERIAL_SURFACE (311) 363
MATERIAL_VOLUME (312) 364
TEXTURE_2D (313) 365
TEXTURE_3D (314) 366
TEXTURE_CUBE (315) 367
TEXTURE_PTEX (316) 368
BSDF_MEASUREMENT (317) 369
INTENSITY_MODE (318) 370
INTENSITY_RADIANT_EXITANCE (319) 371
INTENSITY_POWER (320) 372
HAIR_BSDF (321) 373
TRUE (322) 305
FALSE (323) 306
LET (324) 299 300
IN (325) 299 300
ANNOTATION (326) 62 63
CONST (327) 64
TYPEDEF (328) 74
STRUCT (329) 75 76 77 78
ENUM (330) 85 86 87 88
IF (331) 159 160 161
ELSE (332) 159 161
SWITCH (333) 162 163
CASE (334) 166 167
DEFAULT (335) 168 169
WHILE (336) 170 171 172 173
DO (337) 172 173
FOR (338) 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188
    189 190 191 192 193 194 195 196 197
BREAK (339) 198
CONTINUE (340) 199
RETURN (341) 200
CAST (342) 298
ASSIGN_OP (343) 50 51 69 70 81 82 91 92 119 120 121 122 123 124 125
    126 127 128 129 130 131 132 133 134 205 206 227
BITWISE_OR_ASSIGN_OP (344) 228
BITWISE_AND_ASSIGN_OP (345) 229
BITWISE_XOR_ASSIGN_OP (346) 230
SHIFT_LEFT_ASSIGN_OP (347) 231
SHIFT_RIGHT_ASSIGN_OP (348) 232
UNSIGNED_SHIFT_RIGHT_ASSIGN_OP (349) 233
MULTIPLY_ASSIGN_OP (350) 234
DIVIDE_ASSIGN_OP (351) 235
MODULO_ASSIGN_OP (352) 236
PLUS_ASSIGN_OP (353) 237
MINUS_ASSIGN_OP (354) 238
CONDITIONAL_OP (355) 240
LOGICAL_OR_OP (356) 242
LOGICAL_AND_OP (357) 244
BITWISE_OR_OP (358) 246
BITWISE_XOR_OP (359) 248
BITWISE_AND_OP (360) 250
EQUAL_OP (361) 252
NOT_EQUAL_OP (362) 253
LESS_OR_EQUAL_OP (363) 256
GREATER_OR_EQUAL_OP (364) 257
SHIFT_LEFT_OP (365) 260
SHIFT_RIGHT_OP (366) 261
UNSIGNED_SHIFT_RIGHT_OP (367) 262
DIVIDE_OP (368) 268
MODULO_OP (369) 269
BITWISE_COMPLEMENT_OP (370) 271
LOGICAL_NOT_OP (371) 272
POSITIVE_OP (372) 264 273
NEGATIVE_OP (373) 265 274
INCREMENT_OP (374) 275 281 292
DECREMENT_OP (375) 276 282 293
DOT (376) 36 283 294
DOTDOT (377) 37 38
SCOPE (378) 36 37 38 39 40 42 212 318
STAR (379) 25 42 131 132 133 134 267
COLON (380) 166 167 168 169 223 240
ANNOTATION_BLOCK_BEGIN (381) 209
ANNOTATION_BLOCK_END (382) 209
LEFT_PARENTHESIS (383) 131 132 133 134 159 160 161 162 163 170 171
    172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187
    188 189 190 191 192 193 194 195 196 197 201 202 215 216 217 218
    291 298
RIGHT_PARENTHESIS (384) 131 132 133 134 159 160 161 162 163 170 171
    172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187
    188 189 190 191 192 193 194 195 196 197 201 202 215 216 217 218
    291 298
LEFT_SQUARE_BRACKET (385) 285 288 289 314 315 316
RIGHT_SQUARE_BRACKET (386) 285 288 289 314 315 316
LEFT_ANGLE_BRACKET (387) 255 298 314
RIGHT_ANGLE_BRACKET (388) 258 298 314
LEFT_CURLY_BRACE (389) 75 76 77 78 85 86 87 88 135 136 162 163 300
RIGHT_CURLY_BRACE (390) 75 76 77 78 85 86 87 88 135 136 162 163 300
IDENT (391) 375
INTEGER_LITERAL (392) 307
FLOATING_LITERAL (393) 9 308


Nonterminals, with rules where they appear

$accept (139)
    on left: 0
mdl (140)
    on left: 1 2 3 4 5 6 7 8, on right: 0
mdl_version (141)
    on left: 9, on right: 1 2 3 4 5 6 7 8
import_declarations (142)
    on left: 10 11, on right: 1 2 4 5 10
global_declarations (143)
    on left: 12 13, on right: 1 2 3 7 12
variable_declarations (144)
    on left: 14 15, on right: 14 300
import_declaration (145)
    on left: 16 17, on right: 10 11
qualified_imports (146)
    on left: 18 19, on right: 16 18
qualified_import_prefix (147)
    on left: 20 21 22 23, on right: 17
unqualified_import (148)
    on left: 24 25, on right: 17
qualified_import (149)
    on left: 26 27 28 29 30 31 32 33, on right: 18 19
unqualified_import_simple_names (150)
    on left: 34 35, on right: 24 34
qualified_import_prefix_relative_current (151)
    on left: 36, on right: 20 26 30
qualified_import_prefix_relative_parent (152)
    on left: 37 38, on right: 21 27 31 37
qualified_import_prefix_absolute (153)
    on left: 39, on right: 22 28 32
qualified_name_infix (154)
    on left: 40 41, on right: 20 21 22 23 26 27 28 29 30 31 32 33 40
    212 213 374
qualified_import_suffix (155)
    on left: 42, on right: 26 27 28 29
module_declaration (156)
    on left: 43 44, on right: 1 3 4 6
variable_declaration (157)
    on left: 45, on right: 14 15 152 174 175 176 177 186 187 188 189
    299
variable_declarators (158)
    on left: 46 47, on right: 45 46
variable_declarator (159)
    on left: 48 49 50 51 52 53, on right: 46 47
global_declaration (160)
    on left: 54 55 56 57 58 59 60 61, on right: 12 13
annotation_declaration (161)
    on left: 62 63, on right: 54 58
constant_declaration (162)
    on left: 64, on right: 55 59 143
constant_declarators (163)
    on left: 65 66, on right: 64 65
constant_declarator (164)
    on left: 67 68 69 70, on right: 65 66
type_declaration (165)
    on left: 71 72 73, on right: 56 60 142
alias_type_declaration (166)
    on left: 74, on right: 71
struct_type_declaration (167)
    on left: 75 76 77 78, on right: 72
struct_field_declarators (168)
    on left: 79 80, on right: 75 76 79
struct_field_declarator (169)
    on left: 81 82 83 84, on right: 79 80
enum_type_declaration (170)
    on left: 85 86 87 88, on right: 73
enum_value_declarators (171)
    on left: 89 90, on right: 85 86 89
enum_value_declarator (172)
    on left: 91 92 93 94, on right: 89 90
function_declaration (173)
    on left: 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109
    110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
    126 127 128 129 130 131 132 133 134, on right: 57 61
compound_statement (174)
    on left: 135 136, on right: 107 108 109 110 111 112 113 114 115
    116 117 118 141
statements (175)
    on left: 137 138, on right: 135 137
statement (176)
    on left: 139 140, on right: 137 138 160 166 168
matched_statement (177)
    on left: 141 142 143 144 145 146 147 148 149 150 151 152 153 154,
    on right: 139 159 161 170 172 174 175 176 177 178 179 180 181 182
    183 184 185
unmatched_statement (178)
    on left: 155 156 157 158, on right: 140 161 171 173 186 187 188
    189 190 191 192 193 194 195 196 197
matched_if_statement (179)
    on left: 159, on right: 144
unmatched_if_statement (180)
    on left: 160 161, on right: 155
switch_statement (181)
    on left: 162 163, on right: 145
switch_cases (182)
    on left: 164 165, on right: 162 164
switch_case (183)
    on left: 166 167 168 169, on right: 164 165
matched_while_statement (184)
    on left: 170, on right: 146
unmatched_while_statement (185)
    on left: 171, on right: 156
matched_do_statement (186)
    on left: 172, on right: 147
unmatched_do_statement (187)
    on left: 173, on right: 157
matched_for_statement (188)
    on left: 174 175 176 177 178 179 180 181 182 183 184 185, on right:
    148
unmatched_for_statement (189)
    on left: 186 187 188 189 190 191 192 193 194 195 196 197, on right:
    158
break_statement (190)
    on left: 198, on right: 149
continue_statement (191)
    on left: 199, on right: 150
return_statement (192)
    on left: 200, on right: 151
parameter_list (193)
    on left: 201 202, on right: 62 63 95 96 97 98 99 100 101 102 103
    104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
    120 121 122 123 124 125 126 127 128 129 130
parameters (194)
    on left: 203 204, on right: 201 203
parameter (195)
    on left: 205 206 207 208, on right: 203 204
annotation_block (196)
    on left: 209, on right: 43 48 50 52 62 67 69 75 77 81 83 85 87
    91 93 95 96 97 98 99 100 101 102 103 107 108 109 110 111 112 113
    114 115 119 120 121 122 123 124 125 126 127 131 132 133 205 207
annotations (197)
    on left: 210 211, on right: 209 210
qualified_name (198)
    on left: 212 213, on right: 214
annotation (199)
    on left: 214, on right: 210 211
argument_list (200)
    on left: 215 216 217 218, on right: 48 49 67 68 214 284 295
named_arguments (201)
    on left: 219 220, on right: 215 216 219
positional_arguments (202)
    on left: 221 222, on right: 215 217 221
named_argument (203)
    on left: 223, on right: 219 220
positional_argument (204)
    on left: 224, on right: 221 222
comma_expression (205)
    on left: 225 226, on right: 81 82 119 120 121 122 123 124 125 126
    127 128 129 130 131 132 133 134 153 159 160 161 162 163 166 167
    170 171 172 173 174 175 176 178 179 180 181 182 183 184 186 187
    188 190 191 192 193 194 195 196 200 225 240 285 288 291 315
assignment_expression (206)
    on left: 227 228 229 230 231 232 233 234 235 236 237 238 239, on right:
    50 51 91 92 205 206 223 224 225 226 227 228 229 230 231 232 233
    234 235 236 237 238 240
conditional_expression (207)
    on left: 240 241, on right: 69 70 239
logical_or_expression (208)
    on left: 242 243, on right: 227 228 229 230 231 232 233 234 235
    236 237 238 240 241 242
logical_and_expression (209)
    on left: 244 245, on right: 242 243 244
inclusive_or_expression (210)
    on left: 246 247, on right: 244 245 246
exclusive_or_expression (211)
    on left: 248 249, on right: 246 247 248
and_expression (212)
    on left: 250 251, on right: 248 249 250
equality_expression (213)
    on left: 252 253 254, on right: 250 251 252 253
relational_expression (214)
    on left: 255 256 257 258 259, on right: 252 253 254 255 256 257
    258
shift_expression (215)
    on left: 260 261 262 263, on right: 255 256 257 258 259 260 261
    262
additive_expression (216)
    on left: 264 265 266, on right: 260 261 262 263 264 265
multiplicative_expression (217)
    on left: 267 268 269 270, on right: 264 265 266 267 268 269
unary_expression (218)
    on left: 271 272 273 274 275 276 277 278, on right: 267 268 269
    270 271 272 273 274 275 276 298 299 300
postfix_expression (219)
    on left: 279 280, on right: 277
matched_postfix_expression (220)
    on left: 281 282 283 284 285 286 287, on right: 279 281 282 283
    284 285
matched_primary_expression (221)
    on left: 288 289 290 291, on right: 286
unmatched_postfix_expression (222)
    on left: 292 293 294 295 296, on right: 280 292 293 294 295
unmatched_primary_expression (223)
    on left: 297, on right: 296
cast_expression (224)
    on left: 298, on right: 287
let_expression (225)
    on left: 299 300, on right: 278
literal_expression (226)
    on left: 301 302 303 304, on right: 290
boolean_literal (227)
    on left: 305 306, on right: 301
integer_literal (228)
    on left: 307, on right: 302
floating_literal (229)
    on left: 308, on right: 303
string_literal (230)
    on left: 309 310, on right: 304 309
type (231)
    on left: 311 312 313, on right: 45 64 74 81 82 83 84 95 96 97 98
    99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
    115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130
    131 132 133 134 205 206 207 208 298
array_type (232)
    on left: 314 315 316 317, on right: 311 312 313
simple_type (233)
    on left: 318 319, on right: 288 289 297 314 315 316 317
relative_type (234)
    on left: 320 321 322 323 324 325 326 327 328 329 330 331 332 333
    334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349
    350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365
    366 367 368 369 370 371 372 373 374, on right: 318 319
simple_name (235)
    on left: 375, on right: 34 35 40 41 48 49 50 51 52 53 62 63 67
    68 69 70 74 75 76 77 78 81 82 83 84 85 86 87 88 91 92 93 94 95
    96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
    113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128
    129 130 131 132 133 134 205 206 207 208 223 283 294 314


State 0

    0 $accept: . mdl $end
    1 mdl: . mdl_version import_declarations module_declaration global_declarations
    2    | . mdl_version import_declarations global_declarations
    3    | . mdl_version module_declaration global_declarations
    4    | . mdl_version import_declarations module_declaration
    5    | . mdl_version import_declarations
    6    | . mdl_version module_declaration
    7    | . mdl_version global_declarations
    8    | . mdl_version
    9 mdl_version: . MDL FLOATING_LITERAL SEMICOLON

    MDL  shift, and go to state 1

    mdl          go to state 2
    mdl_version  go to state 3


State 1

    9 mdl_version: MDL . FLOATING_LITERAL SEMICOLON

    FLOATING_LITERAL  shift, and go to state 4


State 2

    0 $accept: mdl . $end

    $end  shift, and go to state 5


State 3

    1 mdl: mdl_version . import_declarations module_declaration global_declarations
    2    | mdl_version . import_declarations global_declarations
    3    | mdl_version . module_declaration global_declarations
    4    | mdl_version . import_declarations module_declaration
    5    | mdl_version . import_declarations
    6    | mdl_version . module_declaration
    7    | mdl_version . global_declarations
    8    | mdl_version .  [$end]
   10 import_declarations: . import_declarations import_declaration
   11                    | . import_declaration
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   16 import_declaration: . IMPORT qualified_imports SEMICOLON
   17                   | . EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 module_declaration: . MODULE annotation_block SEMICOLON
   44                   | . MODULE SEMICOLON
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    IMPORT                      shift, and go to state 6
    MODULE                      shift, and go to state 7
    EXPORT                      shift, and go to state 8
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 8 (mdl)

    import_declarations      go to state 72
    global_declarations      go to state 73
    import_declaration       go to state 74
    qualified_name_infix     go to state 75
    module_declaration       go to state 76
    global_declaration       go to state 77
    annotation_declaration   go to state 78
    constant_declaration     go to state 79
    type_declaration         go to state 80
    alias_type_declaration   go to state 81
    struct_type_declaration  go to state 82
    enum_type_declaration    go to state 83
    function_declaration     go to state 84
    type                     go to state 85
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 4

    9 mdl_version: MDL FLOATING_LITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 5

    0 $accept: mdl $end .

    $default  accept


State 6

   16 import_declaration: IMPORT . qualified_imports SEMICOLON
   18 qualified_imports: . qualified_imports COMMA qualified_import
   19                  | . qualified_import
   26 qualified_import: . qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | . qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | . qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | . qualified_name_infix qualified_import_suffix
   30                 | . qualified_import_prefix_relative_current qualified_name_infix
   31                 | . qualified_import_prefix_relative_parent qualified_name_infix
   32                 | . qualified_import_prefix_absolute qualified_name_infix
   33                 | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  375 simple_name: . IDENT

    DOT     shift, and go to state 91
    DOTDOT  shift, and go to state 92
    SCOPE   shift, and go to state 93
    IDENT   shift, and go to state 71

    qualified_imports                         go to state 94
    qualified_import                          go to state 95
    qualified_import_prefix_relative_current  go to state 96
    qualified_import_prefix_relative_parent   go to state 97
    qualified_import_prefix_absolute          go to state 98
    qualified_name_infix                      go to state 99
    simple_name                               go to state 89


State 7

   43 module_declaration: MODULE . annotation_block SEMICOLON
   44                   | MODULE . SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 100
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 102


State 8

   17 import_declaration: EXPORT . USING qualified_import_prefix IMPORT unqualified_import SEMICOLON
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   54 global_declaration: EXPORT . annotation_declaration
   55                   | EXPORT . constant_declaration
   56                   | EXPORT . type_declaration
   57                   | EXPORT . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    USING                       shift, and go to state 103
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix     go to state 75
    annotation_declaration   go to state 104
    constant_declaration     go to state 105
    type_declaration         go to state 106
    alias_type_declaration   go to state 81
    struct_type_declaration  go to state 82
    enum_type_declaration    go to state 83
    function_declaration     go to state 107
    type                     go to state 85
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 9

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  312 type: UNIFORM . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    array_type            go to state 108
    simple_type           go to state 87
    relative_type         go to state 88
    simple_name           go to state 89


State 10

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  311 type: VARYING . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    array_type            go to state 109
    simple_type           go to state 87
    relative_type         go to state 88
    simple_name           go to state 89


State 11

  320 relative_type: BOOL .

    $default  reduce using rule 320 (relative_type)


State 12

  321 relative_type: BOOL2 .

    $default  reduce using rule 321 (relative_type)


State 13

  322 relative_type: BOOL3 .

    $default  reduce using rule 322 (relative_type)


State 14

  323 relative_type: BOOL4 .

    $default  reduce using rule 323 (relative_type)


State 15

  324 relative_type: INT .

    $default  reduce using rule 324 (relative_type)


State 16

  325 relative_type: INT2 .

    $default  reduce using rule 325 (relative_type)


State 17

  326 relative_type: INT3 .

    $default  reduce using rule 326 (relative_type)


State 18

  327 relative_type: INT4 .

    $default  reduce using rule 327 (relative_type)


State 19

  328 relative_type: FLOAT .

    $default  reduce using rule 328 (relative_type)


State 20

  329 relative_type: FLOAT2 .

    $default  reduce using rule 329 (relative_type)


State 21

  330 relative_type: FLOAT3 .

    $default  reduce using rule 330 (relative_type)


State 22

  331 relative_type: FLOAT4 .

    $default  reduce using rule 331 (relative_type)


State 23

  332 relative_type: FLOAT2X2 .

    $default  reduce using rule 332 (relative_type)


State 24

  333 relative_type: FLOAT2X3 .

    $default  reduce using rule 333 (relative_type)


State 25

  334 relative_type: FLOAT2X4 .

    $default  reduce using rule 334 (relative_type)


State 26

  335 relative_type: FLOAT3X2 .

    $default  reduce using rule 335 (relative_type)


State 27

  336 relative_type: FLOAT3X3 .

    $default  reduce using rule 336 (relative_type)


State 28

  337 relative_type: FLOAT3X4 .

    $default  reduce using rule 337 (relative_type)


State 29

  338 relative_type: FLOAT4X2 .

    $default  reduce using rule 338 (relative_type)


State 30

  339 relative_type: FLOAT4X3 .

    $default  reduce using rule 339 (relative_type)


State 31

  340 relative_type: FLOAT4X4 .

    $default  reduce using rule 340 (relative_type)


State 32

  341 relative_type: DOUBLE .

    $default  reduce using rule 341 (relative_type)


State 33

  342 relative_type: DOUBLE2 .

    $default  reduce using rule 342 (relative_type)


State 34

  343 relative_type: DOUBLE3 .

    $default  reduce using rule 343 (relative_type)


State 35

  344 relative_type: DOUBLE4 .

    $default  reduce using rule 344 (relative_type)


State 36

  345 relative_type: DOUBLE2X2 .

    $default  reduce using rule 345 (relative_type)


State 37

  346 relative_type: DOUBLE2X3 .

    $default  reduce using rule 346 (relative_type)


State 38

  347 relative_type: DOUBLE2X4 .

    $default  reduce using rule 347 (relative_type)


State 39

  348 relative_type: DOUBLE3X2 .

    $default  reduce using rule 348 (relative_type)


State 40

  349 relative_type: DOUBLE3X3 .

    $default  reduce using rule 349 (relative_type)


State 41

  350 relative_type: DOUBLE3X4 .

    $default  reduce using rule 350 (relative_type)


State 42

  351 relative_type: DOUBLE4X2 .

    $default  reduce using rule 351 (relative_type)


State 43

  352 relative_type: DOUBLE4X3 .

    $default  reduce using rule 352 (relative_type)


State 44

  353 relative_type: DOUBLE4X4 .

    $default  reduce using rule 353 (relative_type)


State 45

  354 relative_type: COLOR .

    $default  reduce using rule 354 (relative_type)


State 46

  355 relative_type: STRING .

    $default  reduce using rule 355 (relative_type)


State 47

  356 relative_type: SDF .

    $default  reduce using rule 356 (relative_type)


State 48

  357 relative_type: EDF .

    $default  reduce using rule 357 (relative_type)


State 49

  358 relative_type: VDF .

    $default  reduce using rule 358 (relative_type)


State 50

  359 relative_type: LIGHT_PROFILE .

    $default  reduce using rule 359 (relative_type)


State 51

  360 relative_type: MATERIAL .

    $default  reduce using rule 360 (relative_type)


State 52

  361 relative_type: MATERIAL_EMISSION .

    $default  reduce using rule 361 (relative_type)


State 53

  362 relative_type: MATERIAL_GEOMETRY .

    $default  reduce using rule 362 (relative_type)


State 54

  363 relative_type: MATERIAL_SURFACE .

    $default  reduce using rule 363 (relative_type)


State 55

  364 relative_type: MATERIAL_VOLUME .

    $default  reduce using rule 364 (relative_type)


State 56

  365 relative_type: TEXTURE_2D .

    $default  reduce using rule 365 (relative_type)


State 57

  366 relative_type: TEXTURE_3D .

    $default  reduce using rule 366 (relative_type)


State 58

  367 relative_type: TEXTURE_CUBE .

    $default  reduce using rule 367 (relative_type)


State 59

  368 relative_type: TEXTURE_PTEX .

    $default  reduce using rule 368 (relative_type)


State 60

  369 relative_type: BSDF_MEASUREMENT .

    $default  reduce using rule 369 (relative_type)


State 61

  370 relative_type: INTENSITY_MODE .

    $default  reduce using rule 370 (relative_type)


State 62

  371 relative_type: INTENSITY_RADIANT_EXITANCE .

    $default  reduce using rule 371 (relative_type)


State 63

  372 relative_type: INTENSITY_POWER .

    $default  reduce using rule 372 (relative_type)


State 64

  373 relative_type: HAIR_BSDF .

    $default  reduce using rule 373 (relative_type)


State 65

   62 annotation_declaration: ANNOTATION . simple_name parameter_list annotation_block SEMICOLON
   63                       | ANNOTATION . simple_name parameter_list SEMICOLON
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 110


State 66

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   64 constant_declaration: CONST . type constant_declarators SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    type                  go to state 111
    array_type            go to state 86
    simple_type           go to state 87
    relative_type         go to state 88
    simple_name           go to state 89


State 67

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   74 alias_type_declaration: TYPEDEF . type simple_name SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    type                  go to state 112
    array_type            go to state 86
    simple_type           go to state 87
    relative_type         go to state 88
    simple_name           go to state 89


State 68

   75 struct_type_declaration: STRUCT . simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | STRUCT . simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT . simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT . simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 113


State 69

   85 enum_type_declaration: ENUM . simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | ENUM . simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM . simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM . simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 114


State 70

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  318 simple_type: SCOPE . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    relative_type         go to state 115
    simple_name           go to state 89


State 71

  375 simple_name: IDENT .

    $default  reduce using rule 375 (simple_name)


State 72

    1 mdl: mdl_version import_declarations . module_declaration global_declarations
    2    | mdl_version import_declarations . global_declarations
    4    | mdl_version import_declarations . module_declaration
    5    | mdl_version import_declarations .  [$end]
   10 import_declarations: import_declarations . import_declaration
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   16 import_declaration: . IMPORT qualified_imports SEMICOLON
   17                   | . EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 module_declaration: . MODULE annotation_block SEMICOLON
   44                   | . MODULE SEMICOLON
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    IMPORT                      shift, and go to state 6
    MODULE                      shift, and go to state 7
    EXPORT                      shift, and go to state 8
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 5 (mdl)

    global_declarations      go to state 116
    import_declaration       go to state 117
    qualified_name_infix     go to state 75
    module_declaration       go to state 118
    global_declaration       go to state 77
    annotation_declaration   go to state 78
    constant_declaration     go to state 79
    type_declaration         go to state 80
    alias_type_declaration   go to state 81
    struct_type_declaration  go to state 82
    enum_type_declaration    go to state 83
    function_declaration     go to state 84
    type                     go to state 85
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 73

    7 mdl: mdl_version global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 7 (mdl)

    qualified_name_infix     go to state 75
    global_declaration       go to state 120
    annotation_declaration   go to state 78
    constant_declaration     go to state 79
    type_declaration         go to state 80
    alias_type_declaration   go to state 81
    struct_type_declaration  go to state 82
    enum_type_declaration    go to state 83
    function_declaration     go to state 84
    type                     go to state 85
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 74

   11 import_declarations: import_declaration .

    $default  reduce using rule 11 (import_declarations)


State 75

   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
  374 relative_type: qualified_name_infix .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, COLON, ANNOTATION_BLOCK_BEGIN, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE, IDENT]

    SCOPE  shift, and go to state 121

    $default  reduce using rule 374 (relative_type)


State 76

    3 mdl: mdl_version module_declaration . global_declarations
    6    | mdl_version module_declaration .  [$end]
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 6 (mdl)

    global_declarations      go to state 122
    qualified_name_infix     go to state 75
    global_declaration       go to state 77
    annotation_declaration   go to state 78
    constant_declaration     go to state 79
    type_declaration         go to state 80
    alias_type_declaration   go to state 81
    struct_type_declaration  go to state 82
    enum_type_declaration    go to state 83
    function_declaration     go to state 84
    type                     go to state 85
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 77

   13 global_declarations: global_declaration .

    $default  reduce using rule 13 (global_declarations)


State 78

   58 global_declaration: annotation_declaration .

    $default  reduce using rule 58 (global_declaration)


State 79

   59 global_declaration: constant_declaration .

    $default  reduce using rule 59 (global_declaration)


State 80

   60 global_declaration: type_declaration .

    $default  reduce using rule 60 (global_declaration)


State 81

   71 type_declaration: alias_type_declaration .

    $default  reduce using rule 71 (type_declaration)


State 82

   72 type_declaration: struct_type_declaration .

    $default  reduce using rule 72 (type_declaration)


State 83

   73 type_declaration: enum_type_declaration .

    $default  reduce using rule 73 (type_declaration)


State 84

   61 global_declaration: function_declaration .

    $default  reduce using rule 61 (global_declaration)


State 85

   95 function_declaration: type . annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | type . annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | type . annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | type . annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | type . annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | type . annotation_block simple_name parameter_list SEMICOLON
  101                     | type . simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | type . simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | type . simple_name parameter_list annotation_block SEMICOLON
  104                     | type . simple_name parameter_list UNIFORM SEMICOLON
  105                     | type . simple_name parameter_list VARYING SEMICOLON
  106                     | type . simple_name parameter_list SEMICOLON
  107                     | type . annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | type . annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | type . annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | type . annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | type . annotation_block simple_name parameter_list VARYING compound_statement
  112                     | type . annotation_block simple_name parameter_list compound_statement
  113                     | type . simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | type . simple_name parameter_list VARYING annotation_block compound_statement
  115                     | type . simple_name parameter_list annotation_block compound_statement
  116                     | type . simple_name parameter_list UNIFORM compound_statement
  117                     | type . simple_name parameter_list VARYING compound_statement
  118                     | type . simple_name parameter_list compound_statement
  119                     | type . annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | type . annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type . annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type . annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | type . annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | type . annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | type . simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | type . simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type . simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type . simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | type . simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | type . simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | type . annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type . annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | type . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END
  375 simple_name: . IDENT

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    IDENT                   shift, and go to state 71

    annotation_block  go to state 123
    simple_name       go to state 124


State 86

  313 type: array_type .

    $default  reduce using rule 313 (type)


State 87

  314 array_type: simple_type . LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | simple_type . LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | simple_type .  [ANNOTATION_BLOCK_BEGIN, RIGHT_ANGLE_BRACKET, IDENT]

    LEFT_SQUARE_BRACKET  shift, and go to state 125

    $default  reduce using rule 317 (array_type)


State 88

  319 simple_type: relative_type .

    $default  reduce using rule 319 (simple_type)


State 89

   41 qualified_name_infix: simple_name .

    $default  reduce using rule 41 (qualified_name_infix)


State 90

    9 mdl_version: MDL FLOATING_LITERAL SEMICOLON .

    $default  reduce using rule 9 (mdl_version)


State 91

   36 qualified_import_prefix_relative_current: DOT . SCOPE

    SCOPE  shift, and go to state 126


State 92

   38 qualified_import_prefix_relative_parent: DOTDOT . SCOPE

    SCOPE  shift, and go to state 127


State 93

   39 qualified_import_prefix_absolute: SCOPE .

    $default  reduce using rule 39 (qualified_import_prefix_absolute)


State 94

   16 import_declaration: IMPORT qualified_imports . SEMICOLON
   18 qualified_imports: qualified_imports . COMMA qualified_import

    SEMICOLON  shift, and go to state 128
    COMMA      shift, and go to state 129


State 95

   19 qualified_imports: qualified_import .

    $default  reduce using rule 19 (qualified_imports)


State 96

   26 qualified_import: qualified_import_prefix_relative_current . qualified_name_infix qualified_import_suffix
   30                 | qualified_import_prefix_relative_current . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 130
    simple_name           go to state 89


State 97

   27 qualified_import: qualified_import_prefix_relative_parent . qualified_name_infix qualified_import_suffix
   31                 | qualified_import_prefix_relative_parent . qualified_name_infix
   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent . DOTDOT SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  375 simple_name: . IDENT

    DOTDOT  shift, and go to state 131
    IDENT   shift, and go to state 71

    qualified_name_infix  go to state 132
    simple_name           go to state 89


State 98

   28 qualified_import: qualified_import_prefix_absolute . qualified_name_infix qualified_import_suffix
   32                 | qualified_import_prefix_absolute . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 133
    simple_name           go to state 89


State 99

   29 qualified_import: qualified_name_infix . qualified_import_suffix
   33                 | qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 134

    $default  reduce using rule 33 (qualified_import)

    qualified_import_suffix  go to state 135


State 100

   44 module_declaration: MODULE SEMICOLON .

    $default  reduce using rule 44 (module_declaration)


State 101

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  209 annotation_block: ANNOTATION_BLOCK_BEGIN . annotations ANNOTATION_BLOCK_END
  210 annotations: . annotations COMMA annotation
  211            | . annotation
  212 qualified_name: . SCOPE qualified_name_infix
  213               | . qualified_name_infix
  214 annotation: . qualified_name argument_list
  375 simple_name: . IDENT

    SCOPE  shift, and go to state 136
    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 137
    annotations           go to state 138
    qualified_name        go to state 139
    annotation            go to state 140
    simple_name           go to state 89


State 102

   43 module_declaration: MODULE annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 141


State 103

   17 import_declaration: EXPORT USING . qualified_import_prefix IMPORT unqualified_import SEMICOLON
   20 qualified_import_prefix: . qualified_import_prefix_relative_current qualified_name_infix
   21                        | . qualified_import_prefix_relative_parent qualified_name_infix
   22                        | . qualified_import_prefix_absolute qualified_name_infix
   23                        | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  375 simple_name: . IDENT

    DOT     shift, and go to state 91
    DOTDOT  shift, and go to state 92
    SCOPE   shift, and go to state 93
    IDENT   shift, and go to state 71

    qualified_import_prefix                   go to state 142
    qualified_import_prefix_relative_current  go to state 143
    qualified_import_prefix_relative_parent   go to state 144
    qualified_import_prefix_absolute          go to state 145
    qualified_name_infix                      go to state 146
    simple_name                               go to state 89


State 104

   54 global_declaration: EXPORT annotation_declaration .

    $default  reduce using rule 54 (global_declaration)


State 105

   55 global_declaration: EXPORT constant_declaration .

    $default  reduce using rule 55 (global_declaration)


State 106

   56 global_declaration: EXPORT type_declaration .

    $default  reduce using rule 56 (global_declaration)


State 107

   57 global_declaration: EXPORT function_declaration .

    $default  reduce using rule 57 (global_declaration)


State 108

  312 type: UNIFORM array_type .

    $default  reduce using rule 312 (type)


State 109

  311 type: VARYING array_type .

    $default  reduce using rule 311 (type)


State 110

   62 annotation_declaration: ANNOTATION simple_name . parameter_list annotation_block SEMICOLON
   63                       | ANNOTATION simple_name . parameter_list SEMICOLON
  201 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  202               | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 147

    parameter_list  go to state 148


State 111

   64 constant_declaration: CONST type . constant_declarators SEMICOLON
   65 constant_declarators: . constant_declarators COMMA constant_declarator
   66                     | . constant_declarator
   67 constant_declarator: . simple_name argument_list annotation_block
   68                    | . simple_name argument_list
   69                    | . simple_name ASSIGN_OP conditional_expression annotation_block
   70                    | . simple_name ASSIGN_OP conditional_expression
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    constant_declarators  go to state 149
    constant_declarator   go to state 150
    simple_name           go to state 151


State 112

   74 alias_type_declaration: TYPEDEF type . simple_name SEMICOLON
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 152


State 113

   75 struct_type_declaration: STRUCT simple_name . annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | STRUCT simple_name . LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT simple_name . annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT simple_name . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 153

    annotation_block  go to state 154


State 114

   85 enum_type_declaration: ENUM simple_name . annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | ENUM simple_name . LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM simple_name . annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM simple_name . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 155

    annotation_block  go to state 156


State 115

  318 simple_type: SCOPE relative_type .

    $default  reduce using rule 318 (simple_type)


State 116

    2 mdl: mdl_version import_declarations global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 2 (mdl)

    qualified_name_infix     go to state 75
    global_declaration       go to state 120
    annotation_declaration   go to state 78
    constant_declaration     go to state 79
    type_declaration         go to state 80
    alias_type_declaration   go to state 81
    struct_type_declaration  go to state 82
    enum_type_declaration    go to state 83
    function_declaration     go to state 84
    type                     go to state 85
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 117

   10 import_declarations: import_declarations import_declaration .

    $default  reduce using rule 10 (import_declarations)


State 118

    1 mdl: mdl_version import_declarations module_declaration . global_declarations
    4    | mdl_version import_declarations module_declaration .  [$end]
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 4 (mdl)

    global_declarations      go to state 157
    qualified_name_infix     go to state 75
    global_declaration       go to state 77
    annotation_declaration   go to state 78
    constant_declaration     go to state 79
    type_declaration         go to state 80
    alias_type_declaration   go to state 81
    struct_type_declaration  go to state 82
    enum_type_declaration    go to state 83
    function_declaration     go to state 84
    type                     go to state 85
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 119

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   54 global_declaration: EXPORT . annotation_declaration
   55                   | EXPORT . constant_declaration
   56                   | EXPORT . type_declaration
   57                   | EXPORT . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix     go to state 75
    annotation_declaration   go to state 104
    constant_declaration     go to state 105
    type_declaration         go to state 106
    alias_type_declaration   go to state 81
    struct_type_declaration  go to state 82
    enum_type_declaration    go to state 83
    function_declaration     go to state 107
    type                     go to state 85
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 120

   12 global_declarations: global_declarations global_declaration .

    $default  reduce using rule 12 (global_declarations)


State 121

   40 qualified_name_infix: qualified_name_infix SCOPE . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 158


State 122

    3 mdl: mdl_version module_declaration global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 3 (mdl)

    qualified_name_infix     go to state 75
    global_declaration       go to state 120
    annotation_declaration   go to state 78
    constant_declaration     go to state 79
    type_declaration         go to state 80
    alias_type_declaration   go to state 81
    struct_type_declaration  go to state 82
    enum_type_declaration    go to state 83
    function_declaration     go to state 84
    type                     go to state 85
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 123

   95 function_declaration: type annotation_block . simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | type annotation_block . simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | type annotation_block . simple_name parameter_list annotation_block SEMICOLON
   98                     | type annotation_block . simple_name parameter_list UNIFORM SEMICOLON
   99                     | type annotation_block . simple_name parameter_list VARYING SEMICOLON
  100                     | type annotation_block . simple_name parameter_list SEMICOLON
  107                     | type annotation_block . simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | type annotation_block . simple_name parameter_list VARYING annotation_block compound_statement
  109                     | type annotation_block . simple_name parameter_list annotation_block compound_statement
  110                     | type annotation_block . simple_name parameter_list UNIFORM compound_statement
  111                     | type annotation_block . simple_name parameter_list VARYING compound_statement
  112                     | type annotation_block . simple_name parameter_list compound_statement
  119                     | type annotation_block . simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block . simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block . simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block . simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block . simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block . simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | type annotation_block . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 159


State 124

  101 function_declaration: type simple_name . parameter_list UNIFORM annotation_block SEMICOLON
  102                     | type simple_name . parameter_list VARYING annotation_block SEMICOLON
  103                     | type simple_name . parameter_list annotation_block SEMICOLON
  104                     | type simple_name . parameter_list UNIFORM SEMICOLON
  105                     | type simple_name . parameter_list VARYING SEMICOLON
  106                     | type simple_name . parameter_list SEMICOLON
  113                     | type simple_name . parameter_list UNIFORM annotation_block compound_statement
  114                     | type simple_name . parameter_list VARYING annotation_block compound_statement
  115                     | type simple_name . parameter_list annotation_block compound_statement
  116                     | type simple_name . parameter_list UNIFORM compound_statement
  117                     | type simple_name . parameter_list VARYING compound_statement
  118                     | type simple_name . parameter_list compound_statement
  125                     | type simple_name . parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | type simple_name . parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name . parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type simple_name . parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name . parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name . parameter_list ASSIGN_OP comma_expression SEMICOLON
  133                     | type simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  201 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  202               | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 160

    parameter_list  go to state 161


State 125

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  314 array_type: simple_type LEFT_SQUARE_BRACKET . LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | simple_type LEFT_SQUARE_BRACKET . comma_expression RIGHT_SQUARE_BRACKET
  316           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_SQUARE_BRACKET        shift, and go to state 174
    LEFT_ANGLE_BRACKET          shift, and go to state 175
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 178
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 126

   36 qualified_import_prefix_relative_current: DOT SCOPE .

    $default  reduce using rule 36 (qualified_import_prefix_relative_current)


State 127

   38 qualified_import_prefix_relative_parent: DOTDOT SCOPE .

    $default  reduce using rule 38 (qualified_import_prefix_relative_parent)


State 128

   16 import_declaration: IMPORT qualified_imports SEMICOLON .

    $default  reduce using rule 16 (import_declaration)


State 129

   18 qualified_imports: qualified_imports COMMA . qualified_import
   26 qualified_import: . qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | . qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | . qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | . qualified_name_infix qualified_import_suffix
   30                 | . qualified_import_prefix_relative_current qualified_name_infix
   31                 | . qualified_import_prefix_relative_parent qualified_name_infix
   32                 | . qualified_import_prefix_absolute qualified_name_infix
   33                 | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  375 simple_name: . IDENT

    DOT     shift, and go to state 91
    DOTDOT  shift, and go to state 92
    SCOPE   shift, and go to state 93
    IDENT   shift, and go to state 71

    qualified_import                          go to state 205
    qualified_import_prefix_relative_current  go to state 96
    qualified_import_prefix_relative_parent   go to state 97
    qualified_import_prefix_absolute          go to state 98
    qualified_name_infix                      go to state 99
    simple_name                               go to state 89


State 130

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix . qualified_import_suffix
   30                 | qualified_import_prefix_relative_current qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 134

    $default  reduce using rule 30 (qualified_import)

    qualified_import_suffix  go to state 206


State 131

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT . SCOPE

    SCOPE  shift, and go to state 207


State 132

   27 qualified_import: qualified_import_prefix_relative_parent qualified_name_infix . qualified_import_suffix
   31                 | qualified_import_prefix_relative_parent qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 134

    $default  reduce using rule 31 (qualified_import)

    qualified_import_suffix  go to state 208


State 133

   28 qualified_import: qualified_import_prefix_absolute qualified_name_infix . qualified_import_suffix
   32                 | qualified_import_prefix_absolute qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 134

    $default  reduce using rule 32 (qualified_import)

    qualified_import_suffix  go to state 209


State 134

   40 qualified_name_infix: qualified_name_infix SCOPE . simple_name
   42 qualified_import_suffix: SCOPE . STAR
  375 simple_name: . IDENT

    STAR   shift, and go to state 210
    IDENT  shift, and go to state 71

    simple_name  go to state 158


State 135

   29 qualified_import: qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 29 (qualified_import)


State 136

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  212 qualified_name: SCOPE . qualified_name_infix
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 211
    simple_name           go to state 89


State 137

   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
  213 qualified_name: qualified_name_infix .  [LEFT_PARENTHESIS]

    SCOPE  shift, and go to state 121

    $default  reduce using rule 213 (qualified_name)


State 138

  209 annotation_block: ANNOTATION_BLOCK_BEGIN annotations . ANNOTATION_BLOCK_END
  210 annotations: annotations . COMMA annotation

    COMMA                 shift, and go to state 212
    ANNOTATION_BLOCK_END  shift, and go to state 213


State 139

  214 annotation: qualified_name . argument_list
  215 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  216              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 214

    argument_list  go to state 215


State 140

  211 annotations: annotation .

    $default  reduce using rule 211 (annotations)


State 141

   43 module_declaration: MODULE annotation_block SEMICOLON .

    $default  reduce using rule 43 (module_declaration)


State 142

   17 import_declaration: EXPORT USING qualified_import_prefix . IMPORT unqualified_import SEMICOLON

    IMPORT  shift, and go to state 216


State 143

   20 qualified_import_prefix: qualified_import_prefix_relative_current . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 217
    simple_name           go to state 89


State 144

   21 qualified_import_prefix: qualified_import_prefix_relative_parent . qualified_name_infix
   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent . DOTDOT SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  375 simple_name: . IDENT

    DOTDOT  shift, and go to state 131
    IDENT   shift, and go to state 71

    qualified_name_infix  go to state 218
    simple_name           go to state 89


State 145

   22 qualified_import_prefix: qualified_import_prefix_absolute . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 219
    simple_name           go to state 89


State 146

   23 qualified_import_prefix: qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 121

    $default  reduce using rule 23 (qualified_import_prefix)


State 147

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  201 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  202               | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  203 parameters: . parameters COMMA parameter
  204           | . parameter
  205 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  206          | . type simple_name ASSIGN_OP assignment_expression
  207          | . type simple_name annotation_block
  208          | . type simple_name
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_PARENTHESIS           shift, and go to state 220
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    parameters            go to state 221
    parameter             go to state 222
    type                  go to state 223
    array_type            go to state 86
    simple_type           go to state 87
    relative_type         go to state 88
    simple_name           go to state 89


State 148

   62 annotation_declaration: ANNOTATION simple_name parameter_list . annotation_block SEMICOLON
   63                       | ANNOTATION simple_name parameter_list . SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 224
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 225


State 149

   64 constant_declaration: CONST type constant_declarators . SEMICOLON
   65 constant_declarators: constant_declarators . COMMA constant_declarator

    SEMICOLON  shift, and go to state 226
    COMMA      shift, and go to state 227


State 150

   66 constant_declarators: constant_declarator .

    $default  reduce using rule 66 (constant_declarators)


State 151

   67 constant_declarator: simple_name . argument_list annotation_block
   68                    | simple_name . argument_list
   69                    | simple_name . ASSIGN_OP conditional_expression annotation_block
   70                    | simple_name . ASSIGN_OP conditional_expression
  215 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  216              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    ASSIGN_OP         shift, and go to state 228
    LEFT_PARENTHESIS  shift, and go to state 214

    argument_list  go to state 229


State 152

   74 alias_type_declaration: TYPEDEF type simple_name . SEMICOLON

    SEMICOLON  shift, and go to state 230


State 153

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   76 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE . struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT simple_name LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   79 struct_field_declarators: . struct_field_declarators struct_field_declarator
   80                         | . struct_field_declarator
   81 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | . type simple_name annotation_block SEMICOLON
   84                        | . type simple_name SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 231
    IDENT                       shift, and go to state 71

    qualified_name_infix      go to state 75
    struct_field_declarators  go to state 232
    struct_field_declarator   go to state 233
    type                      go to state 234
    array_type                go to state 86
    simple_type               go to state 87
    relative_type             go to state 88
    simple_name               go to state 89


State 154

   75 struct_type_declaration: STRUCT simple_name annotation_block . LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT simple_name annotation_block . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    LEFT_CURLY_BRACE  shift, and go to state 235


State 155

   86 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE . enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM simple_name LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   89 enum_value_declarators: . enum_value_declarators COMMA enum_value_declarator
   90                       | . enum_value_declarator
   91 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   92                      | . simple_name ASSIGN_OP assignment_expression
   93                      | . simple_name annotation_block
   94                      | . simple_name
  375 simple_name: . IDENT

    RIGHT_CURLY_BRACE  shift, and go to state 236
    IDENT              shift, and go to state 71

    enum_value_declarators  go to state 237
    enum_value_declarator   go to state 238
    simple_name             go to state 239


State 156

   85 enum_type_declaration: ENUM simple_name annotation_block . LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM simple_name annotation_block . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    LEFT_CURLY_BRACE  shift, and go to state 240


State 157

    1 mdl: mdl_version import_declarations module_declaration global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 1 (mdl)

    qualified_name_infix     go to state 75
    global_declaration       go to state 120
    annotation_declaration   go to state 78
    constant_declaration     go to state 79
    type_declaration         go to state 80
    alias_type_declaration   go to state 81
    struct_type_declaration  go to state 82
    enum_type_declaration    go to state 83
    function_declaration     go to state 84
    type                     go to state 85
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 158

   40 qualified_name_infix: qualified_name_infix SCOPE simple_name .

    $default  reduce using rule 40 (qualified_name_infix)


State 159

   95 function_declaration: type annotation_block simple_name . parameter_list UNIFORM annotation_block SEMICOLON
   96                     | type annotation_block simple_name . parameter_list VARYING annotation_block SEMICOLON
   97                     | type annotation_block simple_name . parameter_list annotation_block SEMICOLON
   98                     | type annotation_block simple_name . parameter_list UNIFORM SEMICOLON
   99                     | type annotation_block simple_name . parameter_list VARYING SEMICOLON
  100                     | type annotation_block simple_name . parameter_list SEMICOLON
  107                     | type annotation_block simple_name . parameter_list UNIFORM annotation_block compound_statement
  108                     | type annotation_block simple_name . parameter_list VARYING annotation_block compound_statement
  109                     | type annotation_block simple_name . parameter_list annotation_block compound_statement
  110                     | type annotation_block simple_name . parameter_list UNIFORM compound_statement
  111                     | type annotation_block simple_name . parameter_list VARYING compound_statement
  112                     | type annotation_block simple_name . parameter_list compound_statement
  119                     | type annotation_block simple_name . parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block simple_name . parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name . parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block simple_name . parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name . parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block simple_name . parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | type annotation_block simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  201 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  202               | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 241

    parameter_list  go to state 242


State 160

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  133 function_declaration: type simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  201 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  202               | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  203 parameters: . parameters COMMA parameter
  204           | . parameter
  205 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  206          | . type simple_name ASSIGN_OP assignment_expression
  207          | . type simple_name annotation_block
  208          | . type simple_name
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    STAR                        shift, and go to state 243
    RIGHT_PARENTHESIS           shift, and go to state 220
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    parameters            go to state 221
    parameter             go to state 222
    type                  go to state 223
    array_type            go to state 86
    simple_type           go to state 87
    relative_type         go to state 88
    simple_name           go to state 89


State 161

  101 function_declaration: type simple_name parameter_list . UNIFORM annotation_block SEMICOLON
  102                     | type simple_name parameter_list . VARYING annotation_block SEMICOLON
  103                     | type simple_name parameter_list . annotation_block SEMICOLON
  104                     | type simple_name parameter_list . UNIFORM SEMICOLON
  105                     | type simple_name parameter_list . VARYING SEMICOLON
  106                     | type simple_name parameter_list . SEMICOLON
  113                     | type simple_name parameter_list . UNIFORM annotation_block compound_statement
  114                     | type simple_name parameter_list . VARYING annotation_block compound_statement
  115                     | type simple_name parameter_list . annotation_block compound_statement
  116                     | type simple_name parameter_list . UNIFORM compound_statement
  117                     | type simple_name parameter_list . VARYING compound_statement
  118                     | type simple_name parameter_list . compound_statement
  125                     | type simple_name parameter_list . UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | type simple_name parameter_list . VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name parameter_list . annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type simple_name parameter_list . UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name parameter_list . VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name parameter_list . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 244
    UNIFORM                 shift, and go to state 245
    VARYING                 shift, and go to state 246
    ASSIGN_OP               shift, and go to state 247
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 248

    compound_statement  go to state 249
    annotation_block    go to state 250


State 162

  310 string_literal: STRING_LITERAL .

    $default  reduce using rule 310 (string_literal)


State 163

  305 boolean_literal: TRUE .

    $default  reduce using rule 305 (boolean_literal)


State 164

  306 boolean_literal: FALSE .

    $default  reduce using rule 306 (boolean_literal)


State 165

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
  299 let_expression: LET . variable_declaration IN unary_expression
  300               | LET . LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    LEFT_CURLY_BRACE            shift, and go to state 251
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    variable_declaration  go to state 252
    type                  go to state 253
    array_type            go to state 86
    simple_type           go to state 87
    relative_type         go to state 88
    simple_name           go to state 89


State 166

  298 cast_expression: CAST . LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

    LEFT_ANGLE_BRACKET  shift, and go to state 254


State 167

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  271                 | BITWISE_COMPLEMENT_OP . unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 255
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 168

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  272                 | LOGICAL_NOT_OP . unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 256
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 169

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  273                 | POSITIVE_OP . unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 257
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 170

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  274                 | NEGATIVE_OP . unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 258
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 171

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  275                 | INCREMENT_OP . unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 259
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 172

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  276                 | DECREMENT_OP . unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 260
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 173

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  291                           | LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 261
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 174

  316 array_type: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 316 (array_type)


State 175

  314 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET . simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 262


State 176

  307 integer_literal: INTEGER_LITERAL .

    $default  reduce using rule 307 (integer_literal)


State 177

  308 floating_literal: FLOATING_LITERAL .

    $default  reduce using rule 308 (floating_literal)


State 178

  315 array_type: simple_type LEFT_SQUARE_BRACKET comma_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 263


State 179

  225 comma_expression: assignment_expression . COMMA comma_expression
  226                 | assignment_expression .  [SEMICOLON, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET]

    COMMA  shift, and go to state 264

    $default  reduce using rule 226 (comma_expression)


State 180

  239 assignment_expression: conditional_expression .

    $default  reduce using rule 239 (assignment_expression)


State 181

  227 assignment_expression: logical_or_expression . ASSIGN_OP assignment_expression
  228                      | logical_or_expression . BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | logical_or_expression . BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | logical_or_expression . BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | logical_or_expression . SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | logical_or_expression . SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | logical_or_expression . UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | logical_or_expression . MULTIPLY_ASSIGN_OP assignment_expression
  235                      | logical_or_expression . DIVIDE_ASSIGN_OP assignment_expression
  236                      | logical_or_expression . MODULO_ASSIGN_OP assignment_expression
  237                      | logical_or_expression . PLUS_ASSIGN_OP assignment_expression
  238                      | logical_or_expression . MINUS_ASSIGN_OP assignment_expression
  240 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | logical_or_expression .  [SEMICOLON, COMMA, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  242 logical_or_expression: logical_or_expression . LOGICAL_OR_OP logical_and_expression

    ASSIGN_OP                       shift, and go to state 265
    BITWISE_OR_ASSIGN_OP            shift, and go to state 266
    BITWISE_AND_ASSIGN_OP           shift, and go to state 267
    BITWISE_XOR_ASSIGN_OP           shift, and go to state 268
    SHIFT_LEFT_ASSIGN_OP            shift, and go to state 269
    SHIFT_RIGHT_ASSIGN_OP           shift, and go to state 270
    UNSIGNED_SHIFT_RIGHT_ASSIGN_OP  shift, and go to state 271
    MULTIPLY_ASSIGN_OP              shift, and go to state 272
    DIVIDE_ASSIGN_OP                shift, and go to state 273
    MODULO_ASSIGN_OP                shift, and go to state 274
    PLUS_ASSIGN_OP                  shift, and go to state 275
    MINUS_ASSIGN_OP                 shift, and go to state 276
    CONDITIONAL_OP                  shift, and go to state 277
    LOGICAL_OR_OP                   shift, and go to state 278

    $default  reduce using rule 241 (conditional_expression)


State 182

  243 logical_or_expression: logical_and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  244 logical_and_expression: logical_and_expression . LOGICAL_AND_OP inclusive_or_expression

    LOGICAL_AND_OP  shift, and go to state 279

    $default  reduce using rule 243 (logical_or_expression)


State 183

  245 logical_and_expression: inclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  246 inclusive_or_expression: inclusive_or_expression . BITWISE_OR_OP exclusive_or_expression

    BITWISE_OR_OP  shift, and go to state 280

    $default  reduce using rule 245 (logical_and_expression)


State 184

  247 inclusive_or_expression: exclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  248 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR_OP and_expression

    BITWISE_XOR_OP  shift, and go to state 281

    $default  reduce using rule 247 (inclusive_or_expression)


State 185

  249 exclusive_or_expression: and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  250 and_expression: and_expression . BITWISE_AND_OP equality_expression

    BITWISE_AND_OP  shift, and go to state 282

    $default  reduce using rule 249 (exclusive_or_expression)


State 186

  251 and_expression: equality_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  252 equality_expression: equality_expression . EQUAL_OP relational_expression
  253                    | equality_expression . NOT_EQUAL_OP relational_expression

    EQUAL_OP      shift, and go to state 283
    NOT_EQUAL_OP  shift, and go to state 284

    $default  reduce using rule 251 (and_expression)


State 187

  254 equality_expression: relational_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  255 relational_expression: relational_expression . LEFT_ANGLE_BRACKET shift_expression
  256                      | relational_expression . LESS_OR_EQUAL_OP shift_expression
  257                      | relational_expression . GREATER_OR_EQUAL_OP shift_expression
  258                      | relational_expression . RIGHT_ANGLE_BRACKET shift_expression

    LESS_OR_EQUAL_OP     shift, and go to state 285
    GREATER_OR_EQUAL_OP  shift, and go to state 286
    LEFT_ANGLE_BRACKET   shift, and go to state 287
    RIGHT_ANGLE_BRACKET  shift, and go to state 288

    $default  reduce using rule 254 (equality_expression)


State 188

  259 relational_expression: shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  260 shift_expression: shift_expression . SHIFT_LEFT_OP additive_expression
  261                 | shift_expression . SHIFT_RIGHT_OP additive_expression
  262                 | shift_expression . UNSIGNED_SHIFT_RIGHT_OP additive_expression

    SHIFT_LEFT_OP            shift, and go to state 289
    SHIFT_RIGHT_OP           shift, and go to state 290
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 291

    $default  reduce using rule 259 (relational_expression)


State 189

  263 shift_expression: additive_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  264 additive_expression: additive_expression . POSITIVE_OP multiplicative_expression
  265                    | additive_expression . NEGATIVE_OP multiplicative_expression

    POSITIVE_OP  shift, and go to state 292
    NEGATIVE_OP  shift, and go to state 293

    $default  reduce using rule 263 (shift_expression)


State 190

  266 additive_expression: multiplicative_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, POSITIVE_OP, NEGATIVE_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  267 multiplicative_expression: multiplicative_expression . STAR unary_expression
  268                          | multiplicative_expression . DIVIDE_OP unary_expression
  269                          | multiplicative_expression . MODULO_OP unary_expression

    DIVIDE_OP  shift, and go to state 294
    MODULO_OP  shift, and go to state 295
    STAR       shift, and go to state 296

    $default  reduce using rule 266 (additive_expression)


State 191

  270 multiplicative_expression: unary_expression .

    $default  reduce using rule 270 (multiplicative_expression)


State 192

  277 unary_expression: postfix_expression .

    $default  reduce using rule 277 (unary_expression)


State 193

  215 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  216              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS
  279 postfix_expression: matched_postfix_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, STAR, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  281 matched_postfix_expression: matched_postfix_expression . INCREMENT_OP
  282                           | matched_postfix_expression . DECREMENT_OP
  283                           | matched_postfix_expression . DOT simple_name
  284                           | matched_postfix_expression . argument_list
  285                           | matched_postfix_expression . LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET

    INCREMENT_OP         shift, and go to state 297
    DECREMENT_OP         shift, and go to state 298
    DOT                  shift, and go to state 299
    LEFT_PARENTHESIS     shift, and go to state 214
    LEFT_SQUARE_BRACKET  shift, and go to state 300

    $default  reduce using rule 279 (postfix_expression)

    argument_list  go to state 301


State 194

  286 matched_postfix_expression: matched_primary_expression .

    $default  reduce using rule 286 (matched_postfix_expression)


State 195

  215 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  216              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS
  280 postfix_expression: unmatched_postfix_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, STAR, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  292 unmatched_postfix_expression: unmatched_postfix_expression . INCREMENT_OP
  293                             | unmatched_postfix_expression . DECREMENT_OP
  294                             | unmatched_postfix_expression . DOT simple_name
  295                             | unmatched_postfix_expression . argument_list

    INCREMENT_OP      shift, and go to state 302
    DECREMENT_OP      shift, and go to state 303
    DOT               shift, and go to state 304
    LEFT_PARENTHESIS  shift, and go to state 214

    $default  reduce using rule 280 (postfix_expression)

    argument_list  go to state 305


State 196

  296 unmatched_postfix_expression: unmatched_primary_expression .

    $default  reduce using rule 296 (unmatched_postfix_expression)


State 197

  287 matched_postfix_expression: cast_expression .

    $default  reduce using rule 287 (matched_postfix_expression)


State 198

  278 unary_expression: let_expression .

    $default  reduce using rule 278 (unary_expression)


State 199

  290 matched_primary_expression: literal_expression .

    $default  reduce using rule 290 (matched_primary_expression)


State 200

  301 literal_expression: boolean_literal .

    $default  reduce using rule 301 (literal_expression)


State 201

  302 literal_expression: integer_literal .

    $default  reduce using rule 302 (literal_expression)


State 202

  303 literal_expression: floating_literal .

    $default  reduce using rule 303 (literal_expression)


State 203

  304 literal_expression: string_literal .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, COLON, ANNOTATION_BLOCK_BEGIN, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  309 string_literal: string_literal . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 306

    $default  reduce using rule 304 (literal_expression)


State 204

  288 matched_primary_expression: simple_type . LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  297 unmatched_primary_expression: simple_type .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, COLON, ANNOTATION_BLOCK_BEGIN, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]

    LEFT_SQUARE_BRACKET  shift, and go to state 307

    $default  reduce using rule 297 (unmatched_primary_expression)


State 205

   18 qualified_imports: qualified_imports COMMA qualified_import .

    $default  reduce using rule 18 (qualified_imports)


State 206

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 26 (qualified_import)


State 207

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE .

    $default  reduce using rule 37 (qualified_import_prefix_relative_parent)


State 208

   27 qualified_import: qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 27 (qualified_import)


State 209

   28 qualified_import: qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 28 (qualified_import)


State 210

   42 qualified_import_suffix: SCOPE STAR .

    $default  reduce using rule 42 (qualified_import_suffix)


State 211

   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
  212 qualified_name: SCOPE qualified_name_infix .  [LEFT_PARENTHESIS]

    SCOPE  shift, and go to state 121

    $default  reduce using rule 212 (qualified_name)


State 212

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  210 annotations: annotations COMMA . annotation
  212 qualified_name: . SCOPE qualified_name_infix
  213               | . qualified_name_infix
  214 annotation: . qualified_name argument_list
  375 simple_name: . IDENT

    SCOPE  shift, and go to state 136
    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 137
    qualified_name        go to state 139
    annotation            go to state 308
    simple_name           go to state 89


State 213

  209 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END .

    $default  reduce using rule 209 (annotation_block)


State 214

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  215 argument_list: LEFT_PARENTHESIS . positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  216              | LEFT_PARENTHESIS . named_arguments RIGHT_PARENTHESIS
  217              | LEFT_PARENTHESIS . positional_arguments RIGHT_PARENTHESIS
  218              | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  219 named_arguments: . named_arguments COMMA named_argument
  220                | . named_argument
  221 positional_arguments: . positional_arguments COMMA positional_argument
  222                     | . positional_argument
  223 named_argument: . simple_name COLON assignment_expression
  224 positional_argument: . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 309
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    named_arguments               go to state 310
    positional_arguments          go to state 311
    named_argument                go to state 312
    positional_argument           go to state 313
    assignment_expression         go to state 314
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 315


State 215

  214 annotation: qualified_name argument_list .

    $default  reduce using rule 214 (annotation)


State 216

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT . unqualified_import SEMICOLON
   24 unqualified_import: . unqualified_import_simple_names
   25                   | . STAR
   34 unqualified_import_simple_names: . unqualified_import_simple_names COMMA simple_name
   35                                | . simple_name
  375 simple_name: . IDENT

    STAR   shift, and go to state 316
    IDENT  shift, and go to state 71

    unqualified_import               go to state 317
    unqualified_import_simple_names  go to state 318
    simple_name                      go to state 319


State 217

   20 qualified_import_prefix: qualified_import_prefix_relative_current qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 121

    $default  reduce using rule 20 (qualified_import_prefix)


State 218

   21 qualified_import_prefix: qualified_import_prefix_relative_parent qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 121

    $default  reduce using rule 21 (qualified_import_prefix)


State 219

   22 qualified_import_prefix: qualified_import_prefix_absolute qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 121

    $default  reduce using rule 22 (qualified_import_prefix)


State 220

  202 parameter_list: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 202 (parameter_list)


State 221

  201 parameter_list: LEFT_PARENTHESIS parameters . RIGHT_PARENTHESIS
  203 parameters: parameters . COMMA parameter

    COMMA              shift, and go to state 320
    RIGHT_PARENTHESIS  shift, and go to state 321


State 222

  204 parameters: parameter .

    $default  reduce using rule 204 (parameters)


State 223

  205 parameter: type . simple_name ASSIGN_OP assignment_expression annotation_block
  206          | type . simple_name ASSIGN_OP assignment_expression
  207          | type . simple_name annotation_block
  208          | type . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 322


State 224

   63 annotation_declaration: ANNOTATION simple_name parameter_list SEMICOLON .

    $default  reduce using rule 63 (annotation_declaration)


State 225

   62 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 323


State 226

   64 constant_declaration: CONST type constant_declarators SEMICOLON .

    $default  reduce using rule 64 (constant_declaration)


State 227

   65 constant_declarators: constant_declarators COMMA . constant_declarator
   67 constant_declarator: . simple_name argument_list annotation_block
   68                    | . simple_name argument_list
   69                    | . simple_name ASSIGN_OP conditional_expression annotation_block
   70                    | . simple_name ASSIGN_OP conditional_expression
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    constant_declarator  go to state 324
    simple_name          go to state 151


State 228

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   69 constant_declarator: simple_name ASSIGN_OP . conditional_expression annotation_block
   70                    | simple_name ASSIGN_OP . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    conditional_expression        go to state 325
    logical_or_expression         go to state 326
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 229

   67 constant_declarator: simple_name argument_list . annotation_block
   68                    | simple_name argument_list .  [SEMICOLON, COMMA]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 68 (constant_declarator)

    annotation_block  go to state 327


State 230

   74 alias_type_declaration: TYPEDEF type simple_name SEMICOLON .

    $default  reduce using rule 74 (alias_type_declaration)


State 231

   78 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 328


State 232

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   76 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators . RIGHT_CURLY_BRACE SEMICOLON
   79 struct_field_declarators: struct_field_declarators . struct_field_declarator
   81 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | . type simple_name annotation_block SEMICOLON
   84                        | . type simple_name SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 329
    IDENT                       shift, and go to state 71

    qualified_name_infix     go to state 75
    struct_field_declarator  go to state 330
    type                     go to state 234
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 233

   80 struct_field_declarators: struct_field_declarator .

    $default  reduce using rule 80 (struct_field_declarators)


State 234

   81 struct_field_declarator: type . simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | type . simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | type . simple_name annotation_block SEMICOLON
   84                        | type . simple_name SEMICOLON
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 331


State 235

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   75 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE . struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT simple_name annotation_block LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   79 struct_field_declarators: . struct_field_declarators struct_field_declarator
   80                         | . struct_field_declarator
   81 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | . type simple_name annotation_block SEMICOLON
   84                        | . type simple_name SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 332
    IDENT                       shift, and go to state 71

    qualified_name_infix      go to state 75
    struct_field_declarators  go to state 333
    struct_field_declarator   go to state 233
    type                      go to state 234
    array_type                go to state 86
    simple_type               go to state 87
    relative_type             go to state 88
    simple_name               go to state 89


State 236

   88 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 334


State 237

   86 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators . RIGHT_CURLY_BRACE SEMICOLON
   89 enum_value_declarators: enum_value_declarators . COMMA enum_value_declarator

    COMMA              shift, and go to state 335
    RIGHT_CURLY_BRACE  shift, and go to state 336


State 238

   90 enum_value_declarators: enum_value_declarator .

    $default  reduce using rule 90 (enum_value_declarators)


State 239

   91 enum_value_declarator: simple_name . ASSIGN_OP assignment_expression annotation_block
   92                      | simple_name . ASSIGN_OP assignment_expression
   93                      | simple_name . annotation_block
   94                      | simple_name .  [COMMA, RIGHT_CURLY_BRACE]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 337
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 94 (enum_value_declarator)

    annotation_block  go to state 338


State 240

   85 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE . enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM simple_name annotation_block LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   89 enum_value_declarators: . enum_value_declarators COMMA enum_value_declarator
   90                       | . enum_value_declarator
   91 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   92                      | . simple_name ASSIGN_OP assignment_expression
   93                      | . simple_name annotation_block
   94                      | . simple_name
  375 simple_name: . IDENT

    RIGHT_CURLY_BRACE  shift, and go to state 339
    IDENT              shift, and go to state 71

    enum_value_declarators  go to state 340
    enum_value_declarator   go to state 238
    simple_name             go to state 239


State 241

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  201 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  202               | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  203 parameters: . parameters COMMA parameter
  204           | . parameter
  205 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  206          | . type simple_name ASSIGN_OP assignment_expression
  207          | . type simple_name annotation_block
  208          | . type simple_name
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    STAR                        shift, and go to state 341
    RIGHT_PARENTHESIS           shift, and go to state 220
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    parameters            go to state 221
    parameter             go to state 222
    type                  go to state 223
    array_type            go to state 86
    simple_type           go to state 87
    relative_type         go to state 88
    simple_name           go to state 89


State 242

   95 function_declaration: type annotation_block simple_name parameter_list . UNIFORM annotation_block SEMICOLON
   96                     | type annotation_block simple_name parameter_list . VARYING annotation_block SEMICOLON
   97                     | type annotation_block simple_name parameter_list . annotation_block SEMICOLON
   98                     | type annotation_block simple_name parameter_list . UNIFORM SEMICOLON
   99                     | type annotation_block simple_name parameter_list . VARYING SEMICOLON
  100                     | type annotation_block simple_name parameter_list . SEMICOLON
  107                     | type annotation_block simple_name parameter_list . UNIFORM annotation_block compound_statement
  108                     | type annotation_block simple_name parameter_list . VARYING annotation_block compound_statement
  109                     | type annotation_block simple_name parameter_list . annotation_block compound_statement
  110                     | type annotation_block simple_name parameter_list . UNIFORM compound_statement
  111                     | type annotation_block simple_name parameter_list . VARYING compound_statement
  112                     | type annotation_block simple_name parameter_list . compound_statement
  119                     | type annotation_block simple_name parameter_list . UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block simple_name parameter_list . VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name parameter_list . annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block simple_name parameter_list . UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name parameter_list . VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block simple_name parameter_list . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 342
    UNIFORM                 shift, and go to state 343
    VARYING                 shift, and go to state 344
    ASSIGN_OP               shift, and go to state 345
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 248

    compound_statement  go to state 346
    annotation_block    go to state 347


State 243

  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 348


State 244

  106 function_declaration: type simple_name parameter_list SEMICOLON .

    $default  reduce using rule 106 (function_declaration)


State 245

  101 function_declaration: type simple_name parameter_list UNIFORM . annotation_block SEMICOLON
  104                     | type simple_name parameter_list UNIFORM . SEMICOLON
  113                     | type simple_name parameter_list UNIFORM . annotation_block compound_statement
  116                     | type simple_name parameter_list UNIFORM . compound_statement
  125                     | type simple_name parameter_list UNIFORM . annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type simple_name parameter_list UNIFORM . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 349
    ASSIGN_OP               shift, and go to state 350
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 248

    compound_statement  go to state 351
    annotation_block    go to state 352


State 246

  102 function_declaration: type simple_name parameter_list VARYING . annotation_block SEMICOLON
  105                     | type simple_name parameter_list VARYING . SEMICOLON
  114                     | type simple_name parameter_list VARYING . annotation_block compound_statement
  117                     | type simple_name parameter_list VARYING . compound_statement
  126                     | type simple_name parameter_list VARYING . annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name parameter_list VARYING . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 353
    ASSIGN_OP               shift, and go to state 354
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 248

    compound_statement  go to state 355
    annotation_block    go to state 356


State 247

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  130 function_declaration: type simple_name parameter_list ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 357
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 248

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  135                   | LEFT_CURLY_BRACE . statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  136                   | LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
  137 statements: . statements statement
  138           | . statement
  139 statement: . matched_statement
  140          | . unmatched_statement
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    RIGHT_CURLY_BRACE           shift, and go to state 367
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    statements                    go to state 372
    statement                     go to state 373
    matched_statement             go to state 374
    unmatched_statement           go to state 375
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 249

  118 function_declaration: type simple_name parameter_list compound_statement .

    $default  reduce using rule 118 (function_declaration)


State 250

  103 function_declaration: type simple_name parameter_list annotation_block . SEMICOLON
  115                     | type simple_name parameter_list annotation_block . compound_statement
  127                     | type simple_name parameter_list annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 390
    ASSIGN_OP         shift, and go to state 391
    LEFT_CURLY_BRACE  shift, and go to state 248

    compound_statement  go to state 392


State 251

   14 variable_declarations: . variable_declarations variable_declaration
   15                      | . variable_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
  300 let_expression: LET LEFT_CURLY_BRACE . variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    variable_declarations  go to state 393
    qualified_name_infix   go to state 75
    variable_declaration   go to state 394
    type                   go to state 253
    array_type             go to state 86
    simple_type            go to state 87
    relative_type          go to state 88
    simple_name            go to state 89


State 252

  299 let_expression: LET variable_declaration . IN unary_expression

    IN  shift, and go to state 395


State 253

   45 variable_declaration: type . variable_declarators SEMICOLON
   46 variable_declarators: . variable_declarators COMMA variable_declarator
   47                     | . variable_declarator
   48 variable_declarator: . simple_name argument_list annotation_block
   49                    | . simple_name argument_list
   50                    | . simple_name ASSIGN_OP assignment_expression annotation_block
   51                    | . simple_name ASSIGN_OP assignment_expression
   52                    | . simple_name annotation_block
   53                    | . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    variable_declarators  go to state 396
    variable_declarator   go to state 397
    simple_name           go to state 398


State 254

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  298 cast_expression: CAST LEFT_ANGLE_BRACKET . type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    type                  go to state 399
    array_type            go to state 86
    simple_type           go to state 87
    relative_type         go to state 88
    simple_name           go to state 89


State 255

  271 unary_expression: BITWISE_COMPLEMENT_OP unary_expression .

    $default  reduce using rule 271 (unary_expression)


State 256

  272 unary_expression: LOGICAL_NOT_OP unary_expression .

    $default  reduce using rule 272 (unary_expression)


State 257

  273 unary_expression: POSITIVE_OP unary_expression .

    $default  reduce using rule 273 (unary_expression)


State 258

  274 unary_expression: NEGATIVE_OP unary_expression .

    $default  reduce using rule 274 (unary_expression)


State 259

  275 unary_expression: INCREMENT_OP unary_expression .

    $default  reduce using rule 275 (unary_expression)


State 260

  276 unary_expression: DECREMENT_OP unary_expression .

    $default  reduce using rule 276 (unary_expression)


State 261

  291 matched_primary_expression: LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 400


State 262

  314 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name . RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 401


State 263

  315 array_type: simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 315 (array_type)


State 264

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  225 comma_expression: . assignment_expression COMMA comma_expression
  225                 | assignment_expression COMMA . comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 402
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 265

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  227                      | logical_or_expression ASSIGN_OP . assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 403
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 266

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  228                      | logical_or_expression BITWISE_OR_ASSIGN_OP . assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 404
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 267

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  229                      | logical_or_expression BITWISE_AND_ASSIGN_OP . assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 405
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 268

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  230                      | logical_or_expression BITWISE_XOR_ASSIGN_OP . assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 406
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 269

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  231                      | logical_or_expression SHIFT_LEFT_ASSIGN_OP . assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 407
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 270

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  232                      | logical_or_expression SHIFT_RIGHT_ASSIGN_OP . assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 408
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 271

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP . assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 409
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 272

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  234                      | logical_or_expression MULTIPLY_ASSIGN_OP . assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 410
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 273

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  235                      | logical_or_expression DIVIDE_ASSIGN_OP . assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 411
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 274

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  236                      | logical_or_expression MODULO_ASSIGN_OP . assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 412
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 275

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  237                      | logical_or_expression PLUS_ASSIGN_OP . assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 413
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 276

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  238                      | logical_or_expression MINUS_ASSIGN_OP . assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 414
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 277

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  240                       | logical_or_expression CONDITIONAL_OP . comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 415
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 278

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  242 logical_or_expression: logical_or_expression LOGICAL_OR_OP . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    logical_and_expression        go to state 416
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 279

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  244 logical_and_expression: logical_and_expression LOGICAL_AND_OP . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    inclusive_or_expression       go to state 417
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 280

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  246 inclusive_or_expression: inclusive_or_expression BITWISE_OR_OP . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    exclusive_or_expression       go to state 418
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 281

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  248 exclusive_or_expression: exclusive_or_expression BITWISE_XOR_OP . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    and_expression                go to state 419
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 282

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  250 and_expression: and_expression BITWISE_AND_OP . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    equality_expression           go to state 420
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 283

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  252 equality_expression: equality_expression EQUAL_OP . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    relational_expression         go to state 421
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 284

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  253 equality_expression: equality_expression NOT_EQUAL_OP . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    relational_expression         go to state 422
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 285

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  256 relational_expression: relational_expression LESS_OR_EQUAL_OP . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    shift_expression              go to state 423
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 286

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  257 relational_expression: relational_expression GREATER_OR_EQUAL_OP . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    shift_expression              go to state 424
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 287

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  255 relational_expression: relational_expression LEFT_ANGLE_BRACKET . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    shift_expression              go to state 425
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 288

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  258 relational_expression: relational_expression RIGHT_ANGLE_BRACKET . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    shift_expression              go to state 426
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 289

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  260 shift_expression: shift_expression SHIFT_LEFT_OP . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    additive_expression           go to state 427
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 290

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  261 shift_expression: shift_expression SHIFT_RIGHT_OP . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    additive_expression           go to state 428
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 291

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  262 shift_expression: shift_expression UNSIGNED_SHIFT_RIGHT_OP . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    additive_expression           go to state 429
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 292

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  264 additive_expression: additive_expression POSITIVE_OP . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    multiplicative_expression     go to state 430
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 293

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  265 additive_expression: additive_expression NEGATIVE_OP . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    multiplicative_expression     go to state 431
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 294

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  268 multiplicative_expression: multiplicative_expression DIVIDE_OP . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 432
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 295

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  269 multiplicative_expression: multiplicative_expression MODULO_OP . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 433
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 296

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  267 multiplicative_expression: multiplicative_expression STAR . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 434
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 297

  281 matched_postfix_expression: matched_postfix_expression INCREMENT_OP .

    $default  reduce using rule 281 (matched_postfix_expression)


State 298

  282 matched_postfix_expression: matched_postfix_expression DECREMENT_OP .

    $default  reduce using rule 282 (matched_postfix_expression)


State 299

  283 matched_postfix_expression: matched_postfix_expression DOT . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 435


State 300

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  285                           | matched_postfix_expression LEFT_SQUARE_BRACKET . comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 436
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 301

  284 matched_postfix_expression: matched_postfix_expression argument_list .

    $default  reduce using rule 284 (matched_postfix_expression)


State 302

  292 unmatched_postfix_expression: unmatched_postfix_expression INCREMENT_OP .

    $default  reduce using rule 292 (unmatched_postfix_expression)


State 303

  293 unmatched_postfix_expression: unmatched_postfix_expression DECREMENT_OP .

    $default  reduce using rule 293 (unmatched_postfix_expression)


State 304

  294 unmatched_postfix_expression: unmatched_postfix_expression DOT . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 437


State 305

  295 unmatched_postfix_expression: unmatched_postfix_expression argument_list .

    $default  reduce using rule 295 (unmatched_postfix_expression)


State 306

  309 string_literal: string_literal STRING_LITERAL .

    $default  reduce using rule 309 (string_literal)


State 307

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  288                           | simple_type LEFT_SQUARE_BRACKET . comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  289                           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_SQUARE_BRACKET        shift, and go to state 438
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 439
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 308

  210 annotations: annotations COMMA annotation .

    $default  reduce using rule 210 (annotations)


State 309

  218 argument_list: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 218 (argument_list)


State 310

  216 argument_list: LEFT_PARENTHESIS named_arguments . RIGHT_PARENTHESIS
  219 named_arguments: named_arguments . COMMA named_argument

    COMMA              shift, and go to state 440
    RIGHT_PARENTHESIS  shift, and go to state 441


State 311

  215 argument_list: LEFT_PARENTHESIS positional_arguments . COMMA named_arguments RIGHT_PARENTHESIS
  217              | LEFT_PARENTHESIS positional_arguments . RIGHT_PARENTHESIS
  221 positional_arguments: positional_arguments . COMMA positional_argument

    COMMA              shift, and go to state 442
    RIGHT_PARENTHESIS  shift, and go to state 443


State 312

  220 named_arguments: named_argument .

    $default  reduce using rule 220 (named_arguments)


State 313

  222 positional_arguments: positional_argument .

    $default  reduce using rule 222 (positional_arguments)


State 314

  224 positional_argument: assignment_expression .

    $default  reduce using rule 224 (positional_argument)


State 315

   41 qualified_name_infix: simple_name .  [COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, SCOPE, STAR, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  223 named_argument: simple_name . COLON assignment_expression

    COLON  shift, and go to state 444

    $default  reduce using rule 41 (qualified_name_infix)


State 316

   25 unqualified_import: STAR .

    $default  reduce using rule 25 (unqualified_import)


State 317

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import . SEMICOLON

    SEMICOLON  shift, and go to state 445


State 318

   24 unqualified_import: unqualified_import_simple_names .  [SEMICOLON]
   34 unqualified_import_simple_names: unqualified_import_simple_names . COMMA simple_name

    COMMA  shift, and go to state 446

    $default  reduce using rule 24 (unqualified_import)


State 319

   35 unqualified_import_simple_names: simple_name .

    $default  reduce using rule 35 (unqualified_import_simple_names)


State 320

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  203 parameters: parameters COMMA . parameter
  205 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  206          | . type simple_name ASSIGN_OP assignment_expression
  207          | . type simple_name annotation_block
  208          | . type simple_name
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    parameter             go to state 447
    type                  go to state 223
    array_type            go to state 86
    simple_type           go to state 87
    relative_type         go to state 88
    simple_name           go to state 89


State 321

  201 parameter_list: LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS .

    $default  reduce using rule 201 (parameter_list)


State 322

  205 parameter: type simple_name . ASSIGN_OP assignment_expression annotation_block
  206          | type simple_name . ASSIGN_OP assignment_expression
  207          | type simple_name . annotation_block
  208          | type simple_name .  [COMMA, RIGHT_PARENTHESIS]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 448
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 208 (parameter)

    annotation_block  go to state 449


State 323

   62 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 62 (annotation_declaration)


State 324

   65 constant_declarators: constant_declarators COMMA constant_declarator .

    $default  reduce using rule 65 (constant_declarators)


State 325

   69 constant_declarator: simple_name ASSIGN_OP conditional_expression . annotation_block
   70                    | simple_name ASSIGN_OP conditional_expression .  [SEMICOLON, COMMA]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 70 (constant_declarator)

    annotation_block  go to state 450


State 326

  240 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | logical_or_expression .  [SEMICOLON, COMMA, ANNOTATION_BLOCK_BEGIN]
  242 logical_or_expression: logical_or_expression . LOGICAL_OR_OP logical_and_expression

    CONDITIONAL_OP  shift, and go to state 277
    LOGICAL_OR_OP   shift, and go to state 278

    $default  reduce using rule 241 (conditional_expression)


State 327

   67 constant_declarator: simple_name argument_list annotation_block .

    $default  reduce using rule 67 (constant_declarator)


State 328

   78 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 78 (struct_type_declaration)


State 329

   76 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 451


State 330

   79 struct_field_declarators: struct_field_declarators struct_field_declarator .

    $default  reduce using rule 79 (struct_field_declarators)


State 331

   81 struct_field_declarator: type simple_name . ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | type simple_name . ASSIGN_OP comma_expression SEMICOLON
   83                        | type simple_name . annotation_block SEMICOLON
   84                        | type simple_name . SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 452
    ASSIGN_OP               shift, and go to state 453
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 454


State 332

   77 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 455


State 333

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   75 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators . RIGHT_CURLY_BRACE SEMICOLON
   79 struct_field_declarators: struct_field_declarators . struct_field_declarator
   81 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | . type simple_name annotation_block SEMICOLON
   84                        | . type simple_name SEMICOLON
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 456
    IDENT                       shift, and go to state 71

    qualified_name_infix     go to state 75
    struct_field_declarator  go to state 330
    type                     go to state 234
    array_type               go to state 86
    simple_type              go to state 87
    relative_type            go to state 88
    simple_name              go to state 89


State 334

   88 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 88 (enum_type_declaration)


State 335

   89 enum_value_declarators: enum_value_declarators COMMA . enum_value_declarator
   91 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   92                      | . simple_name ASSIGN_OP assignment_expression
   93                      | . simple_name annotation_block
   94                      | . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    enum_value_declarator  go to state 457
    simple_name            go to state 239


State 336

   86 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 458


State 337

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   91 enum_value_declarator: simple_name ASSIGN_OP . assignment_expression annotation_block
   92                      | simple_name ASSIGN_OP . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 459
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 338

   93 enum_value_declarator: simple_name annotation_block .

    $default  reduce using rule 93 (enum_value_declarator)


State 339

   87 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 460


State 340

   85 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators . RIGHT_CURLY_BRACE SEMICOLON
   89 enum_value_declarators: enum_value_declarators . COMMA enum_value_declarator

    COMMA              shift, and go to state 335
    RIGHT_CURLY_BRACE  shift, and go to state 461


State 341

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 462


State 342

  100 function_declaration: type annotation_block simple_name parameter_list SEMICOLON .

    $default  reduce using rule 100 (function_declaration)


State 343

   95 function_declaration: type annotation_block simple_name parameter_list UNIFORM . annotation_block SEMICOLON
   98                     | type annotation_block simple_name parameter_list UNIFORM . SEMICOLON
  107                     | type annotation_block simple_name parameter_list UNIFORM . annotation_block compound_statement
  110                     | type annotation_block simple_name parameter_list UNIFORM . compound_statement
  119                     | type annotation_block simple_name parameter_list UNIFORM . annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block simple_name parameter_list UNIFORM . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 463
    ASSIGN_OP               shift, and go to state 464
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 248

    compound_statement  go to state 465
    annotation_block    go to state 466


State 344

   96 function_declaration: type annotation_block simple_name parameter_list VARYING . annotation_block SEMICOLON
   99                     | type annotation_block simple_name parameter_list VARYING . SEMICOLON
  108                     | type annotation_block simple_name parameter_list VARYING . annotation_block compound_statement
  111                     | type annotation_block simple_name parameter_list VARYING . compound_statement
  120                     | type annotation_block simple_name parameter_list VARYING . annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name parameter_list VARYING . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 467
    ASSIGN_OP               shift, and go to state 468
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 248

    compound_statement  go to state 469
    annotation_block    go to state 470


State 345

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  124 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 471
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 346

  112 function_declaration: type annotation_block simple_name parameter_list compound_statement .

    $default  reduce using rule 112 (function_declaration)


State 347

   97 function_declaration: type annotation_block simple_name parameter_list annotation_block . SEMICOLON
  109                     | type annotation_block simple_name parameter_list annotation_block . compound_statement
  121                     | type annotation_block simple_name parameter_list annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 472
    ASSIGN_OP         shift, and go to state 473
    LEFT_CURLY_BRACE  shift, and go to state 248

    compound_statement  go to state 474


State 348

  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . ASSIGN_OP comma_expression SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 475
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 476


State 349

  104 function_declaration: type simple_name parameter_list UNIFORM SEMICOLON .

    $default  reduce using rule 104 (function_declaration)


State 350

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  128 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 477
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 351

  116 function_declaration: type simple_name parameter_list UNIFORM compound_statement .

    $default  reduce using rule 116 (function_declaration)


State 352

  101 function_declaration: type simple_name parameter_list UNIFORM annotation_block . SEMICOLON
  113                     | type simple_name parameter_list UNIFORM annotation_block . compound_statement
  125                     | type simple_name parameter_list UNIFORM annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 478
    ASSIGN_OP         shift, and go to state 479
    LEFT_CURLY_BRACE  shift, and go to state 248

    compound_statement  go to state 480


State 353

  105 function_declaration: type simple_name parameter_list VARYING SEMICOLON .

    $default  reduce using rule 105 (function_declaration)


State 354

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  129 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 481
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 355

  117 function_declaration: type simple_name parameter_list VARYING compound_statement .

    $default  reduce using rule 117 (function_declaration)


State 356

  102 function_declaration: type simple_name parameter_list VARYING annotation_block . SEMICOLON
  114                     | type simple_name parameter_list VARYING annotation_block . compound_statement
  126                     | type simple_name parameter_list VARYING annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 482
    ASSIGN_OP         shift, and go to state 483
    LEFT_CURLY_BRACE  shift, and go to state 248

    compound_statement  go to state 484


State 357

  130 function_declaration: type simple_name parameter_list ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 485


State 358

  154 matched_statement: SEMICOLON .

    $default  reduce using rule 154 (matched_statement)


State 359

  159 matched_if_statement: IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 486


State 360

  162 switch_statement: SWITCH . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 487


State 361

  170 matched_while_statement: WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 488


State 362

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  172                     | DO . matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173                       | DO . unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 489
    unmatched_statement           go to state 490
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 363

  174 matched_for_statement: FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 491


State 364

  198 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 492


State 365

  199 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 493


State 366

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  200 return_statement: RETURN . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 494
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 367

  136 compound_statement: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 136 (compound_statement)


State 368

  152 matched_statement: variable_declaration .

    $default  reduce using rule 152 (matched_statement)


State 369

  143 matched_statement: constant_declaration .

    $default  reduce using rule 143 (matched_statement)


State 370

  142 matched_statement: type_declaration .

    $default  reduce using rule 142 (matched_statement)


State 371

  141 matched_statement: compound_statement .

    $default  reduce using rule 141 (matched_statement)


State 372

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  135                   | LEFT_CURLY_BRACE statements . RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  137 statements: statements . statement
  139 statement: . matched_statement
  140          | . unmatched_statement
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    RIGHT_CURLY_BRACE           shift, and go to state 495
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    statement                     go to state 496
    matched_statement             go to state 374
    unmatched_statement           go to state 375
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 373

  138 statements: statement .

    $default  reduce using rule 138 (statements)


State 374

  139 statement: matched_statement .

    $default  reduce using rule 139 (statement)


State 375

  140 statement: unmatched_statement .

    $default  reduce using rule 140 (statement)


State 376

  144 matched_statement: matched_if_statement .

    $default  reduce using rule 144 (matched_statement)


State 377

  155 unmatched_statement: unmatched_if_statement .

    $default  reduce using rule 155 (unmatched_statement)


State 378

  145 matched_statement: switch_statement .

    $default  reduce using rule 145 (matched_statement)


State 379

  146 matched_statement: matched_while_statement .

    $default  reduce using rule 146 (matched_statement)


State 380

  156 unmatched_statement: unmatched_while_statement .

    $default  reduce using rule 156 (unmatched_statement)


State 381

  147 matched_statement: matched_do_statement .

    $default  reduce using rule 147 (matched_statement)


State 382

  157 unmatched_statement: unmatched_do_statement .

    $default  reduce using rule 157 (unmatched_statement)


State 383

  148 matched_statement: matched_for_statement .

    $default  reduce using rule 148 (matched_statement)


State 384

  158 unmatched_statement: unmatched_for_statement .

    $default  reduce using rule 158 (unmatched_statement)


State 385

  149 matched_statement: break_statement .

    $default  reduce using rule 149 (matched_statement)


State 386

  150 matched_statement: continue_statement .

    $default  reduce using rule 150 (matched_statement)


State 387

  151 matched_statement: return_statement .

    $default  reduce using rule 151 (matched_statement)


State 388

  153 matched_statement: comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 497


State 389

  288 matched_primary_expression: simple_type . LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  297 unmatched_primary_expression: simple_type .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, LEFT_PARENTHESIS, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  314 array_type: simple_type . LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | simple_type . LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | simple_type .  [IDENT]

    LEFT_SQUARE_BRACKET  shift, and go to state 498

    IDENT     reduce using rule 317 (array_type)
    $default  reduce using rule 297 (unmatched_primary_expression)


State 390

  103 function_declaration: type simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 103 (function_declaration)


State 391

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  127 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 499
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 392

  115 function_declaration: type simple_name parameter_list annotation_block compound_statement .

    $default  reduce using rule 115 (function_declaration)


State 393

   14 variable_declarations: variable_declarations . variable_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
  300 let_expression: LET LEFT_CURLY_BRACE variable_declarations . RIGHT_CURLY_BRACE IN unary_expression
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 500
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    variable_declaration  go to state 501
    type                  go to state 253
    array_type            go to state 86
    simple_type           go to state 87
    relative_type         go to state 88
    simple_name           go to state 89


State 394

   15 variable_declarations: variable_declaration .

    $default  reduce using rule 15 (variable_declarations)


State 395

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  299               | LET variable_declaration IN . unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 502
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 396

   45 variable_declaration: type variable_declarators . SEMICOLON
   46 variable_declarators: variable_declarators . COMMA variable_declarator

    SEMICOLON  shift, and go to state 503
    COMMA      shift, and go to state 504


State 397

   47 variable_declarators: variable_declarator .

    $default  reduce using rule 47 (variable_declarators)


State 398

   48 variable_declarator: simple_name . argument_list annotation_block
   49                    | simple_name . argument_list
   50                    | simple_name . ASSIGN_OP assignment_expression annotation_block
   51                    | simple_name . ASSIGN_OP assignment_expression
   52                    | simple_name . annotation_block
   53                    | simple_name .  [SEMICOLON, COMMA]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END
  215 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  216              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    ASSIGN_OP               shift, and go to state 505
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_PARENTHESIS        shift, and go to state 214

    $default  reduce using rule 53 (variable_declarator)

    annotation_block  go to state 506
    argument_list     go to state 507


State 399

  298 cast_expression: CAST LEFT_ANGLE_BRACKET type . RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

    RIGHT_ANGLE_BRACKET  shift, and go to state 508


State 400

  291 matched_primary_expression: LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS .

    $default  reduce using rule 291 (matched_primary_expression)


State 401

  314 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 509


State 402

  225 comma_expression: assignment_expression COMMA comma_expression .

    $default  reduce using rule 225 (comma_expression)


State 403

  227 assignment_expression: logical_or_expression ASSIGN_OP assignment_expression .

    $default  reduce using rule 227 (assignment_expression)


State 404

  228 assignment_expression: logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 228 (assignment_expression)


State 405

  229 assignment_expression: logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression .

    $default  reduce using rule 229 (assignment_expression)


State 406

  230 assignment_expression: logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 230 (assignment_expression)


State 407

  231 assignment_expression: logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 231 (assignment_expression)


State 408

  232 assignment_expression: logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 232 (assignment_expression)


State 409

  233 assignment_expression: logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 233 (assignment_expression)


State 410

  234 assignment_expression: logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression .

    $default  reduce using rule 234 (assignment_expression)


State 411

  235 assignment_expression: logical_or_expression DIVIDE_ASSIGN_OP assignment_expression .

    $default  reduce using rule 235 (assignment_expression)


State 412

  236 assignment_expression: logical_or_expression MODULO_ASSIGN_OP assignment_expression .

    $default  reduce using rule 236 (assignment_expression)


State 413

  237 assignment_expression: logical_or_expression PLUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 237 (assignment_expression)


State 414

  238 assignment_expression: logical_or_expression MINUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 238 (assignment_expression)


State 415

  240 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression . COLON assignment_expression

    COLON  shift, and go to state 510


State 416

  242 logical_or_expression: logical_or_expression LOGICAL_OR_OP logical_and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  244 logical_and_expression: logical_and_expression . LOGICAL_AND_OP inclusive_or_expression

    LOGICAL_AND_OP  shift, and go to state 279

    $default  reduce using rule 242 (logical_or_expression)


State 417

  244 logical_and_expression: logical_and_expression LOGICAL_AND_OP inclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  246 inclusive_or_expression: inclusive_or_expression . BITWISE_OR_OP exclusive_or_expression

    BITWISE_OR_OP  shift, and go to state 280

    $default  reduce using rule 244 (logical_and_expression)


State 418

  246 inclusive_or_expression: inclusive_or_expression BITWISE_OR_OP exclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  248 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR_OP and_expression

    BITWISE_XOR_OP  shift, and go to state 281

    $default  reduce using rule 246 (inclusive_or_expression)


State 419

  248 exclusive_or_expression: exclusive_or_expression BITWISE_XOR_OP and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  250 and_expression: and_expression . BITWISE_AND_OP equality_expression

    BITWISE_AND_OP  shift, and go to state 282

    $default  reduce using rule 248 (exclusive_or_expression)


State 420

  250 and_expression: and_expression BITWISE_AND_OP equality_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  252 equality_expression: equality_expression . EQUAL_OP relational_expression
  253                    | equality_expression . NOT_EQUAL_OP relational_expression

    EQUAL_OP      shift, and go to state 283
    NOT_EQUAL_OP  shift, and go to state 284

    $default  reduce using rule 250 (and_expression)


State 421

  252 equality_expression: equality_expression EQUAL_OP relational_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  255 relational_expression: relational_expression . LEFT_ANGLE_BRACKET shift_expression
  256                      | relational_expression . LESS_OR_EQUAL_OP shift_expression
  257                      | relational_expression . GREATER_OR_EQUAL_OP shift_expression
  258                      | relational_expression . RIGHT_ANGLE_BRACKET shift_expression

    LESS_OR_EQUAL_OP     shift, and go to state 285
    GREATER_OR_EQUAL_OP  shift, and go to state 286
    LEFT_ANGLE_BRACKET   shift, and go to state 287
    RIGHT_ANGLE_BRACKET  shift, and go to state 288

    $default  reduce using rule 252 (equality_expression)


State 422

  253 equality_expression: equality_expression NOT_EQUAL_OP relational_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  255 relational_expression: relational_expression . LEFT_ANGLE_BRACKET shift_expression
  256                      | relational_expression . LESS_OR_EQUAL_OP shift_expression
  257                      | relational_expression . GREATER_OR_EQUAL_OP shift_expression
  258                      | relational_expression . RIGHT_ANGLE_BRACKET shift_expression

    LESS_OR_EQUAL_OP     shift, and go to state 285
    GREATER_OR_EQUAL_OP  shift, and go to state 286
    LEFT_ANGLE_BRACKET   shift, and go to state 287
    RIGHT_ANGLE_BRACKET  shift, and go to state 288

    $default  reduce using rule 253 (equality_expression)


State 423

  256 relational_expression: relational_expression LESS_OR_EQUAL_OP shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  260 shift_expression: shift_expression . SHIFT_LEFT_OP additive_expression
  261                 | shift_expression . SHIFT_RIGHT_OP additive_expression
  262                 | shift_expression . UNSIGNED_SHIFT_RIGHT_OP additive_expression

    SHIFT_LEFT_OP            shift, and go to state 289
    SHIFT_RIGHT_OP           shift, and go to state 290
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 291

    $default  reduce using rule 256 (relational_expression)


State 424

  257 relational_expression: relational_expression GREATER_OR_EQUAL_OP shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  260 shift_expression: shift_expression . SHIFT_LEFT_OP additive_expression
  261                 | shift_expression . SHIFT_RIGHT_OP additive_expression
  262                 | shift_expression . UNSIGNED_SHIFT_RIGHT_OP additive_expression

    SHIFT_LEFT_OP            shift, and go to state 289
    SHIFT_RIGHT_OP           shift, and go to state 290
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 291

    $default  reduce using rule 257 (relational_expression)


State 425

  255 relational_expression: relational_expression LEFT_ANGLE_BRACKET shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  260 shift_expression: shift_expression . SHIFT_LEFT_OP additive_expression
  261                 | shift_expression . SHIFT_RIGHT_OP additive_expression
  262                 | shift_expression . UNSIGNED_SHIFT_RIGHT_OP additive_expression

    SHIFT_LEFT_OP            shift, and go to state 289
    SHIFT_RIGHT_OP           shift, and go to state 290
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 291

    $default  reduce using rule 255 (relational_expression)


State 426

  258 relational_expression: relational_expression RIGHT_ANGLE_BRACKET shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  260 shift_expression: shift_expression . SHIFT_LEFT_OP additive_expression
  261                 | shift_expression . SHIFT_RIGHT_OP additive_expression
  262                 | shift_expression . UNSIGNED_SHIFT_RIGHT_OP additive_expression

    SHIFT_LEFT_OP            shift, and go to state 289
    SHIFT_RIGHT_OP           shift, and go to state 290
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 291

    $default  reduce using rule 258 (relational_expression)


State 427

  260 shift_expression: shift_expression SHIFT_LEFT_OP additive_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  264 additive_expression: additive_expression . POSITIVE_OP multiplicative_expression
  265                    | additive_expression . NEGATIVE_OP multiplicative_expression

    POSITIVE_OP  shift, and go to state 292
    NEGATIVE_OP  shift, and go to state 293

    $default  reduce using rule 260 (shift_expression)


State 428

  261 shift_expression: shift_expression SHIFT_RIGHT_OP additive_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  264 additive_expression: additive_expression . POSITIVE_OP multiplicative_expression
  265                    | additive_expression . NEGATIVE_OP multiplicative_expression

    POSITIVE_OP  shift, and go to state 292
    NEGATIVE_OP  shift, and go to state 293

    $default  reduce using rule 261 (shift_expression)


State 429

  262 shift_expression: shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  264 additive_expression: additive_expression . POSITIVE_OP multiplicative_expression
  265                    | additive_expression . NEGATIVE_OP multiplicative_expression

    POSITIVE_OP  shift, and go to state 292
    NEGATIVE_OP  shift, and go to state 293

    $default  reduce using rule 262 (shift_expression)


State 430

  264 additive_expression: additive_expression POSITIVE_OP multiplicative_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, POSITIVE_OP, NEGATIVE_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  267 multiplicative_expression: multiplicative_expression . STAR unary_expression
  268                          | multiplicative_expression . DIVIDE_OP unary_expression
  269                          | multiplicative_expression . MODULO_OP unary_expression

    DIVIDE_OP  shift, and go to state 294
    MODULO_OP  shift, and go to state 295
    STAR       shift, and go to state 296

    $default  reduce using rule 264 (additive_expression)


State 431

  265 additive_expression: additive_expression NEGATIVE_OP multiplicative_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, POSITIVE_OP, NEGATIVE_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  267 multiplicative_expression: multiplicative_expression . STAR unary_expression
  268                          | multiplicative_expression . DIVIDE_OP unary_expression
  269                          | multiplicative_expression . MODULO_OP unary_expression

    DIVIDE_OP  shift, and go to state 294
    MODULO_OP  shift, and go to state 295
    STAR       shift, and go to state 296

    $default  reduce using rule 265 (additive_expression)


State 432

  268 multiplicative_expression: multiplicative_expression DIVIDE_OP unary_expression .

    $default  reduce using rule 268 (multiplicative_expression)


State 433

  269 multiplicative_expression: multiplicative_expression MODULO_OP unary_expression .

    $default  reduce using rule 269 (multiplicative_expression)


State 434

  267 multiplicative_expression: multiplicative_expression STAR unary_expression .

    $default  reduce using rule 267 (multiplicative_expression)


State 435

  283 matched_postfix_expression: matched_postfix_expression DOT simple_name .

    $default  reduce using rule 283 (matched_postfix_expression)


State 436

  285 matched_postfix_expression: matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 511


State 437

  294 unmatched_postfix_expression: unmatched_postfix_expression DOT simple_name .

    $default  reduce using rule 294 (unmatched_postfix_expression)


State 438

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 289 (matched_primary_expression)


State 439

  288 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET comma_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 512


State 440

  219 named_arguments: named_arguments COMMA . named_argument
  223 named_argument: . simple_name COLON assignment_expression
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    named_argument  go to state 513
    simple_name     go to state 514


State 441

  216 argument_list: LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 216 (argument_list)


State 442

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  215 argument_list: LEFT_PARENTHESIS positional_arguments COMMA . named_arguments RIGHT_PARENTHESIS
  219 named_arguments: . named_arguments COMMA named_argument
  220                | . named_argument
  221 positional_arguments: positional_arguments COMMA . positional_argument
  223 named_argument: . simple_name COLON assignment_expression
  224 positional_argument: . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    named_arguments               go to state 515
    named_argument                go to state 312
    positional_argument           go to state 516
    assignment_expression         go to state 314
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 315


State 443

  217 argument_list: LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 217 (argument_list)


State 444

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  223 named_argument: simple_name COLON . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 517
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 445

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON .

    $default  reduce using rule 17 (import_declaration)


State 446

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 518


State 447

  203 parameters: parameters COMMA parameter .

    $default  reduce using rule 203 (parameters)


State 448

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  205 parameter: type simple_name ASSIGN_OP . assignment_expression annotation_block
  206          | type simple_name ASSIGN_OP . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 519
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 449

  207 parameter: type simple_name annotation_block .

    $default  reduce using rule 207 (parameter)


State 450

   69 constant_declarator: simple_name ASSIGN_OP conditional_expression annotation_block .

    $default  reduce using rule 69 (constant_declarator)


State 451

   76 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 76 (struct_type_declaration)


State 452

   84 struct_field_declarator: type simple_name SEMICOLON .

    $default  reduce using rule 84 (struct_field_declarator)


State 453

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   81 struct_field_declarator: type simple_name ASSIGN_OP . comma_expression annotation_block SEMICOLON
   82                        | type simple_name ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 520
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 454

   83 struct_field_declarator: type simple_name annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 521


State 455

   77 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 77 (struct_type_declaration)


State 456

   75 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 522


State 457

   89 enum_value_declarators: enum_value_declarators COMMA enum_value_declarator .

    $default  reduce using rule 89 (enum_value_declarators)


State 458

   86 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 86 (enum_type_declaration)


State 459

   91 enum_value_declarator: simple_name ASSIGN_OP assignment_expression . annotation_block
   92                      | simple_name ASSIGN_OP assignment_expression .  [COMMA, RIGHT_CURLY_BRACE]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 92 (enum_value_declarator)

    annotation_block  go to state 523


State 460

   87 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 87 (enum_type_declaration)


State 461

   85 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 524


State 462

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . ASSIGN_OP comma_expression SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 525
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 526


State 463

   98 function_declaration: type annotation_block simple_name parameter_list UNIFORM SEMICOLON .

    $default  reduce using rule 98 (function_declaration)


State 464

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  122 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 527
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 465

  110 function_declaration: type annotation_block simple_name parameter_list UNIFORM compound_statement .

    $default  reduce using rule 110 (function_declaration)


State 466

   95 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block . SEMICOLON
  107                     | type annotation_block simple_name parameter_list UNIFORM annotation_block . compound_statement
  119                     | type annotation_block simple_name parameter_list UNIFORM annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 528
    ASSIGN_OP         shift, and go to state 529
    LEFT_CURLY_BRACE  shift, and go to state 248

    compound_statement  go to state 530


State 467

   99 function_declaration: type annotation_block simple_name parameter_list VARYING SEMICOLON .

    $default  reduce using rule 99 (function_declaration)


State 468

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  123 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 531
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 469

  111 function_declaration: type annotation_block simple_name parameter_list VARYING compound_statement .

    $default  reduce using rule 111 (function_declaration)


State 470

   96 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block . SEMICOLON
  108                     | type annotation_block simple_name parameter_list VARYING annotation_block . compound_statement
  120                     | type annotation_block simple_name parameter_list VARYING annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 532
    ASSIGN_OP         shift, and go to state 533
    LEFT_CURLY_BRACE  shift, and go to state 248

    compound_statement  go to state 534


State 471

  124 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 535


State 472

   97 function_declaration: type annotation_block simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 97 (function_declaration)


State 473

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  121 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 536
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 474

  109 function_declaration: type annotation_block simple_name parameter_list annotation_block compound_statement .

    $default  reduce using rule 109 (function_declaration)


State 475

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 537
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 476

  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block . ASSIGN_OP comma_expression SEMICOLON

    ASSIGN_OP  shift, and go to state 538


State 477

  128 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 539


State 478

  101 function_declaration: type simple_name parameter_list UNIFORM annotation_block SEMICOLON .

    $default  reduce using rule 101 (function_declaration)


State 479

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  125 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 540
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 480

  113 function_declaration: type simple_name parameter_list UNIFORM annotation_block compound_statement .

    $default  reduce using rule 113 (function_declaration)


State 481

  129 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 541


State 482

  102 function_declaration: type simple_name parameter_list VARYING annotation_block SEMICOLON .

    $default  reduce using rule 102 (function_declaration)


State 483

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  126 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 542
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 484

  114 function_declaration: type simple_name parameter_list VARYING annotation_block compound_statement .

    $default  reduce using rule 114 (function_declaration)


State 485

  130 function_declaration: type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 130 (function_declaration)


State 486

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  159 matched_if_statement: IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS statement
  161                       | IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 543
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 487

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  162 switch_statement: SWITCH LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 544
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 488

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  170 matched_while_statement: WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 545
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 489

  172 matched_do_statement: DO matched_statement . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 546


State 490

  173 unmatched_do_statement: DO unmatched_statement . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 547


State 491

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
  174 matched_for_statement: FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 548
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 549
    comma_expression              go to state 550
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 492

  198 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 198 (break_statement)


State 493

  199 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 199 (continue_statement)


State 494

  200 return_statement: RETURN comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 551


State 495

  135 compound_statement: LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE .

    $default  reduce using rule 135 (compound_statement)


State 496

  137 statements: statements statement .

    $default  reduce using rule 137 (statements)


State 497

  153 matched_statement: comma_expression SEMICOLON .

    $default  reduce using rule 153 (matched_statement)


State 498

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  288                           | simple_type LEFT_SQUARE_BRACKET . comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  289                           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  314 array_type: simple_type LEFT_SQUARE_BRACKET . LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | simple_type LEFT_SQUARE_BRACKET . comma_expression RIGHT_SQUARE_BRACKET
  316           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_SQUARE_BRACKET        shift, and go to state 552
    LEFT_ANGLE_BRACKET          shift, and go to state 175
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 553
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 499

  127 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 554


State 500

  300 let_expression: LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE . IN unary_expression

    IN  shift, and go to state 555


State 501

   14 variable_declarations: variable_declarations variable_declaration .

    $default  reduce using rule 14 (variable_declarations)


State 502

  299 let_expression: LET variable_declaration IN unary_expression .

    $default  reduce using rule 299 (let_expression)


State 503

   45 variable_declaration: type variable_declarators SEMICOLON .

    $default  reduce using rule 45 (variable_declaration)


State 504

   46 variable_declarators: variable_declarators COMMA . variable_declarator
   48 variable_declarator: . simple_name argument_list annotation_block
   49                    | . simple_name argument_list
   50                    | . simple_name ASSIGN_OP assignment_expression annotation_block
   51                    | . simple_name ASSIGN_OP assignment_expression
   52                    | . simple_name annotation_block
   53                    | . simple_name
  375 simple_name: . IDENT

    IDENT  shift, and go to state 71

    variable_declarator  go to state 556
    simple_name          go to state 398


State 505

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   50 variable_declarator: simple_name ASSIGN_OP . assignment_expression annotation_block
   51                    | simple_name ASSIGN_OP . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 557
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 506

   52 variable_declarator: simple_name annotation_block .

    $default  reduce using rule 52 (variable_declarator)


State 507

   48 variable_declarator: simple_name argument_list . annotation_block
   49                    | simple_name argument_list .  [SEMICOLON, COMMA]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 49 (variable_declarator)

    annotation_block  go to state 558


State 508

  298 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET . LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 559


State 509

  314 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 314 (array_type)


State 510

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  240                       | logical_or_expression CONDITIONAL_OP comma_expression COLON . assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    assignment_expression         go to state 560
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 511

  285 matched_postfix_expression: matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 285 (matched_postfix_expression)


State 512

  288 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 288 (matched_primary_expression)


State 513

  219 named_arguments: named_arguments COMMA named_argument .

    $default  reduce using rule 219 (named_arguments)


State 514

  223 named_argument: simple_name . COLON assignment_expression

    COLON  shift, and go to state 444


State 515

  215 argument_list: LEFT_PARENTHESIS positional_arguments COMMA named_arguments . RIGHT_PARENTHESIS
  219 named_arguments: named_arguments . COMMA named_argument

    COMMA              shift, and go to state 440
    RIGHT_PARENTHESIS  shift, and go to state 561


State 516

  221 positional_arguments: positional_arguments COMMA positional_argument .

    $default  reduce using rule 221 (positional_arguments)


State 517

  223 named_argument: simple_name COLON assignment_expression .

    $default  reduce using rule 223 (named_argument)


State 518

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name .

    $default  reduce using rule 34 (unqualified_import_simple_names)


State 519

  205 parameter: type simple_name ASSIGN_OP assignment_expression . annotation_block
  206          | type simple_name ASSIGN_OP assignment_expression .  [COMMA, RIGHT_PARENTHESIS]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 206 (parameter)

    annotation_block  go to state 562


State 520

   81 struct_field_declarator: type simple_name ASSIGN_OP comma_expression . annotation_block SEMICOLON
   82                        | type simple_name ASSIGN_OP comma_expression . SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 563
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 564


State 521

   83 struct_field_declarator: type simple_name annotation_block SEMICOLON .

    $default  reduce using rule 83 (struct_field_declarator)


State 522

   75 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 75 (struct_type_declaration)


State 523

   91 enum_value_declarator: simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 91 (enum_value_declarator)


State 524

   85 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 85 (enum_type_declaration)


State 525

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 565
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 526

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block . ASSIGN_OP comma_expression SEMICOLON

    ASSIGN_OP  shift, and go to state 566


State 527

  122 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 567


State 528

   95 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON .

    $default  reduce using rule 95 (function_declaration)


State 529

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  119 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 568
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 530

  107 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement .

    $default  reduce using rule 107 (function_declaration)


State 531

  123 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 569


State 532

   96 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON .

    $default  reduce using rule 96 (function_declaration)


State 533

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  120 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 570
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 534

  108 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block compound_statement .

    $default  reduce using rule 108 (function_declaration)


State 535

  124 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 124 (function_declaration)


State 536

  121 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 571


State 537

  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 572


State 538

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 573
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 539

  128 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 128 (function_declaration)


State 540

  125 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 574


State 541

  129 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 129 (function_declaration)


State 542

  126 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 575


State 543

  159 matched_if_statement: IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS statement
  161                       | IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 576


State 544

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 577


State 545

  170 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 578


State 546

  172 matched_do_statement: DO matched_statement WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 579


State 547

  173 unmatched_do_statement: DO unmatched_statement WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 580


State 548

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  182 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON RIGHT_PARENTHESIS matched_statement
  194 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 581
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 582
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 549

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 583
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 584
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 550

  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 585


State 551

  200 return_statement: RETURN comma_expression SEMICOLON .

    $default  reduce using rule 200 (return_statement)


State 552

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, LEFT_PARENTHESIS, LEFT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  316 array_type: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .  [IDENT]

    IDENT     reduce using rule 316 (array_type)
    $default  reduce using rule 289 (matched_primary_expression)


State 553

  288 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET comma_expression . RIGHT_SQUARE_BRACKET
  315 array_type: simple_type LEFT_SQUARE_BRACKET comma_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 586


State 554

  127 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 127 (function_declaration)


State 555

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  300               | LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN . unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 587
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 556

   46 variable_declarators: variable_declarators COMMA variable_declarator .

    $default  reduce using rule 46 (variable_declarators)


State 557

   50 variable_declarator: simple_name ASSIGN_OP assignment_expression . annotation_block
   51                    | simple_name ASSIGN_OP assignment_expression .  [SEMICOLON, COMMA]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 51 (variable_declarator)

    annotation_block  go to state 588


State 558

   48 variable_declarator: simple_name argument_list annotation_block .

    $default  reduce using rule 48 (variable_declarator)


State 559

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  298                | CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS . unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    unary_expression              go to state 589
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 560

  240 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression .

    $default  reduce using rule 240 (conditional_expression)


State 561

  215 argument_list: LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 215 (argument_list)


State 562

  205 parameter: type simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 205 (parameter)


State 563

   82 struct_field_declarator: type simple_name ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 82 (struct_field_declarator)


State 564

   81 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 590


State 565

  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 591


State 566

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP . comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 592
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 567

  122 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 122 (function_declaration)


State 568

  119 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 593


State 569

  123 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 123 (function_declaration)


State 570

  120 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 594


State 571

  121 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 121 (function_declaration)


State 572

  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 134 (function_declaration)


State 573

  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 595


State 574

  125 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 125 (function_declaration)


State 575

  126 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 126 (function_declaration)


State 576

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  139 statement: . matched_statement
  140          | . unmatched_statement
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  159                     | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  160                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  161                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    statement                     go to state 596
    matched_statement             go to state 597
    unmatched_statement           go to state 375
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 577

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 598


State 578

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  170                        | WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  171                          | WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 599
    unmatched_statement           go to state 600
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 579

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  172 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 601
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 580

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  173 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 602
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 581

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  184 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . RIGHT_PARENTHESIS matched_statement
  196 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 603
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 604
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 582

  182 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  194 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 605


State 583

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  176 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . RIGHT_PARENTHESIS matched_statement
  188 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 606
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 607
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 584

  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 608


State 585

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON RIGHT_PARENTHESIS matched_statement
  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 609
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 610
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 586

  288 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, LEFT_PARENTHESIS, LEFT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  315 array_type: simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET .  [IDENT]

    IDENT     reduce using rule 315 (array_type)
    $default  reduce using rule 288 (matched_primary_expression)


State 587

  300 let_expression: LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression .

    $default  reduce using rule 300 (let_expression)


State 588

   50 variable_declarator: simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 50 (variable_declarator)


State 589

  298 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 611


State 590

   81 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON .

    $default  reduce using rule 81 (struct_field_declarator)


State 591

  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 132 (function_declaration)


State 592

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 612


State 593

  119 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 119 (function_declaration)


State 594

  120 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 120 (function_declaration)


State 595

  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 133 (function_declaration)


State 596

  160 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement .

    $default  reduce using rule 160 (unmatched_if_statement)


State 597

  139 statement: matched_statement .  [STRING_LITERAL, SEMICOLON, UNIFORM, VARYING, BOOL, BOOL2, BOOL3, BOOL4, INT, INT2, INT3, INT4, FLOAT, FLOAT2, FLOAT3, FLOAT4, FLOAT2X2, FLOAT2X3, FLOAT2X4, FLOAT3X2, FLOAT3X3, FLOAT3X4, FLOAT4X2, FLOAT4X3, FLOAT4X4, DOUBLE, DOUBLE2, DOUBLE3, DOUBLE4, DOUBLE2X2, DOUBLE2X3, DOUBLE2X4, DOUBLE3X2, DOUBLE3X3, DOUBLE3X4, DOUBLE4X2, DOUBLE4X3, DOUBLE4X4, COLOR, STRING, SDF, EDF, VDF, LIGHT_PROFILE, MATERIAL, MATERIAL_EMISSION, MATERIAL_GEOMETRY, MATERIAL_SURFACE, MATERIAL_VOLUME, TEXTURE_2D, TEXTURE_3D, TEXTURE_CUBE, TEXTURE_PTEX, BSDF_MEASUREMENT, INTENSITY_MODE, INTENSITY_RADIANT_EXITANCE, INTENSITY_POWER, HAIR_BSDF, TRUE, FALSE, LET, CONST, TYPEDEF, STRUCT, ENUM, IF, SWITCH, CASE, DEFAULT, WHILE, DO, FOR, BREAK, CONTINUE, RETURN, CAST, BITWISE_COMPLEMENT_OP, LOGICAL_NOT_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, SCOPE, LEFT_PARENTHESIS, LEFT_CURLY_BRACE, RIGHT_CURLY_BRACE, IDENT, INTEGER_LITERAL, FLOATING_LITERAL]
  159 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement . ELSE matched_statement
  161 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement . ELSE unmatched_statement

    ELSE  shift, and go to state 613

    $default  reduce using rule 139 (statement)


State 598

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
  164 switch_cases: . switch_cases switch_case
  165             | . switch_case
  166 switch_case: . CASE comma_expression COLON statement
  167            | . CASE comma_expression COLON
  168            | . DEFAULT COLON statement
  169            | . DEFAULT COLON

    CASE               shift, and go to state 614
    DEFAULT            shift, and go to state 615
    RIGHT_CURLY_BRACE  shift, and go to state 616

    switch_cases  go to state 617
    switch_case   go to state 618


State 599

  170 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 170 (matched_while_statement)


State 600

  171 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 171 (unmatched_while_statement)


State 601

  172 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 619


State 602

  173 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 620


State 603

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS . matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 621
    unmatched_statement           go to state 622
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 604

  184 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  196 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 623


State 605

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  182 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  194 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 624
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 625
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 606

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS . matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 626
    unmatched_statement           go to state 627
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 607

  176 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  188 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 628


State 608

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 629
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 630
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 609

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  180 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . RIGHT_PARENTHESIS matched_statement
  192 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 631
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 632
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 610

  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 633


State 611

  298 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS .

    $default  reduce using rule 298 (cast_expression)


State 612

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 131 (function_declaration)


State 613

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  159                     | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE . matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  161                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE . unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 634
    unmatched_statement           go to state 635
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 614

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  166 switch_case: CASE . comma_expression COLON statement
  167            | CASE . comma_expression COLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 636
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 615

  168 switch_case: DEFAULT . COLON statement
  169            | DEFAULT . COLON

    COLON  shift, and go to state 637


State 616

  163 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 163 (switch_statement)


State 617

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases . RIGHT_CURLY_BRACE
  164 switch_cases: switch_cases . switch_case
  166 switch_case: . CASE comma_expression COLON statement
  167            | . CASE comma_expression COLON
  168            | . DEFAULT COLON statement
  169            | . DEFAULT COLON

    CASE               shift, and go to state 614
    DEFAULT            shift, and go to state 615
    RIGHT_CURLY_BRACE  shift, and go to state 638

    switch_case  go to state 639


State 618

  165 switch_cases: switch_case .

    $default  reduce using rule 165 (switch_cases)


State 619

  172 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 640


State 620

  173 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 641


State 621

  185 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 185 (matched_for_statement)


State 622

  197 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 197 (unmatched_for_statement)


State 623

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 642
    unmatched_statement           go to state 643
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 624

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 644
    unmatched_statement           go to state 645
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 625

  182 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  194 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 646


State 626

  177 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 177 (matched_for_statement)


State 627

  189 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 189 (unmatched_for_statement)


State 628

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 647
    unmatched_statement           go to state 648
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 629

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 649
    unmatched_statement           go to state 650
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 630

  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 651


State 631

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS . matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 652
    unmatched_statement           go to state 653
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 632

  180 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  192 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 654


State 633

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 655
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    comma_expression              go to state 656
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 88
    simple_name                   go to state 89


State 634

  159 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement .

    $default  reduce using rule 159 (matched_if_statement)


State 635

  161 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement .

    $default  reduce using rule 161 (unmatched_if_statement)


State 636

  166 switch_case: CASE comma_expression . COLON statement
  167            | CASE comma_expression . COLON

    COLON  shift, and go to state 657


State 637

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  139 statement: . matched_statement
  140          | . unmatched_statement
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  168 switch_case: DEFAULT COLON . statement
  169            | DEFAULT COLON .  [CASE, DEFAULT, RIGHT_CURLY_BRACE]
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    $default  reduce using rule 169 (switch_case)

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    statement                     go to state 658
    matched_statement             go to state 374
    unmatched_statement           go to state 375
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 638

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE .

    $default  reduce using rule 162 (switch_statement)


State 639

  164 switch_cases: switch_cases switch_case .

    $default  reduce using rule 164 (switch_cases)


State 640

  172 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON .

    $default  reduce using rule 172 (matched_do_statement)


State 641

  173 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON .

    $default  reduce using rule 173 (unmatched_do_statement)


State 642

  184 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 184 (matched_for_statement)


State 643

  196 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 196 (unmatched_for_statement)


State 644

  183 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 183 (matched_for_statement)


State 645

  195 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 195 (unmatched_for_statement)


State 646

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 659
    unmatched_statement           go to state 660
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 647

  176 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 176 (matched_for_statement)


State 648

  188 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 188 (unmatched_for_statement)


State 649

  175 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 175 (matched_for_statement)


State 650

  187 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 187 (unmatched_for_statement)


State 651

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 661
    unmatched_statement           go to state 662
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 652

  181 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 181 (matched_for_statement)


State 653

  193 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 193 (unmatched_for_statement)


State 654

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 663
    unmatched_statement           go to state 664
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 655

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 665
    unmatched_statement           go to state 666
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 656

  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 667


State 657

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  139 statement: . matched_statement
  140          | . unmatched_statement
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  166 switch_case: CASE comma_expression COLON . statement
  167            | CASE comma_expression COLON .  [CASE, DEFAULT, RIGHT_CURLY_BRACE]
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    $default  reduce using rule 167 (switch_case)

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    statement                     go to state 668
    matched_statement             go to state 374
    unmatched_statement           go to state 375
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 658

  168 switch_case: DEFAULT COLON statement .

    $default  reduce using rule 168 (switch_case)


State 659

  182 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 182 (matched_for_statement)


State 660

  194 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 194 (unmatched_for_statement)


State 661

  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 174 (matched_for_statement)


State 662

  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 186 (unmatched_for_statement)


State 663

  180 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 180 (matched_for_statement)


State 664

  192 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 192 (unmatched_for_statement)


State 665

  179 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 179 (matched_for_statement)


State 666

  191 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 191 (unmatched_for_statement)


State 667

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  225 comma_expression: . assignment_expression COMMA comma_expression
  226                 | . assignment_expression
  227 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | . conditional_expression
  240 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | . logical_or_expression
  242 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  243                      | . logical_and_expression
  244 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  245                       | . inclusive_or_expression
  246 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  247                        | . exclusive_or_expression
  248 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  249                        | . and_expression
  250 and_expression: . and_expression BITWISE_AND_OP equality_expression
  251               | . equality_expression
  252 equality_expression: . equality_expression EQUAL_OP relational_expression
  253                    | . equality_expression NOT_EQUAL_OP relational_expression
  254                    | . relational_expression
  255 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  256                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  257                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  258                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  259                      | . shift_expression
  260 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  261                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  262                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  263                 | . additive_expression
  264 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  265                    | . additive_expression NEGATIVE_OP multiplicative_expression
  266                    | . multiplicative_expression
  267 multiplicative_expression: . multiplicative_expression STAR unary_expression
  268                          | . multiplicative_expression DIVIDE_OP unary_expression
  269                          | . multiplicative_expression MODULO_OP unary_expression
  270                          | . unary_expression
  271 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | . LOGICAL_NOT_OP unary_expression
  273                 | . POSITIVE_OP unary_expression
  274                 | . NEGATIVE_OP unary_expression
  275                 | . INCREMENT_OP unary_expression
  276                 | . DECREMENT_OP unary_expression
  277                 | . postfix_expression
  278                 | . let_expression
  279 postfix_expression: . matched_postfix_expression
  280                   | . unmatched_postfix_expression
  281 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  282                           | . matched_postfix_expression DECREMENT_OP
  283                           | . matched_postfix_expression DOT simple_name
  284                           | . matched_postfix_expression argument_list
  285                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | . matched_primary_expression
  287                           | . cast_expression
  288 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | . literal_expression
  291                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  293                             | . unmatched_postfix_expression DECREMENT_OP
  294                             | . unmatched_postfix_expression DOT simple_name
  295                             | . unmatched_postfix_expression argument_list
  296                             | . unmatched_primary_expression
  297 unmatched_primary_expression: . simple_type
  298 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299 let_expression: . LET variable_declaration IN unary_expression
  300               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301 literal_expression: . boolean_literal
  302                   | . integer_literal
  303                   | . floating_literal
  304                   | . string_literal
  305 boolean_literal: . TRUE
  306                | . FALSE
  307 integer_literal: . INTEGER_LITERAL
  308 floating_literal: . FLOATING_LITERAL
  309 string_literal: . string_literal STRING_LITERAL
  310               | . STRING_LITERAL
  311 type: . VARYING array_type
  312     | . UNIFORM array_type
  313     | . array_type
  314 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  315           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  317           | . simple_type
  318 simple_type: . SCOPE relative_type
  319            | . relative_type
  320 relative_type: . BOOL
  321              | . BOOL2
  322              | . BOOL3
  323              | . BOOL4
  324              | . INT
  325              | . INT2
  326              | . INT3
  327              | . INT4
  328              | . FLOAT
  329              | . FLOAT2
  330              | . FLOAT3
  331              | . FLOAT4
  332              | . FLOAT2X2
  333              | . FLOAT2X3
  334              | . FLOAT2X4
  335              | . FLOAT3X2
  336              | . FLOAT3X3
  337              | . FLOAT3X4
  338              | . FLOAT4X2
  339              | . FLOAT4X3
  340              | . FLOAT4X4
  341              | . DOUBLE
  342              | . DOUBLE2
  343              | . DOUBLE3
  344              | . DOUBLE4
  345              | . DOUBLE2X2
  346              | . DOUBLE2X3
  347              | . DOUBLE2X4
  348              | . DOUBLE3X2
  349              | . DOUBLE3X3
  350              | . DOUBLE3X4
  351              | . DOUBLE4X2
  352              | . DOUBLE4X3
  353              | . DOUBLE4X4
  354              | . COLOR
  355              | . STRING
  356              | . SDF
  357              | . EDF
  358              | . VDF
  359              | . LIGHT_PROFILE
  360              | . MATERIAL
  361              | . MATERIAL_EMISSION
  362              | . MATERIAL_GEOMETRY
  363              | . MATERIAL_SURFACE
  364              | . MATERIAL_VOLUME
  365              | . TEXTURE_2D
  366              | . TEXTURE_3D
  367              | . TEXTURE_CUBE
  368              | . TEXTURE_PTEX
  369              | . BSDF_MEASUREMENT
  370              | . INTENSITY_MODE
  371              | . INTENSITY_RADIANT_EXITANCE
  372              | . INTENSITY_POWER
  373              | . HAIR_BSDF
  374              | . qualified_name_infix
  375 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 358
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 359
    SWITCH                      shift, and go to state 360
    WHILE                       shift, and go to state 361
    DO                          shift, and go to state 362
    FOR                         shift, and go to state 363
    BREAK                       shift, and go to state 364
    CONTINUE                    shift, and go to state 365
    RETURN                      shift, and go to state 366
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 248
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    variable_declaration          go to state 368
    constant_declaration          go to state 369
    type_declaration              go to state 370
    alias_type_declaration        go to state 81
    struct_type_declaration       go to state 82
    enum_type_declaration         go to state 83
    compound_statement            go to state 371
    matched_statement             go to state 669
    unmatched_statement           go to state 670
    matched_if_statement          go to state 376
    unmatched_if_statement        go to state 377
    switch_statement              go to state 378
    matched_while_statement       go to state 379
    unmatched_while_statement     go to state 380
    matched_do_statement          go to state 381
    unmatched_do_statement        go to state 382
    matched_for_statement         go to state 383
    unmatched_for_statement       go to state 384
    break_statement               go to state 385
    continue_statement            go to state 386
    return_statement              go to state 387
    comma_expression              go to state 388
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 253
    array_type                    go to state 86
    simple_type                   go to state 389
    relative_type                 go to state 88
    simple_name                   go to state 89


State 668

  166 switch_case: CASE comma_expression COLON statement .

    $default  reduce using rule 166 (switch_case)


State 669

  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 178 (matched_for_statement)


State 670

  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 190 (unmatched_for_statement)
