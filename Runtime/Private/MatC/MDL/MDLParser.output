Grammar

    0 $accept: mdl $end

    1 mdl: mdl_version import_declarations module_declaration global_declarations
    2    | mdl_version import_declarations global_declarations
    3    | mdl_version module_declaration global_declarations
    4    | mdl_version import_declarations module_declaration
    5    | mdl_version import_declarations
    6    | mdl_version module_declaration
    7    | mdl_version global_declarations
    8    | mdl_version

    9 mdl_version: MDL FLOATING_LITERAL SEMICOLON

   10 import_declarations: import_declarations import_declaration
   11                    | import_declaration

   12 global_declarations: global_declarations global_declaration
   13                    | global_declaration

   14 variable_declarations: variable_declarations variable_declaration
   15                      | variable_declaration

   16 import_declaration: IMPORT qualified_imports SEMICOLON
   17                   | EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON

   18 qualified_imports: qualified_imports COMMA qualified_import
   19                  | qualified_import

   20 qualified_import_prefix: qualified_import_prefix_relative_current qualified_name_infix
   21                        | qualified_import_prefix_relative_parent qualified_name_infix
   22                        | qualified_import_prefix_absolute qualified_name_infix
   23                        | qualified_name_infix

   24 unqualified_import: unqualified_import_simple_names
   25                   | STAR

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | qualified_name_infix qualified_import_suffix
   30                 | qualified_import_prefix_relative_current qualified_name_infix
   31                 | qualified_import_prefix_relative_parent qualified_name_infix
   32                 | qualified_import_prefix_absolute qualified_name_infix
   33                 | qualified_name_infix

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name
   35                                | simple_name

   36 qualified_import_prefix_relative_current: DOT SCOPE

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | DOTDOT SCOPE

   39 qualified_import_prefix_absolute: SCOPE

   40 qualified_name_infix: qualified_name_infix SCOPE simple_name
   41                     | simple_name

   42 qualified_import_suffix: SCOPE STAR

   43 simple_name: IDENT

   44 module_declaration: MODULE annotation_block SEMICOLON
   45                   | MODULE SEMICOLON

   46 variable_declaration: type variable_declarators SEMICOLON

   47 variable_declarators: variable_declarators COMMA variable_declarator
   48                     | variable_declarator

   49 variable_declarator: simple_name argument_list annotation_block
   50                    | simple_name argument_list
   51                    | simple_name ASSIGN_OP assignment_expression annotation_block
   52                    | simple_name ASSIGN_OP assignment_expression
   53                    | simple_name annotation_block
   54                    | simple_name

   55 global_declaration: EXPORT annotation_declaration
   56                   | EXPORT constant_declaration
   57                   | EXPORT type_declaration
   58                   | EXPORT function_declaration
   59                   | annotation_declaration
   60                   | constant_declaration
   61                   | type_declaration
   62                   | function_declaration

   63 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   64                       | ANNOTATION simple_name parameter_list SEMICOLON

   65 constant_declaration: CONST type constant_declarators SEMICOLON

   66 constant_declarators: constant_declarators COMMA constant_declarator
   67                     | constant_declarator

   68 constant_declarator: simple_name argument_list annotation_block
   69                    | simple_name argument_list
   70                    | simple_name ASSIGN_OP conditional_expression annotation_block
   71                    | simple_name ASSIGN_OP conditional_expression

   72 type_declaration: alias_type_declaration
   73                 | struct_type_declaration
   74                 | enum_type_declaration

   75 alias_type_declaration: TYPEDEF type simple_name SEMICOLON

   76 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

   80 struct_field_declarators: struct_field_declarators struct_field_declarator
   81                         | struct_field_declarator

   82 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   83                        | type simple_name ASSIGN_OP comma_expression SEMICOLON
   84                        | type simple_name annotation_block SEMICOLON
   85                        | type simple_name SEMICOLON

   86 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

   90 enum_value_declarators: enum_value_declarators COMMA enum_value_declarator
   91                       | enum_value_declarator

   92 enum_value_declarator: simple_name ASSIGN_OP assignment_expression annotation_block
   93                      | simple_name ASSIGN_OP assignment_expression
   94                      | simple_name annotation_block
   95                      | simple_name

   96 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | type annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | type annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | type annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | type annotation_block simple_name parameter_list SEMICOLON
  102                     | type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | type simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | type simple_name parameter_list annotation_block SEMICOLON
  105                     | type simple_name parameter_list UNIFORM SEMICOLON
  106                     | type simple_name parameter_list VARYING SEMICOLON
  107                     | type simple_name parameter_list SEMICOLON
  108                     | type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | type annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | type annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | type annotation_block simple_name parameter_list VARYING compound_statement
  113                     | type annotation_block simple_name parameter_list compound_statement
  114                     | type simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | type simple_name parameter_list VARYING annotation_block compound_statement
  116                     | type simple_name parameter_list annotation_block compound_statement
  117                     | type simple_name parameter_list UNIFORM compound_statement
  118                     | type simple_name parameter_list VARYING compound_statement
  119                     | type simple_name parameter_list compound_statement
  120                     | type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

  136 compound_statement: LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

  138 statements: statements statement
  139           | statement

  140 statement: matched_statement
  141          | unmatched_statement

  142 matched_statement: compound_statement
  143                  | type_declaration
  144                  | constant_declaration
  145                  | matched_if_statement
  146                  | switch_statement
  147                  | matched_while_statement
  148                  | matched_do_statement
  149                  | matched_for_statement
  150                  | break_statement
  151                  | continue_statement
  152                  | return_statement
  153                  | variable_declaration
  154                  | comma_expression SEMICOLON
  155                  | SEMICOLON

  156 unmatched_statement: unmatched_if_statement
  157                    | unmatched_while_statement
  158                    | unmatched_do_statement
  159                    | unmatched_for_statement

  160 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement

  161 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

  163 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

  165 switch_cases: switch_cases switch_case
  166             | switch_case

  167 switch_case: CASE comma_expression COLON statement
  168            | CASE comma_expression COLON
  169            | DEFAULT COLON statement
  170            | DEFAULT COLON

  171 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement

  172 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement

  173 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

  174 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

  175 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement

  187 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

  199 break_statement: BREAK SEMICOLON

  200 continue_statement: CONTINUE SEMICOLON

  201 return_statement: RETURN comma_expression SEMICOLON

  202 parameter_list: LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  203               | LEFT_PARENTHESIS RIGHT_PARENTHESIS

  204 parameters: parameters COMMA parameter
  205           | parameter

  206 parameter: type simple_name ASSIGN_OP assignment_expression annotation_block
  207          | type simple_name ASSIGN_OP assignment_expression
  208          | type simple_name annotation_block
  209          | type simple_name

  210 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

  211 annotations: annotations COMMA annotation
  212            | annotation

  213 qualified_name: SCOPE qualified_name_infix
  214               | qualified_name_infix

  215 annotation: qualified_name argument_list

  216 argument_list: LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | LEFT_PARENTHESIS RIGHT_PARENTHESIS

  220 named_arguments: named_arguments COMMA named_argument
  221                | named_argument

  222 positional_arguments: positional_arguments COMMA positional_argument
  223                     | positional_argument

  224 named_argument: simple_name COLON assignment_expression

  225 positional_argument: assignment_expression

  226 comma_expression: assignment_expression COMMA comma_expression
  227                 | assignment_expression

  228 assignment_expression: logical_or_expression ASSIGN_OP assignment_expression
  229                      | logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | conditional_expression

  241 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | logical_or_expression

  243 logical_or_expression: logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | logical_and_expression

  245 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | inclusive_or_expression

  247 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | exclusive_or_expression

  249 exclusive_or_expression: and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | and_expression

  251 and_expression: equality_expression BITWISE_AND_OP and_expression
  252               | equality_expression

  253 equality_expression: relational_expression EQUAL_OP equality_expression
  254                    | relational_expression NOT_EQUAL_OP equality_expression
  255                    | relational_expression

  256 relational_expression: shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | shift_expression

  261 shift_expression: additive_expression SHIFT_LEFT_OP shift_expression
  262                 | additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | additive_expression

  265 additive_expression: multiplicative_expression POSITIVE_OP additive_expression
  266                    | multiplicative_expression NEGATIVE_OP additive_expression
  267                    | multiplicative_expression

  268 multiplicative_expression: unary_expression STAR multiplicative_expression
  269                          | unary_expression DIVIDE_OP multiplicative_expression
  270                          | unary_expression MODULO_OP multiplicative_expression
  271                          | unary_expression

  272 unary_expression: BITWISE_COMPLEMENT_OP unary_expression
  273                 | LOGICAL_NOT_OP unary_expression
  274                 | POSITIVE_OP unary_expression
  275                 | NEGATIVE_OP unary_expression
  276                 | INCREMENT_OP unary_expression
  277                 | DECREMENT_OP unary_expression
  278                 | postfix_expression
  279                 | let_expression

  280 postfix_expression: matched_postfix_expression
  281                   | unmatched_postfix_expression

  282 matched_postfix_expression: matched_postfix_expression INCREMENT_OP
  283                           | matched_postfix_expression DECREMENT_OP
  284                           | matched_postfix_expression DOT simple_name
  285                           | matched_postfix_expression argument_list
  286                           | matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | matched_primary_expression
  288                           | cast_expression

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | literal_expression
  292                           | LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS

  293 unmatched_postfix_expression: unmatched_postfix_expression INCREMENT_OP
  294                             | unmatched_postfix_expression DECREMENT_OP
  295                             | unmatched_postfix_expression DOT simple_name
  296                             | unmatched_postfix_expression argument_list
  297                             | unmatched_primary_expression

  298 unmatched_primary_expression: simple_type

  299 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

  300 let_expression: LET variable_declaration IN unary_expression
  301               | LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression

  302 literal_expression: boolean_literal
  303                   | integer_literal
  304                   | floating_literal
  305                   | string_literal

  306 boolean_literal: TRUE
  307                | FALSE

  308 integer_literal: INTEGER_LITERAL

  309 floating_literal: FLOATING_LITERAL

  310 string_literal: string_literal STRING_LITERAL
  311               | STRING_LITERAL

  312 type: VARYING array_type
  313     | UNIFORM array_type
  314     | array_type

  315 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | simple_type

  319 simple_type: SCOPE relative_type
  320            | relative_type

  321 relative_type: BOOL
  322              | BOOL2
  323              | BOOL3
  324              | BOOL4
  325              | INT
  326              | INT2
  327              | INT3
  328              | INT4
  329              | FLOAT
  330              | FLOAT2
  331              | FLOAT3
  332              | FLOAT4
  333              | FLOAT2X2
  334              | FLOAT2X3
  335              | FLOAT2X4
  336              | FLOAT3X2
  337              | FLOAT3X3
  338              | FLOAT3X4
  339              | FLOAT4X2
  340              | FLOAT4X3
  341              | FLOAT4X4
  342              | DOUBLE
  343              | DOUBLE2
  344              | DOUBLE3
  345              | DOUBLE4
  346              | DOUBLE2X2
  347              | DOUBLE2X3
  348              | DOUBLE2X4
  349              | DOUBLE3X2
  350              | DOUBLE3X3
  351              | DOUBLE3X4
  352              | DOUBLE4X2
  353              | DOUBLE4X3
  354              | DOUBLE4X4
  355              | COLOR
  356              | STRING
  357              | SDF
  358              | EDF
  359              | VDF
  360              | LIGHT_PROFILE
  361              | MATERIAL
  362              | MATERIAL_EMISSION
  363              | MATERIAL_GEOMETRY
  364              | MATERIAL_SURFACE
  365              | MATERIAL_VOLUME
  366              | TEXTURE_2D
  367              | TEXTURE_3D
  368              | TEXTURE_CUBE
  369              | TEXTURE_PTEX
  370              | BSDF_MEASUREMENT
  371              | INTENSITY_MODE
  372              | INTENSITY_RADIANT_EXITANCE
  373              | INTENSITY_POWER
  374              | HAIR_BSDF
  375              | qualified_name_infix


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING_LITERAL (258) 310 311
SEMICOLON (259) 9 16 17 44 45 46 63 64 65 75 76 77 78 79 82 83 84 85
    86 87 88 89 96 97 98 99 100 101 102 103 104 105 106 107 120 121
    122 123 124 125 126 127 128 129 130 131 132 133 134 135 154 155
    173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188
    189 190 191 192 193 194 195 196 197 198 199 200 201
COMMA (260) 18 34 47 66 90 204 211 216 220 222 226
MDL (261) 9
IMPORT (262) 16 17
USING (263) 17
MODULE (264) 44 45
EXPORT (265) 17 55 56 57 58
UNIFORM (266) 96 99 102 105 108 111 114 117 120 123 126 129 313
VARYING (267) 97 100 103 106 109 112 115 118 121 124 127 130 312
BOOL (268) 321
BOOL2 (269) 322
BOOL3 (270) 323
BOOL4 (271) 324
INT (272) 325
INT2 (273) 326
INT3 (274) 327
INT4 (275) 328
FLOAT (276) 329
FLOAT2 (277) 330
FLOAT3 (278) 331
FLOAT4 (279) 332
FLOAT2X2 (280) 333
FLOAT2X3 (281) 334
FLOAT2X4 (282) 335
FLOAT3X2 (283) 336
FLOAT3X3 (284) 337
FLOAT3X4 (285) 338
FLOAT4X2 (286) 339
FLOAT4X3 (287) 340
FLOAT4X4 (288) 341
DOUBLE (289) 342
DOUBLE2 (290) 343
DOUBLE3 (291) 344
DOUBLE4 (292) 345
DOUBLE2X2 (293) 346
DOUBLE2X3 (294) 347
DOUBLE2X4 (295) 348
DOUBLE3X2 (296) 349
DOUBLE3X3 (297) 350
DOUBLE3X4 (298) 351
DOUBLE4X2 (299) 352
DOUBLE4X3 (300) 353
DOUBLE4X4 (301) 354
COLOR (302) 355
STRING (303) 356
SDF (304) 357
EDF (305) 358
VDF (306) 359
LIGHT_PROFILE (307) 360
MATERIAL (308) 361
MATERIAL_EMISSION (309) 362
MATERIAL_GEOMETRY (310) 363
MATERIAL_SURFACE (311) 364
MATERIAL_VOLUME (312) 365
TEXTURE_2D (313) 366
TEXTURE_3D (314) 367
TEXTURE_CUBE (315) 368
TEXTURE_PTEX (316) 369
BSDF_MEASUREMENT (317) 370
INTENSITY_MODE (318) 371
INTENSITY_RADIANT_EXITANCE (319) 372
INTENSITY_POWER (320) 373
HAIR_BSDF (321) 374
TRUE (322) 306
FALSE (323) 307
LET (324) 300 301
IN (325) 300 301
ANNOTATION (326) 63 64
CONST (327) 65
TYPEDEF (328) 75
STRUCT (329) 76 77 78 79
ENUM (330) 86 87 88 89
IF (331) 160 161 162
ELSE (332) 160 162
SWITCH (333) 163 164
CASE (334) 167 168
DEFAULT (335) 169 170
WHILE (336) 171 172 173 174
DO (337) 173 174
FOR (338) 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189
    190 191 192 193 194 195 196 197 198
BREAK (339) 199
CONTINUE (340) 200
RETURN (341) 201
CAST (342) 299
ASSIGN_OP (343) 51 52 70 71 82 83 92 93 120 121 122 123 124 125 126
    127 128 129 130 131 132 133 134 135 206 207 228
BITWISE_OR_ASSIGN_OP (344) 229
BITWISE_AND_ASSIGN_OP (345) 230
BITWISE_XOR_ASSIGN_OP (346) 231
SHIFT_LEFT_ASSIGN_OP (347) 232
SHIFT_RIGHT_ASSIGN_OP (348) 233
UNSIGNED_SHIFT_RIGHT_ASSIGN_OP (349) 234
MULTIPLY_ASSIGN_OP (350) 235
DIVIDE_ASSIGN_OP (351) 236
MODULO_ASSIGN_OP (352) 237
PLUS_ASSIGN_OP (353) 238
MINUS_ASSIGN_OP (354) 239
CONDITIONAL_OP (355) 241
LOGICAL_OR_OP (356) 243
LOGICAL_AND_OP (357) 245
BITWISE_OR_OP (358) 247
BITWISE_XOR_OP (359) 249
BITWISE_AND_OP (360) 251
EQUAL_OP (361) 253
NOT_EQUAL_OP (362) 254
LESS_OR_EQUAL_OP (363) 257
GREATER_OR_EQUAL_OP (364) 258
SHIFT_LEFT_OP (365) 261
SHIFT_RIGHT_OP (366) 262
UNSIGNED_SHIFT_RIGHT_OP (367) 263
DIVIDE_OP (368) 269
MODULO_OP (369) 270
BITWISE_COMPLEMENT_OP (370) 272
LOGICAL_NOT_OP (371) 273
POSITIVE_OP (372) 265 274
NEGATIVE_OP (373) 266 275
INCREMENT_OP (374) 276 282 293
DECREMENT_OP (375) 277 283 294
DOT (376) 36 284 295
DOTDOT (377) 37 38
SCOPE (378) 36 37 38 39 40 42 213 319
STAR (379) 25 42 132 133 134 135 268
COLON (380) 167 168 169 170 224 241
ANNOTATION_BLOCK_BEGIN (381) 210
ANNOTATION_BLOCK_END (382) 210
LEFT_PARENTHESIS (383) 132 133 134 135 160 161 162 163 164 171 172
    173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188
    189 190 191 192 193 194 195 196 197 198 202 203 216 217 218 219
    292 299
RIGHT_PARENTHESIS (384) 132 133 134 135 160 161 162 163 164 171 172
    173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188
    189 190 191 192 193 194 195 196 197 198 202 203 216 217 218 219
    292 299
LEFT_SQUARE_BRACKET (385) 286 289 290 315 316 317
RIGHT_SQUARE_BRACKET (386) 286 289 290 315 316 317
LEFT_ANGLE_BRACKET (387) 256 299 315
RIGHT_ANGLE_BRACKET (388) 259 299 315
LEFT_CURLY_BRACE (389) 76 77 78 79 86 87 88 89 136 137 163 164 301
RIGHT_CURLY_BRACE (390) 76 77 78 79 86 87 88 89 136 137 163 164 301
IDENT (391) 43
INTEGER_LITERAL (392) 308
FLOATING_LITERAL (393) 9 309


Nonterminals, with rules where they appear

$accept (139)
    on left: 0
mdl (140)
    on left: 1 2 3 4 5 6 7 8, on right: 0
mdl_version (141)
    on left: 9, on right: 1 2 3 4 5 6 7 8
import_declarations (142)
    on left: 10 11, on right: 1 2 4 5 10
global_declarations (143)
    on left: 12 13, on right: 1 2 3 7 12
variable_declarations (144)
    on left: 14 15, on right: 14 301
import_declaration (145)
    on left: 16 17, on right: 10 11
qualified_imports (146)
    on left: 18 19, on right: 16 18
qualified_import_prefix (147)
    on left: 20 21 22 23, on right: 17
unqualified_import (148)
    on left: 24 25, on right: 17
qualified_import (149)
    on left: 26 27 28 29 30 31 32 33, on right: 18 19
unqualified_import_simple_names (150)
    on left: 34 35, on right: 24 34
qualified_import_prefix_relative_current (151)
    on left: 36, on right: 20 26 30
qualified_import_prefix_relative_parent (152)
    on left: 37 38, on right: 21 27 31 37
qualified_import_prefix_absolute (153)
    on left: 39, on right: 22 28 32
qualified_name_infix (154)
    on left: 40 41, on right: 20 21 22 23 26 27 28 29 30 31 32 33 40
    213 214 375
qualified_import_suffix (155)
    on left: 42, on right: 26 27 28 29
simple_name (156)
    on left: 43, on right: 34 35 40 41 49 50 51 52 53 54 63 64 68 69
    70 71 75 76 77 78 79 82 83 84 85 86 87 88 89 92 93 94 95 96 97
    98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
    115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130
    131 132 133 134 135 206 207 208 209 224 284 295 315
module_declaration (157)
    on left: 44 45, on right: 1 3 4 6
variable_declaration (158)
    on left: 46, on right: 14 15 153 175 176 177 178 187 188 189 190
    300
variable_declarators (159)
    on left: 47 48, on right: 46 47
variable_declarator (160)
    on left: 49 50 51 52 53 54, on right: 47 48
global_declaration (161)
    on left: 55 56 57 58 59 60 61 62, on right: 12 13
annotation_declaration (162)
    on left: 63 64, on right: 55 59
constant_declaration (163)
    on left: 65, on right: 56 60 144
constant_declarators (164)
    on left: 66 67, on right: 65 66
constant_declarator (165)
    on left: 68 69 70 71, on right: 66 67
type_declaration (166)
    on left: 72 73 74, on right: 57 61 143
alias_type_declaration (167)
    on left: 75, on right: 72
struct_type_declaration (168)
    on left: 76 77 78 79, on right: 73
struct_field_declarators (169)
    on left: 80 81, on right: 76 77 80
struct_field_declarator (170)
    on left: 82 83 84 85, on right: 80 81
enum_type_declaration (171)
    on left: 86 87 88 89, on right: 74
enum_value_declarators (172)
    on left: 90 91, on right: 86 87 90
enum_value_declarator (173)
    on left: 92 93 94 95, on right: 90 91
function_declaration (174)
    on left: 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110
    111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126
    127 128 129 130 131 132 133 134 135, on right: 58 62
compound_statement (175)
    on left: 136 137, on right: 108 109 110 111 112 113 114 115 116
    117 118 119 142
statements (176)
    on left: 138 139, on right: 136 138
statement (177)
    on left: 140 141, on right: 138 139 161 167 169
matched_statement (178)
    on left: 142 143 144 145 146 147 148 149 150 151 152 153 154 155,
    on right: 140 160 162 171 173 175 176 177 178 179 180 181 182 183
    184 185 186
unmatched_statement (179)
    on left: 156 157 158 159, on right: 141 162 172 174 187 188 189
    190 191 192 193 194 195 196 197 198
matched_if_statement (180)
    on left: 160, on right: 145
unmatched_if_statement (181)
    on left: 161 162, on right: 156
switch_statement (182)
    on left: 163 164, on right: 146
switch_cases (183)
    on left: 165 166, on right: 163 165
switch_case (184)
    on left: 167 168 169 170, on right: 165 166
matched_while_statement (185)
    on left: 171, on right: 147
unmatched_while_statement (186)
    on left: 172, on right: 157
matched_do_statement (187)
    on left: 173, on right: 148
unmatched_do_statement (188)
    on left: 174, on right: 158
matched_for_statement (189)
    on left: 175 176 177 178 179 180 181 182 183 184 185 186, on right:
    149
unmatched_for_statement (190)
    on left: 187 188 189 190 191 192 193 194 195 196 197 198, on right:
    159
break_statement (191)
    on left: 199, on right: 150
continue_statement (192)
    on left: 200, on right: 151
return_statement (193)
    on left: 201, on right: 152
parameter_list (194)
    on left: 202 203, on right: 63 64 96 97 98 99 100 101 102 103 104
    105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
    121 122 123 124 125 126 127 128 129 130 131
parameters (195)
    on left: 204 205, on right: 202 204
parameter (196)
    on left: 206 207 208 209, on right: 204 205
annotation_block (197)
    on left: 210, on right: 44 49 51 53 63 68 70 76 78 82 84 86 88
    92 94 96 97 98 99 100 101 102 103 104 108 109 110 111 112 113 114
    115 116 120 121 122 123 124 125 126 127 128 132 133 134 206 208
annotations (198)
    on left: 211 212, on right: 210 211
qualified_name (199)
    on left: 213 214, on right: 215
annotation (200)
    on left: 215, on right: 211 212
argument_list (201)
    on left: 216 217 218 219, on right: 49 50 68 69 215 285 296
named_arguments (202)
    on left: 220 221, on right: 216 217 220
positional_arguments (203)
    on left: 222 223, on right: 216 218 222
named_argument (204)
    on left: 224, on right: 220 221
positional_argument (205)
    on left: 225, on right: 222 223
comma_expression (206)
    on left: 226 227, on right: 82 83 120 121 122 123 124 125 126 127
    128 129 130 131 132 133 134 135 154 160 161 162 163 164 167 168
    171 172 173 174 175 176 177 179 180 181 182 183 184 185 187 188
    189 191 192 193 194 195 196 197 201 226 241 286 292
assignment_expression (207)
    on left: 228 229 230 231 232 233 234 235 236 237 238 239 240, on right:
    51 52 92 93 206 207 224 225 226 227 228 229 230 231 232 233 234
    235 236 237 238 239 241
conditional_expression (208)
    on left: 241 242, on right: 70 71 240 289 316
logical_or_expression (209)
    on left: 243 244, on right: 228 229 230 231 232 233 234 235 236
    237 238 239 241 242 243
logical_and_expression (210)
    on left: 245 246, on right: 243 244 245
inclusive_or_expression (211)
    on left: 247 248, on right: 245 246 247
exclusive_or_expression (212)
    on left: 249 250, on right: 247 248 249
and_expression (213)
    on left: 251 252, on right: 249 250 251
equality_expression (214)
    on left: 253 254 255, on right: 251 252 253 254
relational_expression (215)
    on left: 256 257 258 259 260, on right: 253 254 255 256 257 258
    259
shift_expression (216)
    on left: 261 262 263 264, on right: 256 257 258 259 260 261 262
    263
additive_expression (217)
    on left: 265 266 267, on right: 261 262 263 264 265 266
multiplicative_expression (218)
    on left: 268 269 270 271, on right: 265 266 267 268 269 270
unary_expression (219)
    on left: 272 273 274 275 276 277 278 279, on right: 268 269 270
    271 272 273 274 275 276 277 299 300 301
postfix_expression (220)
    on left: 280 281, on right: 278
matched_postfix_expression (221)
    on left: 282 283 284 285 286 287 288, on right: 280 282 283 284
    285 286
matched_primary_expression (222)
    on left: 289 290 291 292, on right: 287
unmatched_postfix_expression (223)
    on left: 293 294 295 296 297, on right: 281 293 294 295 296
unmatched_primary_expression (224)
    on left: 298, on right: 297
cast_expression (225)
    on left: 299, on right: 288
let_expression (226)
    on left: 300 301, on right: 279
literal_expression (227)
    on left: 302 303 304 305, on right: 291
boolean_literal (228)
    on left: 306 307, on right: 302
integer_literal (229)
    on left: 308, on right: 303
floating_literal (230)
    on left: 309, on right: 304
string_literal (231)
    on left: 310 311, on right: 305 310
type (232)
    on left: 312 313 314, on right: 46 65 75 82 83 84 85 96 97 98 99
    100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
    116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131
    132 133 134 135 206 207 208 209 299
array_type (233)
    on left: 315 316 317 318, on right: 312 313 314
simple_type (234)
    on left: 319 320, on right: 289 290 298 315 316 317 318
relative_type (235)
    on left: 321 322 323 324 325 326 327 328 329 330 331 332 333 334
    335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350
    351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366
    367 368 369 370 371 372 373 374 375, on right: 319 320


State 0

    0 $accept: . mdl $end
    1 mdl: . mdl_version import_declarations module_declaration global_declarations
    2    | . mdl_version import_declarations global_declarations
    3    | . mdl_version module_declaration global_declarations
    4    | . mdl_version import_declarations module_declaration
    5    | . mdl_version import_declarations
    6    | . mdl_version module_declaration
    7    | . mdl_version global_declarations
    8    | . mdl_version
    9 mdl_version: . MDL FLOATING_LITERAL SEMICOLON

    MDL  shift, and go to state 1

    mdl          go to state 2
    mdl_version  go to state 3


State 1

    9 mdl_version: MDL . FLOATING_LITERAL SEMICOLON

    FLOATING_LITERAL  shift, and go to state 4


State 2

    0 $accept: mdl . $end

    $end  shift, and go to state 5


State 3

    1 mdl: mdl_version . import_declarations module_declaration global_declarations
    2    | mdl_version . import_declarations global_declarations
    3    | mdl_version . module_declaration global_declarations
    4    | mdl_version . import_declarations module_declaration
    5    | mdl_version . import_declarations
    6    | mdl_version . module_declaration
    7    | mdl_version . global_declarations
    8    | mdl_version .  [$end]
   10 import_declarations: . import_declarations import_declaration
   11                    | . import_declaration
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   16 import_declaration: . IMPORT qualified_imports SEMICOLON
   17                   | . EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   44 module_declaration: . MODULE annotation_block SEMICOLON
   45                   | . MODULE SEMICOLON
   55 global_declaration: . EXPORT annotation_declaration
   56                   | . EXPORT constant_declaration
   57                   | . EXPORT type_declaration
   58                   | . EXPORT function_declaration
   59                   | . annotation_declaration
   60                   | . constant_declaration
   61                   | . type_declaration
   62                   | . function_declaration
   63 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   64                       | . ANNOTATION simple_name parameter_list SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   96 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | . type annotation_block simple_name parameter_list SEMICOLON
  102                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | . type simple_name parameter_list annotation_block SEMICOLON
  105                     | . type simple_name parameter_list UNIFORM SEMICOLON
  106                     | . type simple_name parameter_list VARYING SEMICOLON
  107                     | . type simple_name parameter_list SEMICOLON
  108                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  113                     | . type annotation_block simple_name parameter_list compound_statement
  114                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  116                     | . type simple_name parameter_list annotation_block compound_statement
  117                     | . type simple_name parameter_list UNIFORM compound_statement
  118                     | . type simple_name parameter_list VARYING compound_statement
  119                     | . type simple_name parameter_list compound_statement
  120                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    IMPORT                      shift, and go to state 6
    MODULE                      shift, and go to state 7
    EXPORT                      shift, and go to state 8
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 8 (mdl)

    import_declarations      go to state 72
    global_declarations      go to state 73
    import_declaration       go to state 74
    qualified_name_infix     go to state 75
    simple_name              go to state 76
    module_declaration       go to state 77
    global_declaration       go to state 78
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 4

    9 mdl_version: MDL FLOATING_LITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 5

    0 $accept: mdl $end .

    $default  accept


State 6

   16 import_declaration: IMPORT . qualified_imports SEMICOLON
   18 qualified_imports: . qualified_imports COMMA qualified_import
   19                  | . qualified_import
   26 qualified_import: . qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | . qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | . qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | . qualified_name_infix qualified_import_suffix
   30                 | . qualified_import_prefix_relative_current qualified_name_infix
   31                 | . qualified_import_prefix_relative_parent qualified_name_infix
   32                 | . qualified_import_prefix_absolute qualified_name_infix
   33                 | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    DOT     shift, and go to state 91
    DOTDOT  shift, and go to state 92
    SCOPE   shift, and go to state 93
    IDENT   shift, and go to state 71

    qualified_imports                         go to state 94
    qualified_import                          go to state 95
    qualified_import_prefix_relative_current  go to state 96
    qualified_import_prefix_relative_parent   go to state 97
    qualified_import_prefix_absolute          go to state 98
    qualified_name_infix                      go to state 99
    simple_name                               go to state 76


State 7

   44 module_declaration: MODULE . annotation_block SEMICOLON
   45                   | MODULE . SEMICOLON
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 100
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 102


State 8

   17 import_declaration: EXPORT . USING qualified_import_prefix IMPORT unqualified_import SEMICOLON
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: EXPORT . annotation_declaration
   56                   | EXPORT . constant_declaration
   57                   | EXPORT . type_declaration
   58                   | EXPORT . function_declaration
   63 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   64                       | . ANNOTATION simple_name parameter_list SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   96 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | . type annotation_block simple_name parameter_list SEMICOLON
  102                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | . type simple_name parameter_list annotation_block SEMICOLON
  105                     | . type simple_name parameter_list UNIFORM SEMICOLON
  106                     | . type simple_name parameter_list VARYING SEMICOLON
  107                     | . type simple_name parameter_list SEMICOLON
  108                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  113                     | . type annotation_block simple_name parameter_list compound_statement
  114                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  116                     | . type simple_name parameter_list annotation_block compound_statement
  117                     | . type simple_name parameter_list UNIFORM compound_statement
  118                     | . type simple_name parameter_list VARYING compound_statement
  119                     | . type simple_name parameter_list compound_statement
  120                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    USING                       shift, and go to state 103
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    annotation_declaration   go to state 104
    constant_declaration     go to state 105
    type_declaration         go to state 106
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 107
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 9

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  313 type: UNIFORM . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    array_type            go to state 108
    simple_type           go to state 88
    relative_type         go to state 89


State 10

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  312 type: VARYING . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    array_type            go to state 109
    simple_type           go to state 88
    relative_type         go to state 89


State 11

  321 relative_type: BOOL .

    $default  reduce using rule 321 (relative_type)


State 12

  322 relative_type: BOOL2 .

    $default  reduce using rule 322 (relative_type)


State 13

  323 relative_type: BOOL3 .

    $default  reduce using rule 323 (relative_type)


State 14

  324 relative_type: BOOL4 .

    $default  reduce using rule 324 (relative_type)


State 15

  325 relative_type: INT .

    $default  reduce using rule 325 (relative_type)


State 16

  326 relative_type: INT2 .

    $default  reduce using rule 326 (relative_type)


State 17

  327 relative_type: INT3 .

    $default  reduce using rule 327 (relative_type)


State 18

  328 relative_type: INT4 .

    $default  reduce using rule 328 (relative_type)


State 19

  329 relative_type: FLOAT .

    $default  reduce using rule 329 (relative_type)


State 20

  330 relative_type: FLOAT2 .

    $default  reduce using rule 330 (relative_type)


State 21

  331 relative_type: FLOAT3 .

    $default  reduce using rule 331 (relative_type)


State 22

  332 relative_type: FLOAT4 .

    $default  reduce using rule 332 (relative_type)


State 23

  333 relative_type: FLOAT2X2 .

    $default  reduce using rule 333 (relative_type)


State 24

  334 relative_type: FLOAT2X3 .

    $default  reduce using rule 334 (relative_type)


State 25

  335 relative_type: FLOAT2X4 .

    $default  reduce using rule 335 (relative_type)


State 26

  336 relative_type: FLOAT3X2 .

    $default  reduce using rule 336 (relative_type)


State 27

  337 relative_type: FLOAT3X3 .

    $default  reduce using rule 337 (relative_type)


State 28

  338 relative_type: FLOAT3X4 .

    $default  reduce using rule 338 (relative_type)


State 29

  339 relative_type: FLOAT4X2 .

    $default  reduce using rule 339 (relative_type)


State 30

  340 relative_type: FLOAT4X3 .

    $default  reduce using rule 340 (relative_type)


State 31

  341 relative_type: FLOAT4X4 .

    $default  reduce using rule 341 (relative_type)


State 32

  342 relative_type: DOUBLE .

    $default  reduce using rule 342 (relative_type)


State 33

  343 relative_type: DOUBLE2 .

    $default  reduce using rule 343 (relative_type)


State 34

  344 relative_type: DOUBLE3 .

    $default  reduce using rule 344 (relative_type)


State 35

  345 relative_type: DOUBLE4 .

    $default  reduce using rule 345 (relative_type)


State 36

  346 relative_type: DOUBLE2X2 .

    $default  reduce using rule 346 (relative_type)


State 37

  347 relative_type: DOUBLE2X3 .

    $default  reduce using rule 347 (relative_type)


State 38

  348 relative_type: DOUBLE2X4 .

    $default  reduce using rule 348 (relative_type)


State 39

  349 relative_type: DOUBLE3X2 .

    $default  reduce using rule 349 (relative_type)


State 40

  350 relative_type: DOUBLE3X3 .

    $default  reduce using rule 350 (relative_type)


State 41

  351 relative_type: DOUBLE3X4 .

    $default  reduce using rule 351 (relative_type)


State 42

  352 relative_type: DOUBLE4X2 .

    $default  reduce using rule 352 (relative_type)


State 43

  353 relative_type: DOUBLE4X3 .

    $default  reduce using rule 353 (relative_type)


State 44

  354 relative_type: DOUBLE4X4 .

    $default  reduce using rule 354 (relative_type)


State 45

  355 relative_type: COLOR .

    $default  reduce using rule 355 (relative_type)


State 46

  356 relative_type: STRING .

    $default  reduce using rule 356 (relative_type)


State 47

  357 relative_type: SDF .

    $default  reduce using rule 357 (relative_type)


State 48

  358 relative_type: EDF .

    $default  reduce using rule 358 (relative_type)


State 49

  359 relative_type: VDF .

    $default  reduce using rule 359 (relative_type)


State 50

  360 relative_type: LIGHT_PROFILE .

    $default  reduce using rule 360 (relative_type)


State 51

  361 relative_type: MATERIAL .

    $default  reduce using rule 361 (relative_type)


State 52

  362 relative_type: MATERIAL_EMISSION .

    $default  reduce using rule 362 (relative_type)


State 53

  363 relative_type: MATERIAL_GEOMETRY .

    $default  reduce using rule 363 (relative_type)


State 54

  364 relative_type: MATERIAL_SURFACE .

    $default  reduce using rule 364 (relative_type)


State 55

  365 relative_type: MATERIAL_VOLUME .

    $default  reduce using rule 365 (relative_type)


State 56

  366 relative_type: TEXTURE_2D .

    $default  reduce using rule 366 (relative_type)


State 57

  367 relative_type: TEXTURE_3D .

    $default  reduce using rule 367 (relative_type)


State 58

  368 relative_type: TEXTURE_CUBE .

    $default  reduce using rule 368 (relative_type)


State 59

  369 relative_type: TEXTURE_PTEX .

    $default  reduce using rule 369 (relative_type)


State 60

  370 relative_type: BSDF_MEASUREMENT .

    $default  reduce using rule 370 (relative_type)


State 61

  371 relative_type: INTENSITY_MODE .

    $default  reduce using rule 371 (relative_type)


State 62

  372 relative_type: INTENSITY_RADIANT_EXITANCE .

    $default  reduce using rule 372 (relative_type)


State 63

  373 relative_type: INTENSITY_POWER .

    $default  reduce using rule 373 (relative_type)


State 64

  374 relative_type: HAIR_BSDF .

    $default  reduce using rule 374 (relative_type)


State 65

   43 simple_name: . IDENT
   63 annotation_declaration: ANNOTATION . simple_name parameter_list annotation_block SEMICOLON
   64                       | ANNOTATION . simple_name parameter_list SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 110


State 66

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   65 constant_declaration: CONST . type constant_declarators SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    type                  go to state 111
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 67

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   75 alias_type_declaration: TYPEDEF . type simple_name SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    type                  go to state 112
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 68

   43 simple_name: . IDENT
   76 struct_type_declaration: STRUCT . simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT . simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT . simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | STRUCT . simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 113


State 69

   43 simple_name: . IDENT
   86 enum_type_declaration: ENUM . simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM . simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM . simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | ENUM . simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 114


State 70

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  319 simple_type: SCOPE . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    relative_type         go to state 115


State 71

   43 simple_name: IDENT .

    $default  reduce using rule 43 (simple_name)


State 72

    1 mdl: mdl_version import_declarations . module_declaration global_declarations
    2    | mdl_version import_declarations . global_declarations
    4    | mdl_version import_declarations . module_declaration
    5    | mdl_version import_declarations .  [$end]
   10 import_declarations: import_declarations . import_declaration
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   16 import_declaration: . IMPORT qualified_imports SEMICOLON
   17                   | . EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   44 module_declaration: . MODULE annotation_block SEMICOLON
   45                   | . MODULE SEMICOLON
   55 global_declaration: . EXPORT annotation_declaration
   56                   | . EXPORT constant_declaration
   57                   | . EXPORT type_declaration
   58                   | . EXPORT function_declaration
   59                   | . annotation_declaration
   60                   | . constant_declaration
   61                   | . type_declaration
   62                   | . function_declaration
   63 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   64                       | . ANNOTATION simple_name parameter_list SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   96 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | . type annotation_block simple_name parameter_list SEMICOLON
  102                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | . type simple_name parameter_list annotation_block SEMICOLON
  105                     | . type simple_name parameter_list UNIFORM SEMICOLON
  106                     | . type simple_name parameter_list VARYING SEMICOLON
  107                     | . type simple_name parameter_list SEMICOLON
  108                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  113                     | . type annotation_block simple_name parameter_list compound_statement
  114                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  116                     | . type simple_name parameter_list annotation_block compound_statement
  117                     | . type simple_name parameter_list UNIFORM compound_statement
  118                     | . type simple_name parameter_list VARYING compound_statement
  119                     | . type simple_name parameter_list compound_statement
  120                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    IMPORT                      shift, and go to state 6
    MODULE                      shift, and go to state 7
    EXPORT                      shift, and go to state 8
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 5 (mdl)

    global_declarations      go to state 116
    import_declaration       go to state 117
    qualified_name_infix     go to state 75
    simple_name              go to state 76
    module_declaration       go to state 118
    global_declaration       go to state 78
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 73

    7 mdl: mdl_version global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . EXPORT annotation_declaration
   56                   | . EXPORT constant_declaration
   57                   | . EXPORT type_declaration
   58                   | . EXPORT function_declaration
   59                   | . annotation_declaration
   60                   | . constant_declaration
   61                   | . type_declaration
   62                   | . function_declaration
   63 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   64                       | . ANNOTATION simple_name parameter_list SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   96 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | . type annotation_block simple_name parameter_list SEMICOLON
  102                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | . type simple_name parameter_list annotation_block SEMICOLON
  105                     | . type simple_name parameter_list UNIFORM SEMICOLON
  106                     | . type simple_name parameter_list VARYING SEMICOLON
  107                     | . type simple_name parameter_list SEMICOLON
  108                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  113                     | . type annotation_block simple_name parameter_list compound_statement
  114                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  116                     | . type simple_name parameter_list annotation_block compound_statement
  117                     | . type simple_name parameter_list UNIFORM compound_statement
  118                     | . type simple_name parameter_list VARYING compound_statement
  119                     | . type simple_name parameter_list compound_statement
  120                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 7 (mdl)

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 120
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 74

   11 import_declarations: import_declaration .

    $default  reduce using rule 11 (import_declarations)


State 75

   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
  375 relative_type: qualified_name_infix .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, COLON, ANNOTATION_BLOCK_BEGIN, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE, IDENT]

    SCOPE  shift, and go to state 121

    $default  reduce using rule 375 (relative_type)


State 76

   41 qualified_name_infix: simple_name .

    $default  reduce using rule 41 (qualified_name_infix)


State 77

    3 mdl: mdl_version module_declaration . global_declarations
    6    | mdl_version module_declaration .  [$end]
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . EXPORT annotation_declaration
   56                   | . EXPORT constant_declaration
   57                   | . EXPORT type_declaration
   58                   | . EXPORT function_declaration
   59                   | . annotation_declaration
   60                   | . constant_declaration
   61                   | . type_declaration
   62                   | . function_declaration
   63 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   64                       | . ANNOTATION simple_name parameter_list SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   96 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | . type annotation_block simple_name parameter_list SEMICOLON
  102                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | . type simple_name parameter_list annotation_block SEMICOLON
  105                     | . type simple_name parameter_list UNIFORM SEMICOLON
  106                     | . type simple_name parameter_list VARYING SEMICOLON
  107                     | . type simple_name parameter_list SEMICOLON
  108                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  113                     | . type annotation_block simple_name parameter_list compound_statement
  114                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  116                     | . type simple_name parameter_list annotation_block compound_statement
  117                     | . type simple_name parameter_list UNIFORM compound_statement
  118                     | . type simple_name parameter_list VARYING compound_statement
  119                     | . type simple_name parameter_list compound_statement
  120                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 6 (mdl)

    global_declarations      go to state 122
    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 78
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 78

   13 global_declarations: global_declaration .

    $default  reduce using rule 13 (global_declarations)


State 79

   59 global_declaration: annotation_declaration .

    $default  reduce using rule 59 (global_declaration)


State 80

   60 global_declaration: constant_declaration .

    $default  reduce using rule 60 (global_declaration)


State 81

   61 global_declaration: type_declaration .

    $default  reduce using rule 61 (global_declaration)


State 82

   72 type_declaration: alias_type_declaration .

    $default  reduce using rule 72 (type_declaration)


State 83

   73 type_declaration: struct_type_declaration .

    $default  reduce using rule 73 (type_declaration)


State 84

   74 type_declaration: enum_type_declaration .

    $default  reduce using rule 74 (type_declaration)


State 85

   62 global_declaration: function_declaration .

    $default  reduce using rule 62 (global_declaration)


State 86

   43 simple_name: . IDENT
   96 function_declaration: type . annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | type . annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | type . annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | type . annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | type . annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | type . annotation_block simple_name parameter_list SEMICOLON
  102                     | type . simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | type . simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | type . simple_name parameter_list annotation_block SEMICOLON
  105                     | type . simple_name parameter_list UNIFORM SEMICOLON
  106                     | type . simple_name parameter_list VARYING SEMICOLON
  107                     | type . simple_name parameter_list SEMICOLON
  108                     | type . annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | type . annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | type . annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | type . annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | type . annotation_block simple_name parameter_list VARYING compound_statement
  113                     | type . annotation_block simple_name parameter_list compound_statement
  114                     | type . simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | type . simple_name parameter_list VARYING annotation_block compound_statement
  116                     | type . simple_name parameter_list annotation_block compound_statement
  117                     | type . simple_name parameter_list UNIFORM compound_statement
  118                     | type . simple_name parameter_list VARYING compound_statement
  119                     | type . simple_name parameter_list compound_statement
  120                     | type . annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type . annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type . annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type . annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | type . annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | type . annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | type . simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type . simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type . simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type . simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | type . simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | type . simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | type . annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | type . annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | type . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | type . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    IDENT                   shift, and go to state 71

    simple_name       go to state 123
    annotation_block  go to state 124


State 87

  314 type: array_type .

    $default  reduce using rule 314 (type)


State 88

  315 array_type: simple_type . LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | simple_type . LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | simple_type .  [ANNOTATION_BLOCK_BEGIN, RIGHT_ANGLE_BRACKET, IDENT]

    LEFT_SQUARE_BRACKET  shift, and go to state 125

    $default  reduce using rule 318 (array_type)


State 89

  320 simple_type: relative_type .

    $default  reduce using rule 320 (simple_type)


State 90

    9 mdl_version: MDL FLOATING_LITERAL SEMICOLON .

    $default  reduce using rule 9 (mdl_version)


State 91

   36 qualified_import_prefix_relative_current: DOT . SCOPE

    SCOPE  shift, and go to state 126


State 92

   38 qualified_import_prefix_relative_parent: DOTDOT . SCOPE

    SCOPE  shift, and go to state 127


State 93

   39 qualified_import_prefix_absolute: SCOPE .

    $default  reduce using rule 39 (qualified_import_prefix_absolute)


State 94

   16 import_declaration: IMPORT qualified_imports . SEMICOLON
   18 qualified_imports: qualified_imports . COMMA qualified_import

    SEMICOLON  shift, and go to state 128
    COMMA      shift, and go to state 129


State 95

   19 qualified_imports: qualified_import .

    $default  reduce using rule 19 (qualified_imports)


State 96

   26 qualified_import: qualified_import_prefix_relative_current . qualified_name_infix qualified_import_suffix
   30                 | qualified_import_prefix_relative_current . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 130
    simple_name           go to state 76


State 97

   27 qualified_import: qualified_import_prefix_relative_parent . qualified_name_infix qualified_import_suffix
   31                 | qualified_import_prefix_relative_parent . qualified_name_infix
   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent . DOTDOT SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    DOTDOT  shift, and go to state 131
    IDENT   shift, and go to state 71

    qualified_name_infix  go to state 132
    simple_name           go to state 76


State 98

   28 qualified_import: qualified_import_prefix_absolute . qualified_name_infix qualified_import_suffix
   32                 | qualified_import_prefix_absolute . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 133
    simple_name           go to state 76


State 99

   29 qualified_import: qualified_name_infix . qualified_import_suffix
   33                 | qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 134

    $default  reduce using rule 33 (qualified_import)

    qualified_import_suffix  go to state 135


State 100

   45 module_declaration: MODULE SEMICOLON .

    $default  reduce using rule 45 (module_declaration)


State 101

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  210 annotation_block: ANNOTATION_BLOCK_BEGIN . annotations ANNOTATION_BLOCK_END
  211 annotations: . annotations COMMA annotation
  212            | . annotation
  213 qualified_name: . SCOPE qualified_name_infix
  214               | . qualified_name_infix
  215 annotation: . qualified_name argument_list

    SCOPE  shift, and go to state 136
    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 137
    simple_name           go to state 76
    annotations           go to state 138
    qualified_name        go to state 139
    annotation            go to state 140


State 102

   44 module_declaration: MODULE annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 141


State 103

   17 import_declaration: EXPORT USING . qualified_import_prefix IMPORT unqualified_import SEMICOLON
   20 qualified_import_prefix: . qualified_import_prefix_relative_current qualified_name_infix
   21                        | . qualified_import_prefix_relative_parent qualified_name_infix
   22                        | . qualified_import_prefix_absolute qualified_name_infix
   23                        | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    DOT     shift, and go to state 91
    DOTDOT  shift, and go to state 92
    SCOPE   shift, and go to state 93
    IDENT   shift, and go to state 71

    qualified_import_prefix                   go to state 142
    qualified_import_prefix_relative_current  go to state 143
    qualified_import_prefix_relative_parent   go to state 144
    qualified_import_prefix_absolute          go to state 145
    qualified_name_infix                      go to state 146
    simple_name                               go to state 76


State 104

   55 global_declaration: EXPORT annotation_declaration .

    $default  reduce using rule 55 (global_declaration)


State 105

   56 global_declaration: EXPORT constant_declaration .

    $default  reduce using rule 56 (global_declaration)


State 106

   57 global_declaration: EXPORT type_declaration .

    $default  reduce using rule 57 (global_declaration)


State 107

   58 global_declaration: EXPORT function_declaration .

    $default  reduce using rule 58 (global_declaration)


State 108

  313 type: UNIFORM array_type .

    $default  reduce using rule 313 (type)


State 109

  312 type: VARYING array_type .

    $default  reduce using rule 312 (type)


State 110

   63 annotation_declaration: ANNOTATION simple_name . parameter_list annotation_block SEMICOLON
   64                       | ANNOTATION simple_name . parameter_list SEMICOLON
  202 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  203               | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 147

    parameter_list  go to state 148


State 111

   43 simple_name: . IDENT
   65 constant_declaration: CONST type . constant_declarators SEMICOLON
   66 constant_declarators: . constant_declarators COMMA constant_declarator
   67                     | . constant_declarator
   68 constant_declarator: . simple_name argument_list annotation_block
   69                    | . simple_name argument_list
   70                    | . simple_name ASSIGN_OP conditional_expression annotation_block
   71                    | . simple_name ASSIGN_OP conditional_expression

    IDENT  shift, and go to state 71

    simple_name           go to state 149
    constant_declarators  go to state 150
    constant_declarator   go to state 151


State 112

   43 simple_name: . IDENT
   75 alias_type_declaration: TYPEDEF type . simple_name SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 152


State 113

   76 struct_type_declaration: STRUCT simple_name . annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT simple_name . LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT simple_name . annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | STRUCT simple_name . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 153

    annotation_block  go to state 154


State 114

   86 enum_type_declaration: ENUM simple_name . annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM simple_name . LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM simple_name . annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | ENUM simple_name . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 155

    annotation_block  go to state 156


State 115

  319 simple_type: SCOPE relative_type .

    $default  reduce using rule 319 (simple_type)


State 116

    2 mdl: mdl_version import_declarations global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . EXPORT annotation_declaration
   56                   | . EXPORT constant_declaration
   57                   | . EXPORT type_declaration
   58                   | . EXPORT function_declaration
   59                   | . annotation_declaration
   60                   | . constant_declaration
   61                   | . type_declaration
   62                   | . function_declaration
   63 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   64                       | . ANNOTATION simple_name parameter_list SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   96 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | . type annotation_block simple_name parameter_list SEMICOLON
  102                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | . type simple_name parameter_list annotation_block SEMICOLON
  105                     | . type simple_name parameter_list UNIFORM SEMICOLON
  106                     | . type simple_name parameter_list VARYING SEMICOLON
  107                     | . type simple_name parameter_list SEMICOLON
  108                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  113                     | . type annotation_block simple_name parameter_list compound_statement
  114                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  116                     | . type simple_name parameter_list annotation_block compound_statement
  117                     | . type simple_name parameter_list UNIFORM compound_statement
  118                     | . type simple_name parameter_list VARYING compound_statement
  119                     | . type simple_name parameter_list compound_statement
  120                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 2 (mdl)

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 120
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 117

   10 import_declarations: import_declarations import_declaration .

    $default  reduce using rule 10 (import_declarations)


State 118

    1 mdl: mdl_version import_declarations module_declaration . global_declarations
    4    | mdl_version import_declarations module_declaration .  [$end]
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . EXPORT annotation_declaration
   56                   | . EXPORT constant_declaration
   57                   | . EXPORT type_declaration
   58                   | . EXPORT function_declaration
   59                   | . annotation_declaration
   60                   | . constant_declaration
   61                   | . type_declaration
   62                   | . function_declaration
   63 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   64                       | . ANNOTATION simple_name parameter_list SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   96 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | . type annotation_block simple_name parameter_list SEMICOLON
  102                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | . type simple_name parameter_list annotation_block SEMICOLON
  105                     | . type simple_name parameter_list UNIFORM SEMICOLON
  106                     | . type simple_name parameter_list VARYING SEMICOLON
  107                     | . type simple_name parameter_list SEMICOLON
  108                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  113                     | . type annotation_block simple_name parameter_list compound_statement
  114                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  116                     | . type simple_name parameter_list annotation_block compound_statement
  117                     | . type simple_name parameter_list UNIFORM compound_statement
  118                     | . type simple_name parameter_list VARYING compound_statement
  119                     | . type simple_name parameter_list compound_statement
  120                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 4 (mdl)

    global_declarations      go to state 157
    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 78
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 119

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: EXPORT . annotation_declaration
   56                   | EXPORT . constant_declaration
   57                   | EXPORT . type_declaration
   58                   | EXPORT . function_declaration
   63 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   64                       | . ANNOTATION simple_name parameter_list SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   96 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | . type annotation_block simple_name parameter_list SEMICOLON
  102                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | . type simple_name parameter_list annotation_block SEMICOLON
  105                     | . type simple_name parameter_list UNIFORM SEMICOLON
  106                     | . type simple_name parameter_list VARYING SEMICOLON
  107                     | . type simple_name parameter_list SEMICOLON
  108                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  113                     | . type annotation_block simple_name parameter_list compound_statement
  114                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  116                     | . type simple_name parameter_list annotation_block compound_statement
  117                     | . type simple_name parameter_list UNIFORM compound_statement
  118                     | . type simple_name parameter_list VARYING compound_statement
  119                     | . type simple_name parameter_list compound_statement
  120                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    annotation_declaration   go to state 104
    constant_declaration     go to state 105
    type_declaration         go to state 106
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 107
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 120

   12 global_declarations: global_declarations global_declaration .

    $default  reduce using rule 12 (global_declarations)


State 121

   40 qualified_name_infix: qualified_name_infix SCOPE . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 158


State 122

    3 mdl: mdl_version module_declaration global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . EXPORT annotation_declaration
   56                   | . EXPORT constant_declaration
   57                   | . EXPORT type_declaration
   58                   | . EXPORT function_declaration
   59                   | . annotation_declaration
   60                   | . constant_declaration
   61                   | . type_declaration
   62                   | . function_declaration
   63 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   64                       | . ANNOTATION simple_name parameter_list SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   96 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | . type annotation_block simple_name parameter_list SEMICOLON
  102                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | . type simple_name parameter_list annotation_block SEMICOLON
  105                     | . type simple_name parameter_list UNIFORM SEMICOLON
  106                     | . type simple_name parameter_list VARYING SEMICOLON
  107                     | . type simple_name parameter_list SEMICOLON
  108                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  113                     | . type annotation_block simple_name parameter_list compound_statement
  114                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  116                     | . type simple_name parameter_list annotation_block compound_statement
  117                     | . type simple_name parameter_list UNIFORM compound_statement
  118                     | . type simple_name parameter_list VARYING compound_statement
  119                     | . type simple_name parameter_list compound_statement
  120                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 3 (mdl)

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 120
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 123

  102 function_declaration: type simple_name . parameter_list UNIFORM annotation_block SEMICOLON
  103                     | type simple_name . parameter_list VARYING annotation_block SEMICOLON
  104                     | type simple_name . parameter_list annotation_block SEMICOLON
  105                     | type simple_name . parameter_list UNIFORM SEMICOLON
  106                     | type simple_name . parameter_list VARYING SEMICOLON
  107                     | type simple_name . parameter_list SEMICOLON
  114                     | type simple_name . parameter_list UNIFORM annotation_block compound_statement
  115                     | type simple_name . parameter_list VARYING annotation_block compound_statement
  116                     | type simple_name . parameter_list annotation_block compound_statement
  117                     | type simple_name . parameter_list UNIFORM compound_statement
  118                     | type simple_name . parameter_list VARYING compound_statement
  119                     | type simple_name . parameter_list compound_statement
  126                     | type simple_name . parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name . parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type simple_name . parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name . parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name . parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | type simple_name . parameter_list ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | type simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  202 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  203               | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 159

    parameter_list  go to state 160


State 124

   43 simple_name: . IDENT
   96 function_declaration: type annotation_block . simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | type annotation_block . simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | type annotation_block . simple_name parameter_list annotation_block SEMICOLON
   99                     | type annotation_block . simple_name parameter_list UNIFORM SEMICOLON
  100                     | type annotation_block . simple_name parameter_list VARYING SEMICOLON
  101                     | type annotation_block . simple_name parameter_list SEMICOLON
  108                     | type annotation_block . simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | type annotation_block . simple_name parameter_list VARYING annotation_block compound_statement
  110                     | type annotation_block . simple_name parameter_list annotation_block compound_statement
  111                     | type annotation_block . simple_name parameter_list UNIFORM compound_statement
  112                     | type annotation_block . simple_name parameter_list VARYING compound_statement
  113                     | type annotation_block . simple_name parameter_list compound_statement
  120                     | type annotation_block . simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block . simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block . simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block . simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block . simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | type annotation_block . simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | type annotation_block . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 161


State 125

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  315 array_type: simple_type LEFT_SQUARE_BRACKET . LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | simple_type LEFT_SQUARE_BRACKET . conditional_expression RIGHT_SQUARE_BRACKET
  317           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_SQUARE_BRACKET        shift, and go to state 174
    LEFT_ANGLE_BRACKET          shift, and go to state 175
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    conditional_expression        go to state 178
    logical_or_expression         go to state 179
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 126

   36 qualified_import_prefix_relative_current: DOT SCOPE .

    $default  reduce using rule 36 (qualified_import_prefix_relative_current)


State 127

   38 qualified_import_prefix_relative_parent: DOTDOT SCOPE .

    $default  reduce using rule 38 (qualified_import_prefix_relative_parent)


State 128

   16 import_declaration: IMPORT qualified_imports SEMICOLON .

    $default  reduce using rule 16 (import_declaration)


State 129

   18 qualified_imports: qualified_imports COMMA . qualified_import
   26 qualified_import: . qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | . qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | . qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | . qualified_name_infix qualified_import_suffix
   30                 | . qualified_import_prefix_relative_current qualified_name_infix
   31                 | . qualified_import_prefix_relative_parent qualified_name_infix
   32                 | . qualified_import_prefix_absolute qualified_name_infix
   33                 | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    DOT     shift, and go to state 91
    DOTDOT  shift, and go to state 92
    SCOPE   shift, and go to state 93
    IDENT   shift, and go to state 71

    qualified_import                          go to state 203
    qualified_import_prefix_relative_current  go to state 96
    qualified_import_prefix_relative_parent   go to state 97
    qualified_import_prefix_absolute          go to state 98
    qualified_name_infix                      go to state 99
    simple_name                               go to state 76


State 130

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix . qualified_import_suffix
   30                 | qualified_import_prefix_relative_current qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 134

    $default  reduce using rule 30 (qualified_import)

    qualified_import_suffix  go to state 204


State 131

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT . SCOPE

    SCOPE  shift, and go to state 205


State 132

   27 qualified_import: qualified_import_prefix_relative_parent qualified_name_infix . qualified_import_suffix
   31                 | qualified_import_prefix_relative_parent qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 134

    $default  reduce using rule 31 (qualified_import)

    qualified_import_suffix  go to state 206


State 133

   28 qualified_import: qualified_import_prefix_absolute qualified_name_infix . qualified_import_suffix
   32                 | qualified_import_prefix_absolute qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 134

    $default  reduce using rule 32 (qualified_import)

    qualified_import_suffix  go to state 207


State 134

   40 qualified_name_infix: qualified_name_infix SCOPE . simple_name
   42 qualified_import_suffix: SCOPE . STAR
   43 simple_name: . IDENT

    STAR   shift, and go to state 208
    IDENT  shift, and go to state 71

    simple_name  go to state 158


State 135

   29 qualified_import: qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 29 (qualified_import)


State 136

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  213 qualified_name: SCOPE . qualified_name_infix

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 209
    simple_name           go to state 76


State 137

   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
  214 qualified_name: qualified_name_infix .  [LEFT_PARENTHESIS]

    SCOPE  shift, and go to state 121

    $default  reduce using rule 214 (qualified_name)


State 138

  210 annotation_block: ANNOTATION_BLOCK_BEGIN annotations . ANNOTATION_BLOCK_END
  211 annotations: annotations . COMMA annotation

    COMMA                 shift, and go to state 210
    ANNOTATION_BLOCK_END  shift, and go to state 211


State 139

  215 annotation: qualified_name . argument_list
  216 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 212

    argument_list  go to state 213


State 140

  212 annotations: annotation .

    $default  reduce using rule 212 (annotations)


State 141

   44 module_declaration: MODULE annotation_block SEMICOLON .

    $default  reduce using rule 44 (module_declaration)


State 142

   17 import_declaration: EXPORT USING qualified_import_prefix . IMPORT unqualified_import SEMICOLON

    IMPORT  shift, and go to state 214


State 143

   20 qualified_import_prefix: qualified_import_prefix_relative_current . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 215
    simple_name           go to state 76


State 144

   21 qualified_import_prefix: qualified_import_prefix_relative_parent . qualified_name_infix
   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent . DOTDOT SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    DOTDOT  shift, and go to state 131
    IDENT   shift, and go to state 71

    qualified_name_infix  go to state 216
    simple_name           go to state 76


State 145

   22 qualified_import_prefix: qualified_import_prefix_absolute . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 217
    simple_name           go to state 76


State 146

   23 qualified_import_prefix: qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 121

    $default  reduce using rule 23 (qualified_import_prefix)


State 147

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  202 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  203               | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  204 parameters: . parameters COMMA parameter
  205           | . parameter
  206 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  207          | . type simple_name ASSIGN_OP assignment_expression
  208          | . type simple_name annotation_block
  209          | . type simple_name
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_PARENTHESIS           shift, and go to state 218
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    parameters            go to state 219
    parameter             go to state 220
    type                  go to state 221
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 148

   63 annotation_declaration: ANNOTATION simple_name parameter_list . annotation_block SEMICOLON
   64                       | ANNOTATION simple_name parameter_list . SEMICOLON
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 222
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 223


State 149

   68 constant_declarator: simple_name . argument_list annotation_block
   69                    | simple_name . argument_list
   70                    | simple_name . ASSIGN_OP conditional_expression annotation_block
   71                    | simple_name . ASSIGN_OP conditional_expression
  216 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    ASSIGN_OP         shift, and go to state 224
    LEFT_PARENTHESIS  shift, and go to state 212

    argument_list  go to state 225


State 150

   65 constant_declaration: CONST type constant_declarators . SEMICOLON
   66 constant_declarators: constant_declarators . COMMA constant_declarator

    SEMICOLON  shift, and go to state 226
    COMMA      shift, and go to state 227


State 151

   67 constant_declarators: constant_declarator .

    $default  reduce using rule 67 (constant_declarators)


State 152

   75 alias_type_declaration: TYPEDEF type simple_name . SEMICOLON

    SEMICOLON  shift, and go to state 228


State 153

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   77 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE . struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   79                        | STRUCT simple_name LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   80 struct_field_declarators: . struct_field_declarators struct_field_declarator
   81                         | . struct_field_declarator
   82 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   83                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   84                        | . type simple_name annotation_block SEMICOLON
   85                        | . type simple_name SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 229
    IDENT                       shift, and go to state 71

    qualified_name_infix      go to state 75
    simple_name               go to state 76
    struct_field_declarators  go to state 230
    struct_field_declarator   go to state 231
    type                      go to state 232
    array_type                go to state 87
    simple_type               go to state 88
    relative_type             go to state 89


State 154

   76 struct_type_declaration: STRUCT simple_name annotation_block . LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT simple_name annotation_block . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    LEFT_CURLY_BRACE  shift, and go to state 233


State 155

   43 simple_name: . IDENT
   87 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE . enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   89                      | ENUM simple_name LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   90 enum_value_declarators: . enum_value_declarators COMMA enum_value_declarator
   91                       | . enum_value_declarator
   92 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   93                      | . simple_name ASSIGN_OP assignment_expression
   94                      | . simple_name annotation_block
   95                      | . simple_name

    RIGHT_CURLY_BRACE  shift, and go to state 234
    IDENT              shift, and go to state 71

    simple_name             go to state 235
    enum_value_declarators  go to state 236
    enum_value_declarator   go to state 237


State 156

   86 enum_type_declaration: ENUM simple_name annotation_block . LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM simple_name annotation_block . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    LEFT_CURLY_BRACE  shift, and go to state 238


State 157

    1 mdl: mdl_version import_declarations module_declaration global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . EXPORT annotation_declaration
   56                   | . EXPORT constant_declaration
   57                   | . EXPORT type_declaration
   58                   | . EXPORT function_declaration
   59                   | . annotation_declaration
   60                   | . constant_declaration
   61                   | . type_declaration
   62                   | . function_declaration
   63 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   64                       | . ANNOTATION simple_name parameter_list SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   96 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   99                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
  100                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  101                     | . type annotation_block simple_name parameter_list SEMICOLON
  102                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  103                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  104                     | . type simple_name parameter_list annotation_block SEMICOLON
  105                     | . type simple_name parameter_list UNIFORM SEMICOLON
  106                     | . type simple_name parameter_list VARYING SEMICOLON
  107                     | . type simple_name parameter_list SEMICOLON
  108                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  111                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  112                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  113                     | . type annotation_block simple_name parameter_list compound_statement
  114                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  115                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  116                     | . type simple_name parameter_list annotation_block compound_statement
  117                     | . type simple_name parameter_list UNIFORM compound_statement
  118                     | . type simple_name parameter_list VARYING compound_statement
  119                     | . type simple_name parameter_list compound_statement
  120                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    EXPORT                      shift, and go to state 119
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 1 (mdl)

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 120
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 158

   40 qualified_name_infix: qualified_name_infix SCOPE simple_name .

    $default  reduce using rule 40 (qualified_name_infix)


State 159

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  134 function_declaration: type simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | type simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  202 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  203               | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  204 parameters: . parameters COMMA parameter
  205           | . parameter
  206 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  207          | . type simple_name ASSIGN_OP assignment_expression
  208          | . type simple_name annotation_block
  209          | . type simple_name
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    STAR                        shift, and go to state 239
    RIGHT_PARENTHESIS           shift, and go to state 218
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    parameters            go to state 219
    parameter             go to state 220
    type                  go to state 221
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 160

  102 function_declaration: type simple_name parameter_list . UNIFORM annotation_block SEMICOLON
  103                     | type simple_name parameter_list . VARYING annotation_block SEMICOLON
  104                     | type simple_name parameter_list . annotation_block SEMICOLON
  105                     | type simple_name parameter_list . UNIFORM SEMICOLON
  106                     | type simple_name parameter_list . VARYING SEMICOLON
  107                     | type simple_name parameter_list . SEMICOLON
  114                     | type simple_name parameter_list . UNIFORM annotation_block compound_statement
  115                     | type simple_name parameter_list . VARYING annotation_block compound_statement
  116                     | type simple_name parameter_list . annotation_block compound_statement
  117                     | type simple_name parameter_list . UNIFORM compound_statement
  118                     | type simple_name parameter_list . VARYING compound_statement
  119                     | type simple_name parameter_list . compound_statement
  126                     | type simple_name parameter_list . UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name parameter_list . VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type simple_name parameter_list . annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name parameter_list . UNIFORM ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name parameter_list . VARYING ASSIGN_OP comma_expression SEMICOLON
  131                     | type simple_name parameter_list . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 240
    UNIFORM                 shift, and go to state 241
    VARYING                 shift, and go to state 242
    ASSIGN_OP               shift, and go to state 243
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 244

    compound_statement  go to state 245
    annotation_block    go to state 246


State 161

   96 function_declaration: type annotation_block simple_name . parameter_list UNIFORM annotation_block SEMICOLON
   97                     | type annotation_block simple_name . parameter_list VARYING annotation_block SEMICOLON
   98                     | type annotation_block simple_name . parameter_list annotation_block SEMICOLON
   99                     | type annotation_block simple_name . parameter_list UNIFORM SEMICOLON
  100                     | type annotation_block simple_name . parameter_list VARYING SEMICOLON
  101                     | type annotation_block simple_name . parameter_list SEMICOLON
  108                     | type annotation_block simple_name . parameter_list UNIFORM annotation_block compound_statement
  109                     | type annotation_block simple_name . parameter_list VARYING annotation_block compound_statement
  110                     | type annotation_block simple_name . parameter_list annotation_block compound_statement
  111                     | type annotation_block simple_name . parameter_list UNIFORM compound_statement
  112                     | type annotation_block simple_name . parameter_list VARYING compound_statement
  113                     | type annotation_block simple_name . parameter_list compound_statement
  120                     | type annotation_block simple_name . parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name . parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block simple_name . parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name . parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block simple_name . parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | type annotation_block simple_name . parameter_list ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | type annotation_block simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  202 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  203               | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 247

    parameter_list  go to state 248


State 162

  311 string_literal: STRING_LITERAL .

    $default  reduce using rule 311 (string_literal)


State 163

  306 boolean_literal: TRUE .

    $default  reduce using rule 306 (boolean_literal)


State 164

  307 boolean_literal: FALSE .

    $default  reduce using rule 307 (boolean_literal)


State 165

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
  300 let_expression: LET . variable_declaration IN unary_expression
  301               | LET . LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    LEFT_CURLY_BRACE            shift, and go to state 249
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    variable_declaration  go to state 250
    type                  go to state 251
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 166

  299 cast_expression: CAST . LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

    LEFT_ANGLE_BRACKET  shift, and go to state 252


State 167

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | BITWISE_COMPLEMENT_OP . unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    unary_expression              go to state 253
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 168

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  273                 | LOGICAL_NOT_OP . unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    unary_expression              go to state 254
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 169

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  274                 | POSITIVE_OP . unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    unary_expression              go to state 255
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 170

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  275                 | NEGATIVE_OP . unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    unary_expression              go to state 256
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 171

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  276                 | INCREMENT_OP . unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    unary_expression              go to state 257
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 172

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  277                 | DECREMENT_OP . unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    unary_expression              go to state 258
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 173

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292                           | LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 259
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 174

  317 array_type: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 317 (array_type)


State 175

   43 simple_name: . IDENT
  315 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET . simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET

    IDENT  shift, and go to state 71

    simple_name  go to state 263


State 176

  308 integer_literal: INTEGER_LITERAL .

    $default  reduce using rule 308 (integer_literal)


State 177

  309 floating_literal: FLOATING_LITERAL .

    $default  reduce using rule 309 (floating_literal)


State 178

  316 array_type: simple_type LEFT_SQUARE_BRACKET conditional_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 264


State 179

  241 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | logical_or_expression .  [SEMICOLON, COMMA, ANNOTATION_BLOCK_BEGIN, RIGHT_SQUARE_BRACKET]

    CONDITIONAL_OP  shift, and go to state 265

    $default  reduce using rule 242 (conditional_expression)


State 180

  243 logical_or_expression: logical_and_expression . LOGICAL_OR_OP logical_or_expression
  244                      | logical_and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    LOGICAL_OR_OP  shift, and go to state 266

    $default  reduce using rule 244 (logical_or_expression)


State 181

  245 logical_and_expression: inclusive_or_expression . LOGICAL_AND_OP logical_and_expression
  246                       | inclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    LOGICAL_AND_OP  shift, and go to state 267

    $default  reduce using rule 246 (logical_and_expression)


State 182

  247 inclusive_or_expression: exclusive_or_expression . BITWISE_OR_OP inclusive_or_expression
  248                        | exclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    BITWISE_OR_OP  shift, and go to state 268

    $default  reduce using rule 248 (inclusive_or_expression)


State 183

  249 exclusive_or_expression: and_expression . BITWISE_XOR_OP exclusive_or_expression
  250                        | and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    BITWISE_XOR_OP  shift, and go to state 269

    $default  reduce using rule 250 (exclusive_or_expression)


State 184

  251 and_expression: equality_expression . BITWISE_AND_OP and_expression
  252               | equality_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    BITWISE_AND_OP  shift, and go to state 270

    $default  reduce using rule 252 (and_expression)


State 185

  253 equality_expression: relational_expression . EQUAL_OP equality_expression
  254                    | relational_expression . NOT_EQUAL_OP equality_expression
  255                    | relational_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    EQUAL_OP      shift, and go to state 271
    NOT_EQUAL_OP  shift, and go to state 272

    $default  reduce using rule 255 (equality_expression)


State 186

  256 relational_expression: shift_expression . LEFT_ANGLE_BRACKET relational_expression
  257                      | shift_expression . LESS_OR_EQUAL_OP relational_expression
  258                      | shift_expression . GREATER_OR_EQUAL_OP relational_expression
  259                      | shift_expression . RIGHT_ANGLE_BRACKET relational_expression
  260                      | shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    LESS_OR_EQUAL_OP     shift, and go to state 273
    GREATER_OR_EQUAL_OP  shift, and go to state 274
    LEFT_ANGLE_BRACKET   shift, and go to state 275
    RIGHT_ANGLE_BRACKET  shift, and go to state 276

    $default  reduce using rule 260 (relational_expression)


State 187

  261 shift_expression: additive_expression . SHIFT_LEFT_OP shift_expression
  262                 | additive_expression . SHIFT_RIGHT_OP shift_expression
  263                 | additive_expression . UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | additive_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]

    SHIFT_LEFT_OP            shift, and go to state 277
    SHIFT_RIGHT_OP           shift, and go to state 278
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 279

    $default  reduce using rule 264 (shift_expression)


State 188

  265 additive_expression: multiplicative_expression . POSITIVE_OP additive_expression
  266                    | multiplicative_expression . NEGATIVE_OP additive_expression
  267                    | multiplicative_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]

    POSITIVE_OP  shift, and go to state 280
    NEGATIVE_OP  shift, and go to state 281

    $default  reduce using rule 267 (additive_expression)


State 189

  268 multiplicative_expression: unary_expression . STAR multiplicative_expression
  269                          | unary_expression . DIVIDE_OP multiplicative_expression
  270                          | unary_expression . MODULO_OP multiplicative_expression
  271                          | unary_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, POSITIVE_OP, NEGATIVE_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]

    DIVIDE_OP  shift, and go to state 282
    MODULO_OP  shift, and go to state 283
    STAR       shift, and go to state 284

    $default  reduce using rule 271 (multiplicative_expression)


State 190

  278 unary_expression: postfix_expression .

    $default  reduce using rule 278 (unary_expression)


State 191

  216 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS
  280 postfix_expression: matched_postfix_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, STAR, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  282 matched_postfix_expression: matched_postfix_expression . INCREMENT_OP
  283                           | matched_postfix_expression . DECREMENT_OP
  284                           | matched_postfix_expression . DOT simple_name
  285                           | matched_postfix_expression . argument_list
  286                           | matched_postfix_expression . LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET

    INCREMENT_OP         shift, and go to state 285
    DECREMENT_OP         shift, and go to state 286
    DOT                  shift, and go to state 287
    LEFT_PARENTHESIS     shift, and go to state 212
    LEFT_SQUARE_BRACKET  shift, and go to state 288

    $default  reduce using rule 280 (postfix_expression)

    argument_list  go to state 289


State 192

  287 matched_postfix_expression: matched_primary_expression .

    $default  reduce using rule 287 (matched_postfix_expression)


State 193

  216 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS
  281 postfix_expression: unmatched_postfix_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, STAR, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  293 unmatched_postfix_expression: unmatched_postfix_expression . INCREMENT_OP
  294                             | unmatched_postfix_expression . DECREMENT_OP
  295                             | unmatched_postfix_expression . DOT simple_name
  296                             | unmatched_postfix_expression . argument_list

    INCREMENT_OP      shift, and go to state 290
    DECREMENT_OP      shift, and go to state 291
    DOT               shift, and go to state 292
    LEFT_PARENTHESIS  shift, and go to state 212

    $default  reduce using rule 281 (postfix_expression)

    argument_list  go to state 293


State 194

  297 unmatched_postfix_expression: unmatched_primary_expression .

    $default  reduce using rule 297 (unmatched_postfix_expression)


State 195

  288 matched_postfix_expression: cast_expression .

    $default  reduce using rule 288 (matched_postfix_expression)


State 196

  279 unary_expression: let_expression .

    $default  reduce using rule 279 (unary_expression)


State 197

  291 matched_primary_expression: literal_expression .

    $default  reduce using rule 291 (matched_primary_expression)


State 198

  302 literal_expression: boolean_literal .

    $default  reduce using rule 302 (literal_expression)


State 199

  303 literal_expression: integer_literal .

    $default  reduce using rule 303 (literal_expression)


State 200

  304 literal_expression: floating_literal .

    $default  reduce using rule 304 (literal_expression)


State 201

  305 literal_expression: string_literal .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, COLON, ANNOTATION_BLOCK_BEGIN, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  310 string_literal: string_literal . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 294

    $default  reduce using rule 305 (literal_expression)


State 202

  289 matched_primary_expression: simple_type . LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  298 unmatched_primary_expression: simple_type .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, COLON, ANNOTATION_BLOCK_BEGIN, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]

    LEFT_SQUARE_BRACKET  shift, and go to state 295

    $default  reduce using rule 298 (unmatched_primary_expression)


State 203

   18 qualified_imports: qualified_imports COMMA qualified_import .

    $default  reduce using rule 18 (qualified_imports)


State 204

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 26 (qualified_import)


State 205

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE .

    $default  reduce using rule 37 (qualified_import_prefix_relative_parent)


State 206

   27 qualified_import: qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 27 (qualified_import)


State 207

   28 qualified_import: qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 28 (qualified_import)


State 208

   42 qualified_import_suffix: SCOPE STAR .

    $default  reduce using rule 42 (qualified_import_suffix)


State 209

   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
  213 qualified_name: SCOPE qualified_name_infix .  [LEFT_PARENTHESIS]

    SCOPE  shift, and go to state 121

    $default  reduce using rule 213 (qualified_name)


State 210

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  211 annotations: annotations COMMA . annotation
  213 qualified_name: . SCOPE qualified_name_infix
  214               | . qualified_name_infix
  215 annotation: . qualified_name argument_list

    SCOPE  shift, and go to state 136
    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 137
    simple_name           go to state 76
    qualified_name        go to state 139
    annotation            go to state 296


State 211

  210 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END .

    $default  reduce using rule 210 (annotation_block)


State 212

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  216 argument_list: LEFT_PARENTHESIS . positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | LEFT_PARENTHESIS . named_arguments RIGHT_PARENTHESIS
  218              | LEFT_PARENTHESIS . positional_arguments RIGHT_PARENTHESIS
  219              | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  220 named_arguments: . named_arguments COMMA named_argument
  221                | . named_argument
  222 positional_arguments: . positional_arguments COMMA positional_argument
  223                     | . positional_argument
  224 named_argument: . simple_name COLON assignment_expression
  225 positional_argument: . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 297
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 298
    named_arguments               go to state 299
    positional_arguments          go to state 300
    named_argument                go to state 301
    positional_argument           go to state 302
    assignment_expression         go to state 303
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 213

  215 annotation: qualified_name argument_list .

    $default  reduce using rule 215 (annotation)


State 214

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT . unqualified_import SEMICOLON
   24 unqualified_import: . unqualified_import_simple_names
   25                   | . STAR
   34 unqualified_import_simple_names: . unqualified_import_simple_names COMMA simple_name
   35                                | . simple_name
   43 simple_name: . IDENT

    STAR   shift, and go to state 304
    IDENT  shift, and go to state 71

    unqualified_import               go to state 305
    unqualified_import_simple_names  go to state 306
    simple_name                      go to state 307


State 215

   20 qualified_import_prefix: qualified_import_prefix_relative_current qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 121

    $default  reduce using rule 20 (qualified_import_prefix)


State 216

   21 qualified_import_prefix: qualified_import_prefix_relative_parent qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 121

    $default  reduce using rule 21 (qualified_import_prefix)


State 217

   22 qualified_import_prefix: qualified_import_prefix_absolute qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 121

    $default  reduce using rule 22 (qualified_import_prefix)


State 218

  203 parameter_list: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 203 (parameter_list)


State 219

  202 parameter_list: LEFT_PARENTHESIS parameters . RIGHT_PARENTHESIS
  204 parameters: parameters . COMMA parameter

    COMMA              shift, and go to state 308
    RIGHT_PARENTHESIS  shift, and go to state 309


State 220

  205 parameters: parameter .

    $default  reduce using rule 205 (parameters)


State 221

   43 simple_name: . IDENT
  206 parameter: type . simple_name ASSIGN_OP assignment_expression annotation_block
  207          | type . simple_name ASSIGN_OP assignment_expression
  208          | type . simple_name annotation_block
  209          | type . simple_name

    IDENT  shift, and go to state 71

    simple_name  go to state 310


State 222

   64 annotation_declaration: ANNOTATION simple_name parameter_list SEMICOLON .

    $default  reduce using rule 64 (annotation_declaration)


State 223

   63 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 311


State 224

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   70 constant_declarator: simple_name ASSIGN_OP . conditional_expression annotation_block
   71                    | simple_name ASSIGN_OP . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    conditional_expression        go to state 312
    logical_or_expression         go to state 179
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 225

   68 constant_declarator: simple_name argument_list . annotation_block
   69                    | simple_name argument_list .  [SEMICOLON, COMMA]
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 69 (constant_declarator)

    annotation_block  go to state 313


State 226

   65 constant_declaration: CONST type constant_declarators SEMICOLON .

    $default  reduce using rule 65 (constant_declaration)


State 227

   43 simple_name: . IDENT
   66 constant_declarators: constant_declarators COMMA . constant_declarator
   68 constant_declarator: . simple_name argument_list annotation_block
   69                    | . simple_name argument_list
   70                    | . simple_name ASSIGN_OP conditional_expression annotation_block
   71                    | . simple_name ASSIGN_OP conditional_expression

    IDENT  shift, and go to state 71

    simple_name          go to state 149
    constant_declarator  go to state 314


State 228

   75 alias_type_declaration: TYPEDEF type simple_name SEMICOLON .

    $default  reduce using rule 75 (alias_type_declaration)


State 229

   79 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 315


State 230

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   77 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators . RIGHT_CURLY_BRACE SEMICOLON
   80 struct_field_declarators: struct_field_declarators . struct_field_declarator
   82 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   83                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   84                        | . type simple_name annotation_block SEMICOLON
   85                        | . type simple_name SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 316
    IDENT                       shift, and go to state 71

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    struct_field_declarator  go to state 317
    type                     go to state 232
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 231

   81 struct_field_declarators: struct_field_declarator .

    $default  reduce using rule 81 (struct_field_declarators)


State 232

   43 simple_name: . IDENT
   82 struct_field_declarator: type . simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   83                        | type . simple_name ASSIGN_OP comma_expression SEMICOLON
   84                        | type . simple_name annotation_block SEMICOLON
   85                        | type . simple_name SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 318


State 233

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   76 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE . struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT simple_name annotation_block LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   80 struct_field_declarators: . struct_field_declarators struct_field_declarator
   81                         | . struct_field_declarator
   82 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   83                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   84                        | . type simple_name annotation_block SEMICOLON
   85                        | . type simple_name SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 319
    IDENT                       shift, and go to state 71

    qualified_name_infix      go to state 75
    simple_name               go to state 76
    struct_field_declarators  go to state 320
    struct_field_declarator   go to state 231
    type                      go to state 232
    array_type                go to state 87
    simple_type               go to state 88
    relative_type             go to state 89


State 234

   89 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 321


State 235

   92 enum_value_declarator: simple_name . ASSIGN_OP assignment_expression annotation_block
   93                      | simple_name . ASSIGN_OP assignment_expression
   94                      | simple_name . annotation_block
   95                      | simple_name .  [COMMA, RIGHT_CURLY_BRACE]
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 322
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 95 (enum_value_declarator)

    annotation_block  go to state 323


State 236

   87 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators . RIGHT_CURLY_BRACE SEMICOLON
   90 enum_value_declarators: enum_value_declarators . COMMA enum_value_declarator

    COMMA              shift, and go to state 324
    RIGHT_CURLY_BRACE  shift, and go to state 325


State 237

   91 enum_value_declarators: enum_value_declarator .

    $default  reduce using rule 91 (enum_value_declarators)


State 238

   43 simple_name: . IDENT
   86 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE . enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM simple_name annotation_block LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   90 enum_value_declarators: . enum_value_declarators COMMA enum_value_declarator
   91                       | . enum_value_declarator
   92 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   93                      | . simple_name ASSIGN_OP assignment_expression
   94                      | . simple_name annotation_block
   95                      | . simple_name

    RIGHT_CURLY_BRACE  shift, and go to state 326
    IDENT              shift, and go to state 71

    simple_name             go to state 235
    enum_value_declarators  go to state 327
    enum_value_declarator   go to state 237


State 239

  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | type simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 328


State 240

  107 function_declaration: type simple_name parameter_list SEMICOLON .

    $default  reduce using rule 107 (function_declaration)


State 241

  102 function_declaration: type simple_name parameter_list UNIFORM . annotation_block SEMICOLON
  105                     | type simple_name parameter_list UNIFORM . SEMICOLON
  114                     | type simple_name parameter_list UNIFORM . annotation_block compound_statement
  117                     | type simple_name parameter_list UNIFORM . compound_statement
  126                     | type simple_name parameter_list UNIFORM . annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name parameter_list UNIFORM . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 329
    ASSIGN_OP               shift, and go to state 330
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 244

    compound_statement  go to state 331
    annotation_block    go to state 332


State 242

  103 function_declaration: type simple_name parameter_list VARYING . annotation_block SEMICOLON
  106                     | type simple_name parameter_list VARYING . SEMICOLON
  115                     | type simple_name parameter_list VARYING . annotation_block compound_statement
  118                     | type simple_name parameter_list VARYING . compound_statement
  127                     | type simple_name parameter_list VARYING . annotation_block ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name parameter_list VARYING . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 333
    ASSIGN_OP               shift, and go to state 334
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 244

    compound_statement  go to state 335
    annotation_block    go to state 336


State 243

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  131 function_declaration: type simple_name parameter_list ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 337
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 244

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | LEFT_CURLY_BRACE . statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  137                   | LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
  138 statements: . statements statement
  139           | . statement
  140 statement: . matched_statement
  141          | . unmatched_statement
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    RIGHT_CURLY_BRACE           shift, and go to state 347
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    statements                    go to state 352
    statement                     go to state 353
    matched_statement             go to state 354
    unmatched_statement           go to state 355
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 245

  119 function_declaration: type simple_name parameter_list compound_statement .

    $default  reduce using rule 119 (function_declaration)


State 246

  104 function_declaration: type simple_name parameter_list annotation_block . SEMICOLON
  116                     | type simple_name parameter_list annotation_block . compound_statement
  128                     | type simple_name parameter_list annotation_block . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 370
    ASSIGN_OP         shift, and go to state 371
    LEFT_CURLY_BRACE  shift, and go to state 244

    compound_statement  go to state 372


State 247

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | type annotation_block simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  202 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  203               | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  204 parameters: . parameters COMMA parameter
  205           | . parameter
  206 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  207          | . type simple_name ASSIGN_OP assignment_expression
  208          | . type simple_name annotation_block
  209          | . type simple_name
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    STAR                        shift, and go to state 373
    RIGHT_PARENTHESIS           shift, and go to state 218
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    parameters            go to state 219
    parameter             go to state 220
    type                  go to state 221
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 248

   96 function_declaration: type annotation_block simple_name parameter_list . UNIFORM annotation_block SEMICOLON
   97                     | type annotation_block simple_name parameter_list . VARYING annotation_block SEMICOLON
   98                     | type annotation_block simple_name parameter_list . annotation_block SEMICOLON
   99                     | type annotation_block simple_name parameter_list . UNIFORM SEMICOLON
  100                     | type annotation_block simple_name parameter_list . VARYING SEMICOLON
  101                     | type annotation_block simple_name parameter_list . SEMICOLON
  108                     | type annotation_block simple_name parameter_list . UNIFORM annotation_block compound_statement
  109                     | type annotation_block simple_name parameter_list . VARYING annotation_block compound_statement
  110                     | type annotation_block simple_name parameter_list . annotation_block compound_statement
  111                     | type annotation_block simple_name parameter_list . UNIFORM compound_statement
  112                     | type annotation_block simple_name parameter_list . VARYING compound_statement
  113                     | type annotation_block simple_name parameter_list . compound_statement
  120                     | type annotation_block simple_name parameter_list . UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name parameter_list . VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block simple_name parameter_list . annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name parameter_list . UNIFORM ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block simple_name parameter_list . VARYING ASSIGN_OP comma_expression SEMICOLON
  125                     | type annotation_block simple_name parameter_list . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 374
    UNIFORM                 shift, and go to state 375
    VARYING                 shift, and go to state 376
    ASSIGN_OP               shift, and go to state 377
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 244

    compound_statement  go to state 378
    annotation_block    go to state 379


State 249

   14 variable_declarations: . variable_declarations variable_declaration
   15                      | . variable_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
  301 let_expression: LET LEFT_CURLY_BRACE . variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    variable_declarations  go to state 380
    qualified_name_infix   go to state 75
    simple_name            go to state 76
    variable_declaration   go to state 381
    type                   go to state 251
    array_type             go to state 87
    simple_type            go to state 88
    relative_type          go to state 89


State 250

  300 let_expression: LET variable_declaration . IN unary_expression

    IN  shift, and go to state 382


State 251

   43 simple_name: . IDENT
   46 variable_declaration: type . variable_declarators SEMICOLON
   47 variable_declarators: . variable_declarators COMMA variable_declarator
   48                     | . variable_declarator
   49 variable_declarator: . simple_name argument_list annotation_block
   50                    | . simple_name argument_list
   51                    | . simple_name ASSIGN_OP assignment_expression annotation_block
   52                    | . simple_name ASSIGN_OP assignment_expression
   53                    | . simple_name annotation_block
   54                    | . simple_name

    IDENT  shift, and go to state 71

    simple_name           go to state 383
    variable_declarators  go to state 384
    variable_declarator   go to state 385


State 252

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  299 cast_expression: CAST LEFT_ANGLE_BRACKET . type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    type                  go to state 386
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 253

  272 unary_expression: BITWISE_COMPLEMENT_OP unary_expression .

    $default  reduce using rule 272 (unary_expression)


State 254

  273 unary_expression: LOGICAL_NOT_OP unary_expression .

    $default  reduce using rule 273 (unary_expression)


State 255

  274 unary_expression: POSITIVE_OP unary_expression .

    $default  reduce using rule 274 (unary_expression)


State 256

  275 unary_expression: NEGATIVE_OP unary_expression .

    $default  reduce using rule 275 (unary_expression)


State 257

  276 unary_expression: INCREMENT_OP unary_expression .

    $default  reduce using rule 276 (unary_expression)


State 258

  277 unary_expression: DECREMENT_OP unary_expression .

    $default  reduce using rule 277 (unary_expression)


State 259

  292 matched_primary_expression: LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 387


State 260

  226 comma_expression: assignment_expression . COMMA comma_expression
  227                 | assignment_expression .  [SEMICOLON, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET]

    COMMA  shift, and go to state 388

    $default  reduce using rule 227 (comma_expression)


State 261

  240 assignment_expression: conditional_expression .

    $default  reduce using rule 240 (assignment_expression)


State 262

  228 assignment_expression: logical_or_expression . ASSIGN_OP assignment_expression
  229                      | logical_or_expression . BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | logical_or_expression . BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | logical_or_expression . BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | logical_or_expression . SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | logical_or_expression . SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | logical_or_expression . UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | logical_or_expression . MULTIPLY_ASSIGN_OP assignment_expression
  236                      | logical_or_expression . DIVIDE_ASSIGN_OP assignment_expression
  237                      | logical_or_expression . MODULO_ASSIGN_OP assignment_expression
  238                      | logical_or_expression . PLUS_ASSIGN_OP assignment_expression
  239                      | logical_or_expression . MINUS_ASSIGN_OP assignment_expression
  241 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | logical_or_expression .  [SEMICOLON, COMMA, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    ASSIGN_OP                       shift, and go to state 389
    BITWISE_OR_ASSIGN_OP            shift, and go to state 390
    BITWISE_AND_ASSIGN_OP           shift, and go to state 391
    BITWISE_XOR_ASSIGN_OP           shift, and go to state 392
    SHIFT_LEFT_ASSIGN_OP            shift, and go to state 393
    SHIFT_RIGHT_ASSIGN_OP           shift, and go to state 394
    UNSIGNED_SHIFT_RIGHT_ASSIGN_OP  shift, and go to state 395
    MULTIPLY_ASSIGN_OP              shift, and go to state 396
    DIVIDE_ASSIGN_OP                shift, and go to state 397
    MODULO_ASSIGN_OP                shift, and go to state 398
    PLUS_ASSIGN_OP                  shift, and go to state 399
    MINUS_ASSIGN_OP                 shift, and go to state 400
    CONDITIONAL_OP                  shift, and go to state 265

    $default  reduce using rule 242 (conditional_expression)


State 263

  315 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name . RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 401


State 264

  316 array_type: simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 316 (array_type)


State 265

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | logical_or_expression CONDITIONAL_OP . comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 402
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 266

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  243                      | logical_and_expression LOGICAL_OR_OP . logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    logical_or_expression         go to state 403
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 267

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  245                       | inclusive_or_expression LOGICAL_AND_OP . logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    logical_and_expression        go to state 404
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 268

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  247                        | exclusive_or_expression BITWISE_OR_OP . inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    inclusive_or_expression       go to state 405
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 269

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  249                        | and_expression BITWISE_XOR_OP . exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    exclusive_or_expression       go to state 406
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 270

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  251               | equality_expression BITWISE_AND_OP . and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    and_expression                go to state 407
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 271

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  253                    | relational_expression EQUAL_OP . equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    equality_expression           go to state 408
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 272

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  254                    | relational_expression NOT_EQUAL_OP . equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    equality_expression           go to state 409
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 273

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  257                      | shift_expression LESS_OR_EQUAL_OP . relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    relational_expression         go to state 410
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 274

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  258                      | shift_expression GREATER_OR_EQUAL_OP . relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    relational_expression         go to state 411
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 275

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  256                      | shift_expression LEFT_ANGLE_BRACKET . relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    relational_expression         go to state 412
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 276

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  259                      | shift_expression RIGHT_ANGLE_BRACKET . relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    relational_expression         go to state 413
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 277

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  261                 | additive_expression SHIFT_LEFT_OP . shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    shift_expression              go to state 414
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 278

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  262                 | additive_expression SHIFT_RIGHT_OP . shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    shift_expression              go to state 415
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 279

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  263                 | additive_expression UNSIGNED_SHIFT_RIGHT_OP . shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    shift_expression              go to state 416
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 280

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  265                    | multiplicative_expression POSITIVE_OP . additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    additive_expression           go to state 417
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 281

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  266                    | multiplicative_expression NEGATIVE_OP . additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    additive_expression           go to state 418
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 282

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  269                          | unary_expression DIVIDE_OP . multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    multiplicative_expression     go to state 419
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 283

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  270                          | unary_expression MODULO_OP . multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    multiplicative_expression     go to state 420
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 284

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  268                          | unary_expression STAR . multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    multiplicative_expression     go to state 421
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 285

  282 matched_postfix_expression: matched_postfix_expression INCREMENT_OP .

    $default  reduce using rule 282 (matched_postfix_expression)


State 286

  283 matched_postfix_expression: matched_postfix_expression DECREMENT_OP .

    $default  reduce using rule 283 (matched_postfix_expression)


State 287

   43 simple_name: . IDENT
  284 matched_postfix_expression: matched_postfix_expression DOT . simple_name

    IDENT  shift, and go to state 71

    simple_name  go to state 422


State 288

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | matched_postfix_expression LEFT_SQUARE_BRACKET . comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 423
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 289

  285 matched_postfix_expression: matched_postfix_expression argument_list .

    $default  reduce using rule 285 (matched_postfix_expression)


State 290

  293 unmatched_postfix_expression: unmatched_postfix_expression INCREMENT_OP .

    $default  reduce using rule 293 (unmatched_postfix_expression)


State 291

  294 unmatched_postfix_expression: unmatched_postfix_expression DECREMENT_OP .

    $default  reduce using rule 294 (unmatched_postfix_expression)


State 292

   43 simple_name: . IDENT
  295 unmatched_postfix_expression: unmatched_postfix_expression DOT . simple_name

    IDENT  shift, and go to state 71

    simple_name  go to state 424


State 293

  296 unmatched_postfix_expression: unmatched_postfix_expression argument_list .

    $default  reduce using rule 296 (unmatched_postfix_expression)


State 294

  310 string_literal: string_literal STRING_LITERAL .

    $default  reduce using rule 310 (string_literal)


State 295

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  289                           | simple_type LEFT_SQUARE_BRACKET . conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_SQUARE_BRACKET        shift, and go to state 425
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    conditional_expression        go to state 426
    logical_or_expression         go to state 179
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 296

  211 annotations: annotations COMMA annotation .

    $default  reduce using rule 211 (annotations)


State 297

  219 argument_list: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 219 (argument_list)


State 298

   41 qualified_name_infix: simple_name .  [COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, SCOPE, STAR, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  224 named_argument: simple_name . COLON assignment_expression

    COLON  shift, and go to state 427

    $default  reduce using rule 41 (qualified_name_infix)


State 299

  217 argument_list: LEFT_PARENTHESIS named_arguments . RIGHT_PARENTHESIS
  220 named_arguments: named_arguments . COMMA named_argument

    COMMA              shift, and go to state 428
    RIGHT_PARENTHESIS  shift, and go to state 429


State 300

  216 argument_list: LEFT_PARENTHESIS positional_arguments . COMMA named_arguments RIGHT_PARENTHESIS
  218              | LEFT_PARENTHESIS positional_arguments . RIGHT_PARENTHESIS
  222 positional_arguments: positional_arguments . COMMA positional_argument

    COMMA              shift, and go to state 430
    RIGHT_PARENTHESIS  shift, and go to state 431


State 301

  221 named_arguments: named_argument .

    $default  reduce using rule 221 (named_arguments)


State 302

  223 positional_arguments: positional_argument .

    $default  reduce using rule 223 (positional_arguments)


State 303

  225 positional_argument: assignment_expression .

    $default  reduce using rule 225 (positional_argument)


State 304

   25 unqualified_import: STAR .

    $default  reduce using rule 25 (unqualified_import)


State 305

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import . SEMICOLON

    SEMICOLON  shift, and go to state 432


State 306

   24 unqualified_import: unqualified_import_simple_names .  [SEMICOLON]
   34 unqualified_import_simple_names: unqualified_import_simple_names . COMMA simple_name

    COMMA  shift, and go to state 433

    $default  reduce using rule 24 (unqualified_import)


State 307

   35 unqualified_import_simple_names: simple_name .

    $default  reduce using rule 35 (unqualified_import_simple_names)


State 308

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  204 parameters: parameters COMMA . parameter
  206 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  207          | . type simple_name ASSIGN_OP assignment_expression
  208          | . type simple_name annotation_block
  209          | . type simple_name
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    parameter             go to state 434
    type                  go to state 221
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 309

  202 parameter_list: LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS .

    $default  reduce using rule 202 (parameter_list)


State 310

  206 parameter: type simple_name . ASSIGN_OP assignment_expression annotation_block
  207          | type simple_name . ASSIGN_OP assignment_expression
  208          | type simple_name . annotation_block
  209          | type simple_name .  [COMMA, RIGHT_PARENTHESIS]
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 435
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 209 (parameter)

    annotation_block  go to state 436


State 311

   63 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 63 (annotation_declaration)


State 312

   70 constant_declarator: simple_name ASSIGN_OP conditional_expression . annotation_block
   71                    | simple_name ASSIGN_OP conditional_expression .  [SEMICOLON, COMMA]
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 71 (constant_declarator)

    annotation_block  go to state 437


State 313

   68 constant_declarator: simple_name argument_list annotation_block .

    $default  reduce using rule 68 (constant_declarator)


State 314

   66 constant_declarators: constant_declarators COMMA constant_declarator .

    $default  reduce using rule 66 (constant_declarators)


State 315

   79 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 79 (struct_type_declaration)


State 316

   77 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 438


State 317

   80 struct_field_declarators: struct_field_declarators struct_field_declarator .

    $default  reduce using rule 80 (struct_field_declarators)


State 318

   82 struct_field_declarator: type simple_name . ASSIGN_OP comma_expression annotation_block SEMICOLON
   83                        | type simple_name . ASSIGN_OP comma_expression SEMICOLON
   84                        | type simple_name . annotation_block SEMICOLON
   85                        | type simple_name . SEMICOLON
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 439
    ASSIGN_OP               shift, and go to state 440
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 441


State 319

   78 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 442


State 320

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   76 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators . RIGHT_CURLY_BRACE SEMICOLON
   80 struct_field_declarators: struct_field_declarators . struct_field_declarator
   82 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   83                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   84                        | . type simple_name annotation_block SEMICOLON
   85                        | . type simple_name SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 443
    IDENT                       shift, and go to state 71

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    struct_field_declarator  go to state 317
    type                     go to state 232
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 321

   89 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 89 (enum_type_declaration)


State 322

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   92 enum_value_declarator: simple_name ASSIGN_OP . assignment_expression annotation_block
   93                      | simple_name ASSIGN_OP . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 444
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 323

   94 enum_value_declarator: simple_name annotation_block .

    $default  reduce using rule 94 (enum_value_declarator)


State 324

   43 simple_name: . IDENT
   90 enum_value_declarators: enum_value_declarators COMMA . enum_value_declarator
   92 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   93                      | . simple_name ASSIGN_OP assignment_expression
   94                      | . simple_name annotation_block
   95                      | . simple_name

    IDENT  shift, and go to state 71

    simple_name            go to state 235
    enum_value_declarator  go to state 445


State 325

   87 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 446


State 326

   88 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 447


State 327

   86 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators . RIGHT_CURLY_BRACE SEMICOLON
   90 enum_value_declarators: enum_value_declarators . COMMA enum_value_declarator

    COMMA              shift, and go to state 324
    RIGHT_CURLY_BRACE  shift, and go to state 448


State 328

  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . annotation_block ASSIGN_OP comma_expression SEMICOLON
  135                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . ASSIGN_OP comma_expression SEMICOLON
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 449
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 450


State 329

  105 function_declaration: type simple_name parameter_list UNIFORM SEMICOLON .

    $default  reduce using rule 105 (function_declaration)


State 330

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  129 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 451
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 331

  117 function_declaration: type simple_name parameter_list UNIFORM compound_statement .

    $default  reduce using rule 117 (function_declaration)


State 332

  102 function_declaration: type simple_name parameter_list UNIFORM annotation_block . SEMICOLON
  114                     | type simple_name parameter_list UNIFORM annotation_block . compound_statement
  126                     | type simple_name parameter_list UNIFORM annotation_block . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 452
    ASSIGN_OP         shift, and go to state 453
    LEFT_CURLY_BRACE  shift, and go to state 244

    compound_statement  go to state 454


State 333

  106 function_declaration: type simple_name parameter_list VARYING SEMICOLON .

    $default  reduce using rule 106 (function_declaration)


State 334

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  130 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 455
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 335

  118 function_declaration: type simple_name parameter_list VARYING compound_statement .

    $default  reduce using rule 118 (function_declaration)


State 336

  103 function_declaration: type simple_name parameter_list VARYING annotation_block . SEMICOLON
  115                     | type simple_name parameter_list VARYING annotation_block . compound_statement
  127                     | type simple_name parameter_list VARYING annotation_block . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 456
    ASSIGN_OP         shift, and go to state 457
    LEFT_CURLY_BRACE  shift, and go to state 244

    compound_statement  go to state 458


State 337

  131 function_declaration: type simple_name parameter_list ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 459


State 338

  155 matched_statement: SEMICOLON .

    $default  reduce using rule 155 (matched_statement)


State 339

  160 matched_if_statement: IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 460


State 340

  163 switch_statement: SWITCH . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | SWITCH . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 461


State 341

  171 matched_while_statement: WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 462


State 342

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173                     | DO . matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174                       | DO . unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 463
    unmatched_statement           go to state 464
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 343

  175 matched_for_statement: FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 465


State 344

  199 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 466


State 345

  200 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 467


State 346

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  201 return_statement: RETURN . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 468
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 347

  137 compound_statement: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 137 (compound_statement)


State 348

  153 matched_statement: variable_declaration .

    $default  reduce using rule 153 (matched_statement)


State 349

  144 matched_statement: constant_declaration .

    $default  reduce using rule 144 (matched_statement)


State 350

  143 matched_statement: type_declaration .

    $default  reduce using rule 143 (matched_statement)


State 351

  142 matched_statement: compound_statement .

    $default  reduce using rule 142 (matched_statement)


State 352

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | LEFT_CURLY_BRACE statements . RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 statements: statements . statement
  140 statement: . matched_statement
  141          | . unmatched_statement
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    RIGHT_CURLY_BRACE           shift, and go to state 469
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    statement                     go to state 470
    matched_statement             go to state 354
    unmatched_statement           go to state 355
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 353

  139 statements: statement .

    $default  reduce using rule 139 (statements)


State 354

  140 statement: matched_statement .

    $default  reduce using rule 140 (statement)


State 355

  141 statement: unmatched_statement .

    $default  reduce using rule 141 (statement)


State 356

  145 matched_statement: matched_if_statement .

    $default  reduce using rule 145 (matched_statement)


State 357

  156 unmatched_statement: unmatched_if_statement .

    $default  reduce using rule 156 (unmatched_statement)


State 358

  146 matched_statement: switch_statement .

    $default  reduce using rule 146 (matched_statement)


State 359

  147 matched_statement: matched_while_statement .

    $default  reduce using rule 147 (matched_statement)


State 360

  157 unmatched_statement: unmatched_while_statement .

    $default  reduce using rule 157 (unmatched_statement)


State 361

  148 matched_statement: matched_do_statement .

    $default  reduce using rule 148 (matched_statement)


State 362

  158 unmatched_statement: unmatched_do_statement .

    $default  reduce using rule 158 (unmatched_statement)


State 363

  149 matched_statement: matched_for_statement .

    $default  reduce using rule 149 (matched_statement)


State 364

  159 unmatched_statement: unmatched_for_statement .

    $default  reduce using rule 159 (unmatched_statement)


State 365

  150 matched_statement: break_statement .

    $default  reduce using rule 150 (matched_statement)


State 366

  151 matched_statement: continue_statement .

    $default  reduce using rule 151 (matched_statement)


State 367

  152 matched_statement: return_statement .

    $default  reduce using rule 152 (matched_statement)


State 368

  154 matched_statement: comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 471


State 369

  289 matched_primary_expression: simple_type . LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  298 unmatched_primary_expression: simple_type .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, LEFT_PARENTHESIS, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  315 array_type: simple_type . LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | simple_type . LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | simple_type .  [IDENT]

    LEFT_SQUARE_BRACKET  shift, and go to state 472

    IDENT     reduce using rule 318 (array_type)
    $default  reduce using rule 298 (unmatched_primary_expression)


State 370

  104 function_declaration: type simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 104 (function_declaration)


State 371

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  128 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 473
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 372

  116 function_declaration: type simple_name parameter_list annotation_block compound_statement .

    $default  reduce using rule 116 (function_declaration)


State 373

  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | type annotation_block simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 474


State 374

  101 function_declaration: type annotation_block simple_name parameter_list SEMICOLON .

    $default  reduce using rule 101 (function_declaration)


State 375

   96 function_declaration: type annotation_block simple_name parameter_list UNIFORM . annotation_block SEMICOLON
   99                     | type annotation_block simple_name parameter_list UNIFORM . SEMICOLON
  108                     | type annotation_block simple_name parameter_list UNIFORM . annotation_block compound_statement
  111                     | type annotation_block simple_name parameter_list UNIFORM . compound_statement
  120                     | type annotation_block simple_name parameter_list UNIFORM . annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name parameter_list UNIFORM . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 475
    ASSIGN_OP               shift, and go to state 476
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 244

    compound_statement  go to state 477
    annotation_block    go to state 478


State 376

   97 function_declaration: type annotation_block simple_name parameter_list VARYING . annotation_block SEMICOLON
  100                     | type annotation_block simple_name parameter_list VARYING . SEMICOLON
  109                     | type annotation_block simple_name parameter_list VARYING . annotation_block compound_statement
  112                     | type annotation_block simple_name parameter_list VARYING . compound_statement
  121                     | type annotation_block simple_name parameter_list VARYING . annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block simple_name parameter_list VARYING . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 479
    ASSIGN_OP               shift, and go to state 480
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 244

    compound_statement  go to state 481
    annotation_block    go to state 482


State 377

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  125 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 483
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 378

  113 function_declaration: type annotation_block simple_name parameter_list compound_statement .

    $default  reduce using rule 113 (function_declaration)


State 379

   98 function_declaration: type annotation_block simple_name parameter_list annotation_block . SEMICOLON
  110                     | type annotation_block simple_name parameter_list annotation_block . compound_statement
  122                     | type annotation_block simple_name parameter_list annotation_block . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 484
    ASSIGN_OP         shift, and go to state 485
    LEFT_CURLY_BRACE  shift, and go to state 244

    compound_statement  go to state 486


State 380

   14 variable_declarations: variable_declarations . variable_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
  301 let_expression: LET LEFT_CURLY_BRACE variable_declarations . RIGHT_CURLY_BRACE IN unary_expression
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 487
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    variable_declaration  go to state 488
    type                  go to state 251
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 381

   15 variable_declarations: variable_declaration .

    $default  reduce using rule 15 (variable_declarations)


State 382

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  300               | LET variable_declaration IN . unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    unary_expression              go to state 489
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 383

   49 variable_declarator: simple_name . argument_list annotation_block
   50                    | simple_name . argument_list
   51                    | simple_name . ASSIGN_OP assignment_expression annotation_block
   52                    | simple_name . ASSIGN_OP assignment_expression
   53                    | simple_name . annotation_block
   54                    | simple_name .  [SEMICOLON, COMMA]
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END
  216 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    ASSIGN_OP               shift, and go to state 490
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_PARENTHESIS        shift, and go to state 212

    $default  reduce using rule 54 (variable_declarator)

    annotation_block  go to state 491
    argument_list     go to state 492


State 384

   46 variable_declaration: type variable_declarators . SEMICOLON
   47 variable_declarators: variable_declarators . COMMA variable_declarator

    SEMICOLON  shift, and go to state 493
    COMMA      shift, and go to state 494


State 385

   48 variable_declarators: variable_declarator .

    $default  reduce using rule 48 (variable_declarators)


State 386

  299 cast_expression: CAST LEFT_ANGLE_BRACKET type . RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

    RIGHT_ANGLE_BRACKET  shift, and go to state 495


State 387

  292 matched_primary_expression: LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS .

    $default  reduce using rule 292 (matched_primary_expression)


State 388

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  226 comma_expression: . assignment_expression COMMA comma_expression
  226                 | assignment_expression COMMA . comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 496
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 389

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | logical_or_expression ASSIGN_OP . assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 497
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 390

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | logical_or_expression BITWISE_OR_ASSIGN_OP . assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 498
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 391

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | logical_or_expression BITWISE_AND_ASSIGN_OP . assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 499
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 392

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | logical_or_expression BITWISE_XOR_ASSIGN_OP . assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 500
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 393

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | logical_or_expression SHIFT_LEFT_ASSIGN_OP . assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 501
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 394

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | logical_or_expression SHIFT_RIGHT_ASSIGN_OP . assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 502
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 395

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP . assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 503
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 396

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | logical_or_expression MULTIPLY_ASSIGN_OP . assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 504
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 397

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | logical_or_expression DIVIDE_ASSIGN_OP . assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 505
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 398

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | logical_or_expression MODULO_ASSIGN_OP . assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 506
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 399

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | logical_or_expression PLUS_ASSIGN_OP . assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 507
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 400

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | logical_or_expression MINUS_ASSIGN_OP . assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 508
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 401

  315 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 509


State 402

  241 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression . COLON assignment_expression

    COLON  shift, and go to state 510


State 403

  243 logical_or_expression: logical_and_expression LOGICAL_OR_OP logical_or_expression .

    $default  reduce using rule 243 (logical_or_expression)


State 404

  245 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP logical_and_expression .

    $default  reduce using rule 245 (logical_and_expression)


State 405

  247 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP inclusive_or_expression .

    $default  reduce using rule 247 (inclusive_or_expression)


State 406

  249 exclusive_or_expression: and_expression BITWISE_XOR_OP exclusive_or_expression .

    $default  reduce using rule 249 (exclusive_or_expression)


State 407

  251 and_expression: equality_expression BITWISE_AND_OP and_expression .

    $default  reduce using rule 251 (and_expression)


State 408

  253 equality_expression: relational_expression EQUAL_OP equality_expression .

    $default  reduce using rule 253 (equality_expression)


State 409

  254 equality_expression: relational_expression NOT_EQUAL_OP equality_expression .

    $default  reduce using rule 254 (equality_expression)


State 410

  257 relational_expression: shift_expression LESS_OR_EQUAL_OP relational_expression .

    $default  reduce using rule 257 (relational_expression)


State 411

  258 relational_expression: shift_expression GREATER_OR_EQUAL_OP relational_expression .

    $default  reduce using rule 258 (relational_expression)


State 412

  256 relational_expression: shift_expression LEFT_ANGLE_BRACKET relational_expression .

    $default  reduce using rule 256 (relational_expression)


State 413

  259 relational_expression: shift_expression RIGHT_ANGLE_BRACKET relational_expression .

    $default  reduce using rule 259 (relational_expression)


State 414

  261 shift_expression: additive_expression SHIFT_LEFT_OP shift_expression .

    $default  reduce using rule 261 (shift_expression)


State 415

  262 shift_expression: additive_expression SHIFT_RIGHT_OP shift_expression .

    $default  reduce using rule 262 (shift_expression)


State 416

  263 shift_expression: additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression .

    $default  reduce using rule 263 (shift_expression)


State 417

  265 additive_expression: multiplicative_expression POSITIVE_OP additive_expression .

    $default  reduce using rule 265 (additive_expression)


State 418

  266 additive_expression: multiplicative_expression NEGATIVE_OP additive_expression .

    $default  reduce using rule 266 (additive_expression)


State 419

  269 multiplicative_expression: unary_expression DIVIDE_OP multiplicative_expression .

    $default  reduce using rule 269 (multiplicative_expression)


State 420

  270 multiplicative_expression: unary_expression MODULO_OP multiplicative_expression .

    $default  reduce using rule 270 (multiplicative_expression)


State 421

  268 multiplicative_expression: unary_expression STAR multiplicative_expression .

    $default  reduce using rule 268 (multiplicative_expression)


State 422

  284 matched_postfix_expression: matched_postfix_expression DOT simple_name .

    $default  reduce using rule 284 (matched_postfix_expression)


State 423

  286 matched_postfix_expression: matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 511


State 424

  295 unmatched_postfix_expression: unmatched_postfix_expression DOT simple_name .

    $default  reduce using rule 295 (unmatched_postfix_expression)


State 425

  290 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 290 (matched_primary_expression)


State 426

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET conditional_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 512


State 427

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  224 named_argument: simple_name COLON . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 513
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 428

   43 simple_name: . IDENT
  220 named_arguments: named_arguments COMMA . named_argument
  224 named_argument: . simple_name COLON assignment_expression

    IDENT  shift, and go to state 71

    simple_name     go to state 514
    named_argument  go to state 515


State 429

  217 argument_list: LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 217 (argument_list)


State 430

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  216 argument_list: LEFT_PARENTHESIS positional_arguments COMMA . named_arguments RIGHT_PARENTHESIS
  220 named_arguments: . named_arguments COMMA named_argument
  221                | . named_argument
  222 positional_arguments: positional_arguments COMMA . positional_argument
  224 named_argument: . simple_name COLON assignment_expression
  225 positional_argument: . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 298
    named_arguments               go to state 516
    named_argument                go to state 301
    positional_argument           go to state 517
    assignment_expression         go to state 303
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 431

  218 argument_list: LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 218 (argument_list)


State 432

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON .

    $default  reduce using rule 17 (import_declaration)


State 433

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 518


State 434

  204 parameters: parameters COMMA parameter .

    $default  reduce using rule 204 (parameters)


State 435

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  206 parameter: type simple_name ASSIGN_OP . assignment_expression annotation_block
  207          | type simple_name ASSIGN_OP . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 519
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 436

  208 parameter: type simple_name annotation_block .

    $default  reduce using rule 208 (parameter)


State 437

   70 constant_declarator: simple_name ASSIGN_OP conditional_expression annotation_block .

    $default  reduce using rule 70 (constant_declarator)


State 438

   77 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 77 (struct_type_declaration)


State 439

   85 struct_field_declarator: type simple_name SEMICOLON .

    $default  reduce using rule 85 (struct_field_declarator)


State 440

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   82 struct_field_declarator: type simple_name ASSIGN_OP . comma_expression annotation_block SEMICOLON
   83                        | type simple_name ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 520
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 441

   84 struct_field_declarator: type simple_name annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 521


State 442

   78 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 78 (struct_type_declaration)


State 443

   76 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 522


State 444

   92 enum_value_declarator: simple_name ASSIGN_OP assignment_expression . annotation_block
   93                      | simple_name ASSIGN_OP assignment_expression .  [COMMA, RIGHT_CURLY_BRACE]
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 93 (enum_value_declarator)

    annotation_block  go to state 523


State 445

   90 enum_value_declarators: enum_value_declarators COMMA enum_value_declarator .

    $default  reduce using rule 90 (enum_value_declarators)


State 446

   87 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 87 (enum_type_declaration)


State 447

   88 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 88 (enum_type_declaration)


State 448

   86 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 524


State 449

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  135 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 525
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 450

  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block . ASSIGN_OP comma_expression SEMICOLON

    ASSIGN_OP  shift, and go to state 526


State 451

  129 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 527


State 452

  102 function_declaration: type simple_name parameter_list UNIFORM annotation_block SEMICOLON .

    $default  reduce using rule 102 (function_declaration)


State 453

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  126 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 528
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 454

  114 function_declaration: type simple_name parameter_list UNIFORM annotation_block compound_statement .

    $default  reduce using rule 114 (function_declaration)


State 455

  130 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 529


State 456

  103 function_declaration: type simple_name parameter_list VARYING annotation_block SEMICOLON .

    $default  reduce using rule 103 (function_declaration)


State 457

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  127 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 530
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 458

  115 function_declaration: type simple_name parameter_list VARYING annotation_block compound_statement .

    $default  reduce using rule 115 (function_declaration)


State 459

  131 function_declaration: type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 131 (function_declaration)


State 460

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  160 matched_if_statement: IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS statement
  162                       | IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 531
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 461

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  163 switch_statement: SWITCH LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | SWITCH LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 532
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 462

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  171 matched_while_statement: WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 533
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 463

  173 matched_do_statement: DO matched_statement . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 534


State 464

  174 unmatched_do_statement: DO unmatched_statement . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 535


State 465

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
  175 matched_for_statement: FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 536
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 537
    comma_expression              go to state 538
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 466

  199 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 199 (break_statement)


State 467

  200 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 200 (continue_statement)


State 468

  201 return_statement: RETURN comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 539


State 469

  136 compound_statement: LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE .

    $default  reduce using rule 136 (compound_statement)


State 470

  138 statements: statements statement .

    $default  reduce using rule 138 (statements)


State 471

  154 matched_statement: comma_expression SEMICOLON .

    $default  reduce using rule 154 (matched_statement)


State 472

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  289                           | simple_type LEFT_SQUARE_BRACKET . conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  315 array_type: simple_type LEFT_SQUARE_BRACKET . LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | simple_type LEFT_SQUARE_BRACKET . conditional_expression RIGHT_SQUARE_BRACKET
  317           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_SQUARE_BRACKET        shift, and go to state 540
    LEFT_ANGLE_BRACKET          shift, and go to state 175
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    conditional_expression        go to state 541
    logical_or_expression         go to state 179
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 473

  128 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 542


State 474

  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . annotation_block ASSIGN_OP comma_expression SEMICOLON
  133                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . ASSIGN_OP comma_expression SEMICOLON
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 543
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 544


State 475

   99 function_declaration: type annotation_block simple_name parameter_list UNIFORM SEMICOLON .

    $default  reduce using rule 99 (function_declaration)


State 476

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  123 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 545
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 477

  111 function_declaration: type annotation_block simple_name parameter_list UNIFORM compound_statement .

    $default  reduce using rule 111 (function_declaration)


State 478

   96 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block . SEMICOLON
  108                     | type annotation_block simple_name parameter_list UNIFORM annotation_block . compound_statement
  120                     | type annotation_block simple_name parameter_list UNIFORM annotation_block . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 546
    ASSIGN_OP         shift, and go to state 547
    LEFT_CURLY_BRACE  shift, and go to state 244

    compound_statement  go to state 548


State 479

  100 function_declaration: type annotation_block simple_name parameter_list VARYING SEMICOLON .

    $default  reduce using rule 100 (function_declaration)


State 480

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  124 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 549
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 481

  112 function_declaration: type annotation_block simple_name parameter_list VARYING compound_statement .

    $default  reduce using rule 112 (function_declaration)


State 482

   97 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block . SEMICOLON
  109                     | type annotation_block simple_name parameter_list VARYING annotation_block . compound_statement
  121                     | type annotation_block simple_name parameter_list VARYING annotation_block . ASSIGN_OP comma_expression SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 550
    ASSIGN_OP         shift, and go to state 551
    LEFT_CURLY_BRACE  shift, and go to state 244

    compound_statement  go to state 552


State 483

  125 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 553


State 484

   98 function_declaration: type annotation_block simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 98 (function_declaration)


State 485

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  122 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 554
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 486

  110 function_declaration: type annotation_block simple_name parameter_list annotation_block compound_statement .

    $default  reduce using rule 110 (function_declaration)


State 487

  301 let_expression: LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE . IN unary_expression

    IN  shift, and go to state 555


State 488

   14 variable_declarations: variable_declarations variable_declaration .

    $default  reduce using rule 14 (variable_declarations)


State 489

  300 let_expression: LET variable_declaration IN unary_expression .

    $default  reduce using rule 300 (let_expression)


State 490

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   51 variable_declarator: simple_name ASSIGN_OP . assignment_expression annotation_block
   52                    | simple_name ASSIGN_OP . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 556
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 491

   53 variable_declarator: simple_name annotation_block .

    $default  reduce using rule 53 (variable_declarator)


State 492

   49 variable_declarator: simple_name argument_list . annotation_block
   50                    | simple_name argument_list .  [SEMICOLON, COMMA]
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 50 (variable_declarator)

    annotation_block  go to state 557


State 493

   46 variable_declaration: type variable_declarators SEMICOLON .

    $default  reduce using rule 46 (variable_declaration)


State 494

   43 simple_name: . IDENT
   47 variable_declarators: variable_declarators COMMA . variable_declarator
   49 variable_declarator: . simple_name argument_list annotation_block
   50                    | . simple_name argument_list
   51                    | . simple_name ASSIGN_OP assignment_expression annotation_block
   52                    | . simple_name ASSIGN_OP assignment_expression
   53                    | . simple_name annotation_block
   54                    | . simple_name

    IDENT  shift, and go to state 71

    simple_name          go to state 383
    variable_declarator  go to state 558


State 495

  299 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET . LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 559


State 496

  226 comma_expression: assignment_expression COMMA comma_expression .

    $default  reduce using rule 226 (comma_expression)


State 497

  228 assignment_expression: logical_or_expression ASSIGN_OP assignment_expression .

    $default  reduce using rule 228 (assignment_expression)


State 498

  229 assignment_expression: logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 229 (assignment_expression)


State 499

  230 assignment_expression: logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression .

    $default  reduce using rule 230 (assignment_expression)


State 500

  231 assignment_expression: logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 231 (assignment_expression)


State 501

  232 assignment_expression: logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 232 (assignment_expression)


State 502

  233 assignment_expression: logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 233 (assignment_expression)


State 503

  234 assignment_expression: logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 234 (assignment_expression)


State 504

  235 assignment_expression: logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression .

    $default  reduce using rule 235 (assignment_expression)


State 505

  236 assignment_expression: logical_or_expression DIVIDE_ASSIGN_OP assignment_expression .

    $default  reduce using rule 236 (assignment_expression)


State 506

  237 assignment_expression: logical_or_expression MODULO_ASSIGN_OP assignment_expression .

    $default  reduce using rule 237 (assignment_expression)


State 507

  238 assignment_expression: logical_or_expression PLUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 238 (assignment_expression)


State 508

  239 assignment_expression: logical_or_expression MINUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 239 (assignment_expression)


State 509

  315 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 315 (array_type)


State 510

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | logical_or_expression CONDITIONAL_OP comma_expression COLON . assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    assignment_expression         go to state 560
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 511

  286 matched_postfix_expression: matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 286 (matched_postfix_expression)


State 512

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 289 (matched_primary_expression)


State 513

  224 named_argument: simple_name COLON assignment_expression .

    $default  reduce using rule 224 (named_argument)


State 514

  224 named_argument: simple_name . COLON assignment_expression

    COLON  shift, and go to state 427


State 515

  220 named_arguments: named_arguments COMMA named_argument .

    $default  reduce using rule 220 (named_arguments)


State 516

  216 argument_list: LEFT_PARENTHESIS positional_arguments COMMA named_arguments . RIGHT_PARENTHESIS
  220 named_arguments: named_arguments . COMMA named_argument

    COMMA              shift, and go to state 428
    RIGHT_PARENTHESIS  shift, and go to state 561


State 517

  222 positional_arguments: positional_arguments COMMA positional_argument .

    $default  reduce using rule 222 (positional_arguments)


State 518

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name .

    $default  reduce using rule 34 (unqualified_import_simple_names)


State 519

  206 parameter: type simple_name ASSIGN_OP assignment_expression . annotation_block
  207          | type simple_name ASSIGN_OP assignment_expression .  [COMMA, RIGHT_PARENTHESIS]
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 207 (parameter)

    annotation_block  go to state 562


State 520

   82 struct_field_declarator: type simple_name ASSIGN_OP comma_expression . annotation_block SEMICOLON
   83                        | type simple_name ASSIGN_OP comma_expression . SEMICOLON
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 563
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 564


State 521

   84 struct_field_declarator: type simple_name annotation_block SEMICOLON .

    $default  reduce using rule 84 (struct_field_declarator)


State 522

   76 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 76 (struct_type_declaration)


State 523

   92 enum_value_declarator: simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 92 (enum_value_declarator)


State 524

   86 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 86 (enum_type_declaration)


State 525

  135 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 565


State 526

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 566
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 527

  129 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 129 (function_declaration)


State 528

  126 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 567


State 529

  130 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 130 (function_declaration)


State 530

  127 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 568


State 531

  160 matched_if_statement: IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS statement
  162                       | IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 569


State 532

  163 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | SWITCH LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 570


State 533

  171 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 571


State 534

  173 matched_do_statement: DO matched_statement WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 572


State 535

  174 unmatched_do_statement: DO unmatched_statement WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 573


State 536

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  183 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON RIGHT_PARENTHESIS matched_statement
  195 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 574
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 575
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 537

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  175 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 576
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 577
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 538

  179 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  191 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 578


State 539

  201 return_statement: RETURN comma_expression SEMICOLON .

    $default  reduce using rule 201 (return_statement)


State 540

  290 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, LEFT_PARENTHESIS, LEFT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  317 array_type: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .  [IDENT]

    IDENT     reduce using rule 317 (array_type)
    $default  reduce using rule 290 (matched_primary_expression)


State 541

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET conditional_expression . RIGHT_SQUARE_BRACKET
  316 array_type: simple_type LEFT_SQUARE_BRACKET conditional_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 579


State 542

  128 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 128 (function_declaration)


State 543

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  133 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 580
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 544

  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block . ASSIGN_OP comma_expression SEMICOLON

    ASSIGN_OP  shift, and go to state 581


State 545

  123 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 582


State 546

   96 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON .

    $default  reduce using rule 96 (function_declaration)


State 547

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  120 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 583
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 548

  108 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement .

    $default  reduce using rule 108 (function_declaration)


State 549

  124 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 584


State 550

   97 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON .

    $default  reduce using rule 97 (function_declaration)


State 551

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  121 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 585
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 552

  109 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block compound_statement .

    $default  reduce using rule 109 (function_declaration)


State 553

  125 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 125 (function_declaration)


State 554

  122 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 586


State 555

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301               | LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN . unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    unary_expression              go to state 587
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 556

   51 variable_declarator: simple_name ASSIGN_OP assignment_expression . annotation_block
   52                    | simple_name ASSIGN_OP assignment_expression .  [SEMICOLON, COMMA]
  210 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 52 (variable_declarator)

    annotation_block  go to state 588


State 557

   49 variable_declarator: simple_name argument_list annotation_block .

    $default  reduce using rule 49 (variable_declarator)


State 558

   47 variable_declarators: variable_declarators COMMA variable_declarator .

    $default  reduce using rule 47 (variable_declarators)


State 559

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299                | CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS . unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    unary_expression              go to state 589
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 560

  241 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression .

    $default  reduce using rule 241 (conditional_expression)


State 561

  216 argument_list: LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 216 (argument_list)


State 562

  206 parameter: type simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 206 (parameter)


State 563

   83 struct_field_declarator: type simple_name ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 83 (struct_field_declarator)


State 564

   82 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 590


State 565

  135 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 135 (function_declaration)


State 566

  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 591


State 567

  126 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 126 (function_declaration)


State 568

  127 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 127 (function_declaration)


State 569

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  140 statement: . matched_statement
  141          | . unmatched_statement
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160                     | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    statement                     go to state 592
    matched_statement             go to state 593
    unmatched_statement           go to state 355
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 570

  163 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 594


State 571

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171                        | WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172                          | WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 595
    unmatched_statement           go to state 596
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 572

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  173 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 597
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 573

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  174 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 598
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 574

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  185 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . RIGHT_PARENTHESIS matched_statement
  197 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 599
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 600
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 575

  183 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  195 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 601


State 576

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  177 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . RIGHT_PARENTHESIS matched_statement
  189 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 602
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 603
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 577

  175 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 604


State 578

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  179 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON RIGHT_PARENTHESIS matched_statement
  191 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 605
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 606
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 579

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, LEFT_PARENTHESIS, LEFT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  316 array_type: simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET .  [IDENT]

    IDENT     reduce using rule 316 (array_type)
    $default  reduce using rule 289 (matched_primary_expression)


State 580

  133 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 607


State 581

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 608
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 582

  123 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 123 (function_declaration)


State 583

  120 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 609


State 584

  124 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 124 (function_declaration)


State 585

  121 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 610


State 586

  122 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 122 (function_declaration)


State 587

  301 let_expression: LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression .

    $default  reduce using rule 301 (let_expression)


State 588

   51 variable_declarator: simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 51 (variable_declarator)


State 589

  299 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 611


State 590

   82 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON .

    $default  reduce using rule 82 (struct_field_declarator)


State 591

  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 134 (function_declaration)


State 592

  161 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement .

    $default  reduce using rule 161 (unmatched_if_statement)


State 593

  140 statement: matched_statement .  [STRING_LITERAL, SEMICOLON, UNIFORM, VARYING, BOOL, BOOL2, BOOL3, BOOL4, INT, INT2, INT3, INT4, FLOAT, FLOAT2, FLOAT3, FLOAT4, FLOAT2X2, FLOAT2X3, FLOAT2X4, FLOAT3X2, FLOAT3X3, FLOAT3X4, FLOAT4X2, FLOAT4X3, FLOAT4X4, DOUBLE, DOUBLE2, DOUBLE3, DOUBLE4, DOUBLE2X2, DOUBLE2X3, DOUBLE2X4, DOUBLE3X2, DOUBLE3X3, DOUBLE3X4, DOUBLE4X2, DOUBLE4X3, DOUBLE4X4, COLOR, STRING, SDF, EDF, VDF, LIGHT_PROFILE, MATERIAL, MATERIAL_EMISSION, MATERIAL_GEOMETRY, MATERIAL_SURFACE, MATERIAL_VOLUME, TEXTURE_2D, TEXTURE_3D, TEXTURE_CUBE, TEXTURE_PTEX, BSDF_MEASUREMENT, INTENSITY_MODE, INTENSITY_RADIANT_EXITANCE, INTENSITY_POWER, HAIR_BSDF, TRUE, FALSE, LET, CONST, TYPEDEF, STRUCT, ENUM, IF, SWITCH, CASE, DEFAULT, WHILE, DO, FOR, BREAK, CONTINUE, RETURN, CAST, BITWISE_COMPLEMENT_OP, LOGICAL_NOT_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, SCOPE, LEFT_PARENTHESIS, LEFT_CURLY_BRACE, RIGHT_CURLY_BRACE, IDENT, INTEGER_LITERAL, FLOATING_LITERAL]
  160 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement . ELSE matched_statement
  162 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement . ELSE unmatched_statement

    ELSE  shift, and go to state 612

    $default  reduce using rule 140 (statement)


State 594

  163 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . switch_cases RIGHT_CURLY_BRACE
  164                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
  165 switch_cases: . switch_cases switch_case
  166             | . switch_case
  167 switch_case: . CASE comma_expression COLON statement
  168            | . CASE comma_expression COLON
  169            | . DEFAULT COLON statement
  170            | . DEFAULT COLON

    CASE               shift, and go to state 613
    DEFAULT            shift, and go to state 614
    RIGHT_CURLY_BRACE  shift, and go to state 615

    switch_cases  go to state 616
    switch_case   go to state 617


State 595

  171 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 171 (matched_while_statement)


State 596

  172 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 172 (unmatched_while_statement)


State 597

  173 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 618


State 598

  174 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 619


State 599

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS . matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 620
    unmatched_statement           go to state 621
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 600

  185 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  197 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 622


State 601

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  183 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  195 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 623
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 624
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 602

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS . matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 625
    unmatched_statement           go to state 626
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 603

  177 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  189 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 627


State 604

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  175 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 628
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 629
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 605

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  181 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . RIGHT_PARENTHESIS matched_statement
  193 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 630
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 631
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 606

  179 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  191 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 632


State 607

  133 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 133 (function_declaration)


State 608

  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 633


State 609

  120 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 120 (function_declaration)


State 610

  121 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 121 (function_declaration)


State 611

  299 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS .

    $default  reduce using rule 299 (cast_expression)


State 612

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160                     | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE . matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE . unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 634
    unmatched_statement           go to state 635
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 613

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  167 switch_case: CASE . comma_expression COLON statement
  168            | CASE . comma_expression COLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 636
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 614

  169 switch_case: DEFAULT . COLON statement
  170            | DEFAULT . COLON

    COLON  shift, and go to state 637


State 615

  164 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 164 (switch_statement)


State 616

  163 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases . RIGHT_CURLY_BRACE
  165 switch_cases: switch_cases . switch_case
  167 switch_case: . CASE comma_expression COLON statement
  168            | . CASE comma_expression COLON
  169            | . DEFAULT COLON statement
  170            | . DEFAULT COLON

    CASE               shift, and go to state 613
    DEFAULT            shift, and go to state 614
    RIGHT_CURLY_BRACE  shift, and go to state 638

    switch_case  go to state 639


State 617

  166 switch_cases: switch_case .

    $default  reduce using rule 166 (switch_cases)


State 618

  173 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 640


State 619

  174 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 641


State 620

  186 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 186 (matched_for_statement)


State 621

  198 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 198 (unmatched_for_statement)


State 622

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 642
    unmatched_statement           go to state 643
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 623

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 644
    unmatched_statement           go to state 645
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 624

  183 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  195 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 646


State 625

  178 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 178 (matched_for_statement)


State 626

  190 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 190 (unmatched_for_statement)


State 627

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 647
    unmatched_statement           go to state 648
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 628

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 649
    unmatched_statement           go to state 650
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 629

  175 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 651


State 630

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS . matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 652
    unmatched_statement           go to state 653
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 631

  181 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  193 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 654


State 632

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  179 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  191 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 655
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    comma_expression              go to state 656
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    simple_type                   go to state 202
    relative_type                 go to state 89


State 633

  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 132 (function_declaration)


State 634

  160 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement .

    $default  reduce using rule 160 (matched_if_statement)


State 635

  162 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement .

    $default  reduce using rule 162 (unmatched_if_statement)


State 636

  167 switch_case: CASE comma_expression . COLON statement
  168            | CASE comma_expression . COLON

    COLON  shift, and go to state 657


State 637

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  140 statement: . matched_statement
  141          | . unmatched_statement
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  169 switch_case: DEFAULT COLON . statement
  170            | DEFAULT COLON .  [CASE, DEFAULT, RIGHT_CURLY_BRACE]
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    $default  reduce using rule 170 (switch_case)

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    statement                     go to state 658
    matched_statement             go to state 354
    unmatched_statement           go to state 355
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 638

  163 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE .

    $default  reduce using rule 163 (switch_statement)


State 639

  165 switch_cases: switch_cases switch_case .

    $default  reduce using rule 165 (switch_cases)


State 640

  173 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON .

    $default  reduce using rule 173 (matched_do_statement)


State 641

  174 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON .

    $default  reduce using rule 174 (unmatched_do_statement)


State 642

  185 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 185 (matched_for_statement)


State 643

  197 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 197 (unmatched_for_statement)


State 644

  184 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 184 (matched_for_statement)


State 645

  196 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 196 (unmatched_for_statement)


State 646

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 659
    unmatched_statement           go to state 660
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 647

  177 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 177 (matched_for_statement)


State 648

  189 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 189 (unmatched_for_statement)


State 649

  176 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 176 (matched_for_statement)


State 650

  188 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 188 (unmatched_for_statement)


State 651

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 661
    unmatched_statement           go to state 662
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 652

  182 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 182 (matched_for_statement)


State 653

  194 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 194 (unmatched_for_statement)


State 654

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 663
    unmatched_statement           go to state 664
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 655

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 665
    unmatched_statement           go to state 666
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 656

  179 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  191 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 667


State 657

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  140 statement: . matched_statement
  141          | . unmatched_statement
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 switch_case: CASE comma_expression COLON . statement
  168            | CASE comma_expression COLON .  [CASE, DEFAULT, RIGHT_CURLY_BRACE]
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    $default  reduce using rule 168 (switch_case)

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    statement                     go to state 668
    matched_statement             go to state 354
    unmatched_statement           go to state 355
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 658

  169 switch_case: DEFAULT COLON statement .

    $default  reduce using rule 169 (switch_case)


State 659

  183 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 183 (matched_for_statement)


State 660

  195 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 195 (unmatched_for_statement)


State 661

  175 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 175 (matched_for_statement)


State 662

  187 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 187 (unmatched_for_statement)


State 663

  181 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 181 (matched_for_statement)


State 664

  193 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 193 (unmatched_for_statement)


State 665

  180 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 180 (matched_for_statement)


State 666

  192 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 192 (unmatched_for_statement)


State 667

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   65 constant_declaration: . CONST type constant_declarators SEMICOLON
   72 type_declaration: . alias_type_declaration
   73                 | . struct_type_declaration
   74                 | . enum_type_declaration
   75 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   76 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   79                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   86 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   89                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  136 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  137                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  142 matched_statement: . compound_statement
  143                  | . type_declaration
  144                  | . constant_declaration
  145                  | . matched_if_statement
  146                  | . switch_statement
  147                  | . matched_while_statement
  148                  | . matched_do_statement
  149                  | . matched_for_statement
  150                  | . break_statement
  151                  | . continue_statement
  152                  | . return_statement
  153                  | . variable_declaration
  154                  | . comma_expression SEMICOLON
  155                  | . SEMICOLON
  156 unmatched_statement: . unmatched_if_statement
  157                    | . unmatched_while_statement
  158                    | . unmatched_do_statement
  159                    | . unmatched_for_statement
  160 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  161 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  162                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  163 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  164                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  171 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  172 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  173 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  175 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  186                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  198                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  199 break_statement: . BREAK SEMICOLON
  200 continue_statement: . CONTINUE SEMICOLON
  201 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  250                        | . and_expression
  251 and_expression: . equality_expression BITWISE_AND_OP and_expression
  252               | . equality_expression
  253 equality_expression: . relational_expression EQUAL_OP equality_expression
  254                    | . relational_expression NOT_EQUAL_OP equality_expression
  255                    | . relational_expression
  256 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  257                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  258                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  259                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  260                      | . shift_expression
  261 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  262                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  263                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  264                 | . additive_expression
  265 additive_expression: . multiplicative_expression POSITIVE_OP additive_expression
  266                    | . multiplicative_expression NEGATIVE_OP additive_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . unary_expression STAR multiplicative_expression
  269                          | . unary_expression DIVIDE_OP multiplicative_expression
  270                          | . unary_expression MODULO_OP multiplicative_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 338
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 339
    SWITCH                      shift, and go to state 340
    WHILE                       shift, and go to state 341
    DO                          shift, and go to state 342
    FOR                         shift, and go to state 343
    BREAK                       shift, and go to state 344
    CONTINUE                    shift, and go to state 345
    RETURN                      shift, and go to state 346
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 244
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    qualified_name_infix          go to state 75
    simple_name                   go to state 76
    variable_declaration          go to state 348
    constant_declaration          go to state 349
    type_declaration              go to state 350
    alias_type_declaration        go to state 82
    struct_type_declaration       go to state 83
    enum_type_declaration         go to state 84
    compound_statement            go to state 351
    matched_statement             go to state 669
    unmatched_statement           go to state 670
    matched_if_statement          go to state 356
    unmatched_if_statement        go to state 357
    switch_statement              go to state 358
    matched_while_statement       go to state 359
    unmatched_while_statement     go to state 360
    matched_do_statement          go to state 361
    unmatched_do_statement        go to state 362
    matched_for_statement         go to state 363
    unmatched_for_statement       go to state 364
    break_statement               go to state 365
    continue_statement            go to state 366
    return_statement              go to state 367
    comma_expression              go to state 368
    assignment_expression         go to state 260
    conditional_expression        go to state 261
    logical_or_expression         go to state 262
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 190
    matched_postfix_expression    go to state 191
    matched_primary_expression    go to state 192
    unmatched_postfix_expression  go to state 193
    unmatched_primary_expression  go to state 194
    cast_expression               go to state 195
    let_expression                go to state 196
    literal_expression            go to state 197
    boolean_literal               go to state 198
    integer_literal               go to state 199
    floating_literal              go to state 200
    string_literal                go to state 201
    type                          go to state 251
    array_type                    go to state 87
    simple_type                   go to state 369
    relative_type                 go to state 89


State 668

  167 switch_case: CASE comma_expression COLON statement .

    $default  reduce using rule 167 (switch_case)


State 669

  179 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 179 (matched_for_statement)


State 670

  191 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 191 (unmatched_for_statement)
