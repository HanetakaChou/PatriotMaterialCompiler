Terminals unused in grammar

   INTEGER_LITERAL


Grammar

    0 $accept: mdl $end

    1 mdl: mdl_version import_declarations_opt module_declaration_opt

    2 mdl_version: MDL FLOATING_LITERAL SEMICOLON

    3 import_declarations_opt: import_declarations
    4                        | %empty

    5 module_declaration_opt: module_declaration
    6                       | %empty

    7 import_declarations: import_declarations import_declaration
    8                    | import_declaration

    9 import_declaration: IMPORT qualified_imports SEMICOLON
   10                   | EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON

   11 qualified_imports: qualified_imports COMMA qualified_import
   12                  | qualified_import

   13 qualified_import_prefix: qualified_import_prefix_opt qualified_name

   14 unqualified_import: unqualified_import_simple_names
   15                   | STAR

   16 qualified_import: qualified_import_prefix_opt qualified_name qualified_import_suffix_opt

   17 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name
   18                                | simple_name

   19 qualified_import_prefix_opt: qualified_import_prefix_relative_current
   20                            | qualified_import_prefix_relative_parent
   21                            | qualified_import_prefix_absolute
   22                            | %empty

   23 qualified_import_prefix_relative_current: DOT SCOPE

   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE
   25                                        | DOTDOT SCOPE

   26 qualified_import_prefix_absolute: SCOPE

   27 qualified_name: qualified_name SCOPE simple_name
   28               | simple_name

   29 qualified_import_suffix_opt: qualified_import_suffix
   30                            | %empty

   31 qualified_import_suffix: SCOPE STAR

   32 simple_name: IDENT

   33 module_declaration: MODULE annotation_block_opt SEMICOLON

   34 annotation_block_opt: annotation_block
   35                     | %empty

   36 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

   37 annotations: annotations COMMA annotation
   38            | annotation

   39 annotation: qualified_name argument_list

   40 argument_list: LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS

   41 named_arguments: named_arguments COMMA named_argument
   42                | named_argument

   43 named_argument: simple_name COLON assignment_expression

   44 comma_expression: assignment_expression COMMA comma_expression
   45                 | assignment_expression

   46 assignment_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
   47                      | logical_or_expression ASSIGN_OP assignment_expression
   48                      | logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
   49                      | logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
   50                      | logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
   51                      | logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
   52                      | logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
   53                      | logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
   54                      | logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
   55                      | logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
   56                      | logical_or_expression MODULO_ASSIGN_OP assignment_expression
   57                      | logical_or_expression PLUS_ASSIGN_OP assignment_expression
   58                      | logical_or_expression MINUS_ASSIGN_OP assignment_expression
   59                      | logical_or_expression

   60 logical_or_expression: logical_and_expression LOGICAL_OR_OP logical_or_expression
   61                      | logical_and_expression

   62 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP logical_and_expression
   63                       | inclusive_or_expression

   64 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
   65                        | exclusive_or_expression

   66 exclusive_or_expression: and_expression BITWISE_XOR_OP exclusive_or_expression
   67                        | and_expression

   68 and_expression: equality_expression BITWISE_AND_OP and_expression
   69               | equality_expression

   70 equality_expression: relational_expression EQUAL_OP equality_expression
   71                    | relational_expression NOT_EQUAL_OP equality_expression
   72                    | relational_expression

   73 relational_expression: shift_expression LESS_OP relational_expression
   74                      | shift_expression LESS_OR_EQUAL_OP relational_expression
   75                      | shift_expression GREATER_OR_EQUAL_OP relational_expression
   76                      | shift_expression GREATER_OP relational_expression
   77                      | shift_expression

   78 shift_expression: additive_expression SHIFT_LEFT_OP shift_expression
   79                 | additive_expression SHIFT_RIGHT_OP shift_expression
   80                 | additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
   81                 | additive_expression

   82 additive_expression: multiplicative_expression PLUS_OP additive_expression
   83                    | multiplicative_expression MINUS_OP additive_expression
   84                    | multiplicative_expression

   85 multiplicative_expression: unary_expression MULTIPLY_OP multiplicative_expression
   86                          | unary_expression DIVIDE_OP multiplicative_expression
   87                          | unary_expression MODULO_OP multiplicative_expression
   88                          | unary_expression

   89 unary_expression: LEFT_PARENTHESIS RIGHT_PARENTHESIS


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 2 9 10 33
COMMA (259) 11 17 37 41 44
MDL (260) 2
IMPORT (261) 9 10
USING (262) 10
MODULE (263) 33
EXPORT (264) 10
ASSIGN_OP (265) 47
BITWISE_OR_ASSIGN_OP (266) 48
BITWISE_AND_ASSIGN_OP (267) 49
BITWISE_XOR_ASSIGN_OP (268) 50
SHIFT_LEFT_ASSIGN_OP (269) 51
SHIFT_RIGHT_ASSIGN_OP (270) 52
UNSIGNED_SHIFT_RIGHT_ASSIGN_OP (271) 53
MULTIPLY_ASSIGN_OP (272) 54
DIVIDE_ASSIGN_OP (273) 55
MODULO_ASSIGN_OP (274) 56
PLUS_ASSIGN_OP (275) 57
MINUS_ASSIGN_OP (276) 58
CONDITIONAL_OP (277) 46
LOGICAL_OR_OP (278) 60
LOGICAL_AND_OP (279) 62
BITWISE_OR_OP (280) 64
BITWISE_XOR_OP (281) 66
BITWISE_AND_OP (282) 68
EQUAL_OP (283) 70
NOT_EQUAL_OP (284) 71
LESS_OP (285) 73
LESS_OR_EQUAL_OP (286) 74
GREATER_OR_EQUAL_OP (287) 75
GREATER_OP (288) 76
SHIFT_LEFT_OP (289) 78
SHIFT_RIGHT_OP (290) 79
UNSIGNED_SHIFT_RIGHT_OP (291) 80
PLUS_OP (292) 82
MINUS_OP (293) 83
MULTIPLY_OP (294) 85
DIVIDE_OP (295) 86
MODULO_OP (296) 87
DOT (297) 23
DOTDOT (298) 24 25
SCOPE (299) 23 24 25 26 27 31
STAR (300) 15 31
COLON (301) 43 46
ANNOTATION_BLOCK_BEGIN (302) 36
ANNOTATION_BLOCK_END (303) 36
LEFT_PARENTHESIS (304) 40 89
RIGHT_PARENTHESIS (305) 40 89
IDENT (306) 32
INTEGER_LITERAL (307)
FLOATING_LITERAL (308) 2


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
mdl (55)
    on left: 1, on right: 0
mdl_version (56)
    on left: 2, on right: 1
import_declarations_opt (57)
    on left: 3 4, on right: 1
module_declaration_opt (58)
    on left: 5 6, on right: 1
import_declarations (59)
    on left: 7 8, on right: 3 7
import_declaration (60)
    on left: 9 10, on right: 7 8
qualified_imports (61)
    on left: 11 12, on right: 9 11
qualified_import_prefix (62)
    on left: 13, on right: 10
unqualified_import (63)
    on left: 14 15, on right: 10
qualified_import (64)
    on left: 16, on right: 11 12
unqualified_import_simple_names (65)
    on left: 17 18, on right: 14 17
qualified_import_prefix_opt (66)
    on left: 19 20 21 22, on right: 13 16
qualified_import_prefix_relative_current (67)
    on left: 23, on right: 19
qualified_import_prefix_relative_parent (68)
    on left: 24 25, on right: 20 24
qualified_import_prefix_absolute (69)
    on left: 26, on right: 21
qualified_name (70)
    on left: 27 28, on right: 13 16 27 39
qualified_import_suffix_opt (71)
    on left: 29 30, on right: 16
qualified_import_suffix (72)
    on left: 31, on right: 29
simple_name (73)
    on left: 32, on right: 17 18 27 28 43
module_declaration (74)
    on left: 33, on right: 5
annotation_block_opt (75)
    on left: 34 35, on right: 33
annotation_block (76)
    on left: 36, on right: 34
annotations (77)
    on left: 37 38, on right: 36 37
annotation (78)
    on left: 39, on right: 37 38
argument_list (79)
    on left: 40, on right: 39
named_arguments (80)
    on left: 41 42, on right: 40 41
named_argument (81)
    on left: 43, on right: 41 42
comma_expression (82)
    on left: 44 45, on right: 44 46
assignment_expression (83)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59, on right: 43
    44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
logical_or_expression (84)
    on left: 60 61, on right: 46 47 48 49 50 51 52 53 54 55 56 57 58
    59 60
logical_and_expression (85)
    on left: 62 63, on right: 60 61 62
inclusive_or_expression (86)
    on left: 64 65, on right: 62 63 64
exclusive_or_expression (87)
    on left: 66 67, on right: 64 65 66
and_expression (88)
    on left: 68 69, on right: 66 67 68
equality_expression (89)
    on left: 70 71 72, on right: 68 69 70 71
relational_expression (90)
    on left: 73 74 75 76 77, on right: 70 71 72 73 74 75 76
shift_expression (91)
    on left: 78 79 80 81, on right: 73 74 75 76 77 78 79 80
additive_expression (92)
    on left: 82 83 84, on right: 78 79 80 81 82 83
multiplicative_expression (93)
    on left: 85 86 87 88, on right: 82 83 84 85 86 87
unary_expression (94)
    on left: 89, on right: 85 86 87 88


State 0

    0 $accept: . mdl $end

    MDL  shift, and go to state 1

    mdl          go to state 2
    mdl_version  go to state 3


State 1

    2 mdl_version: MDL . FLOATING_LITERAL SEMICOLON

    FLOATING_LITERAL  shift, and go to state 4


State 2

    0 $accept: mdl . $end

    $end  shift, and go to state 5


State 3

    1 mdl: mdl_version . import_declarations_opt module_declaration_opt

    IMPORT  shift, and go to state 6
    EXPORT  shift, and go to state 7

    $default  reduce using rule 4 (import_declarations_opt)

    import_declarations_opt  go to state 8
    import_declarations      go to state 9
    import_declaration       go to state 10


State 4

    2 mdl_version: MDL FLOATING_LITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 11


State 5

    0 $accept: mdl $end .

    $default  accept


State 6

    9 import_declaration: IMPORT . qualified_imports SEMICOLON

    DOT     shift, and go to state 12
    DOTDOT  shift, and go to state 13
    SCOPE   shift, and go to state 14

    $default  reduce using rule 22 (qualified_import_prefix_opt)

    qualified_imports                         go to state 15
    qualified_import                          go to state 16
    qualified_import_prefix_opt               go to state 17
    qualified_import_prefix_relative_current  go to state 18
    qualified_import_prefix_relative_parent   go to state 19
    qualified_import_prefix_absolute          go to state 20


State 7

   10 import_declaration: EXPORT . USING qualified_import_prefix IMPORT unqualified_import SEMICOLON

    USING  shift, and go to state 21


State 8

    1 mdl: mdl_version import_declarations_opt . module_declaration_opt

    MODULE  shift, and go to state 22

    $default  reduce using rule 6 (module_declaration_opt)

    module_declaration_opt  go to state 23
    module_declaration      go to state 24


State 9

    3 import_declarations_opt: import_declarations .
    7 import_declarations: import_declarations . import_declaration

    IMPORT  shift, and go to state 6
    EXPORT  shift, and go to state 7

    $default  reduce using rule 3 (import_declarations_opt)

    import_declaration  go to state 25


State 10

    8 import_declarations: import_declaration .

    $default  reduce using rule 8 (import_declarations)


State 11

    2 mdl_version: MDL FLOATING_LITERAL SEMICOLON .

    $default  reduce using rule 2 (mdl_version)


State 12

   23 qualified_import_prefix_relative_current: DOT . SCOPE

    SCOPE  shift, and go to state 26


State 13

   25 qualified_import_prefix_relative_parent: DOTDOT . SCOPE

    SCOPE  shift, and go to state 27


State 14

   26 qualified_import_prefix_absolute: SCOPE .

    $default  reduce using rule 26 (qualified_import_prefix_absolute)


State 15

    9 import_declaration: IMPORT qualified_imports . SEMICOLON
   11 qualified_imports: qualified_imports . COMMA qualified_import

    SEMICOLON  shift, and go to state 28
    COMMA      shift, and go to state 29


State 16

   12 qualified_imports: qualified_import .

    $default  reduce using rule 12 (qualified_imports)


State 17

   16 qualified_import: qualified_import_prefix_opt . qualified_name qualified_import_suffix_opt

    IDENT  shift, and go to state 30

    qualified_name  go to state 31
    simple_name     go to state 32


State 18

   19 qualified_import_prefix_opt: qualified_import_prefix_relative_current .

    $default  reduce using rule 19 (qualified_import_prefix_opt)


State 19

   20 qualified_import_prefix_opt: qualified_import_prefix_relative_parent .
   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent . DOTDOT SCOPE

    DOTDOT  shift, and go to state 33

    $default  reduce using rule 20 (qualified_import_prefix_opt)


State 20

   21 qualified_import_prefix_opt: qualified_import_prefix_absolute .

    $default  reduce using rule 21 (qualified_import_prefix_opt)


State 21

   10 import_declaration: EXPORT USING . qualified_import_prefix IMPORT unqualified_import SEMICOLON

    DOT     shift, and go to state 12
    DOTDOT  shift, and go to state 13
    SCOPE   shift, and go to state 14

    $default  reduce using rule 22 (qualified_import_prefix_opt)

    qualified_import_prefix                   go to state 34
    qualified_import_prefix_opt               go to state 35
    qualified_import_prefix_relative_current  go to state 18
    qualified_import_prefix_relative_parent   go to state 19
    qualified_import_prefix_absolute          go to state 20


State 22

   33 module_declaration: MODULE . annotation_block_opt SEMICOLON

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 36

    $default  reduce using rule 35 (annotation_block_opt)

    annotation_block_opt  go to state 37
    annotation_block      go to state 38


State 23

    1 mdl: mdl_version import_declarations_opt module_declaration_opt .

    $default  reduce using rule 1 (mdl)


State 24

    5 module_declaration_opt: module_declaration .

    $default  reduce using rule 5 (module_declaration_opt)


State 25

    7 import_declarations: import_declarations import_declaration .

    $default  reduce using rule 7 (import_declarations)


State 26

   23 qualified_import_prefix_relative_current: DOT SCOPE .

    $default  reduce using rule 23 (qualified_import_prefix_relative_current)


State 27

   25 qualified_import_prefix_relative_parent: DOTDOT SCOPE .

    $default  reduce using rule 25 (qualified_import_prefix_relative_parent)


State 28

    9 import_declaration: IMPORT qualified_imports SEMICOLON .

    $default  reduce using rule 9 (import_declaration)


State 29

   11 qualified_imports: qualified_imports COMMA . qualified_import

    DOT     shift, and go to state 12
    DOTDOT  shift, and go to state 13
    SCOPE   shift, and go to state 14

    $default  reduce using rule 22 (qualified_import_prefix_opt)

    qualified_import                          go to state 39
    qualified_import_prefix_opt               go to state 17
    qualified_import_prefix_relative_current  go to state 18
    qualified_import_prefix_relative_parent   go to state 19
    qualified_import_prefix_absolute          go to state 20


State 30

   32 simple_name: IDENT .

    $default  reduce using rule 32 (simple_name)


State 31

   16 qualified_import: qualified_import_prefix_opt qualified_name . qualified_import_suffix_opt
   27 qualified_name: qualified_name . SCOPE simple_name

    SCOPE  shift, and go to state 40

    $default  reduce using rule 30 (qualified_import_suffix_opt)

    qualified_import_suffix_opt  go to state 41
    qualified_import_suffix      go to state 42


State 32

   28 qualified_name: simple_name .

    $default  reduce using rule 28 (qualified_name)


State 33

   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT . SCOPE

    SCOPE  shift, and go to state 43


State 34

   10 import_declaration: EXPORT USING qualified_import_prefix . IMPORT unqualified_import SEMICOLON

    IMPORT  shift, and go to state 44


State 35

   13 qualified_import_prefix: qualified_import_prefix_opt . qualified_name

    IDENT  shift, and go to state 30

    qualified_name  go to state 45
    simple_name     go to state 32


State 36

   36 annotation_block: ANNOTATION_BLOCK_BEGIN . annotations ANNOTATION_BLOCK_END

    IDENT  shift, and go to state 30

    qualified_name  go to state 46
    simple_name     go to state 32
    annotations     go to state 47
    annotation      go to state 48


State 37

   33 module_declaration: MODULE annotation_block_opt . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 38

   34 annotation_block_opt: annotation_block .

    $default  reduce using rule 34 (annotation_block_opt)


State 39

   11 qualified_imports: qualified_imports COMMA qualified_import .

    $default  reduce using rule 11 (qualified_imports)


State 40

   27 qualified_name: qualified_name SCOPE . simple_name
   31 qualified_import_suffix: SCOPE . STAR

    STAR   shift, and go to state 50
    IDENT  shift, and go to state 30

    simple_name  go to state 51


State 41

   16 qualified_import: qualified_import_prefix_opt qualified_name qualified_import_suffix_opt .

    $default  reduce using rule 16 (qualified_import)


State 42

   29 qualified_import_suffix_opt: qualified_import_suffix .

    $default  reduce using rule 29 (qualified_import_suffix_opt)


State 43

   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE .

    $default  reduce using rule 24 (qualified_import_prefix_relative_parent)


State 44

   10 import_declaration: EXPORT USING qualified_import_prefix IMPORT . unqualified_import SEMICOLON

    STAR   shift, and go to state 52
    IDENT  shift, and go to state 30

    unqualified_import               go to state 53
    unqualified_import_simple_names  go to state 54
    simple_name                      go to state 55


State 45

   13 qualified_import_prefix: qualified_import_prefix_opt qualified_name .
   27 qualified_name: qualified_name . SCOPE simple_name

    SCOPE  shift, and go to state 56

    $default  reduce using rule 13 (qualified_import_prefix)


State 46

   27 qualified_name: qualified_name . SCOPE simple_name
   39 annotation: qualified_name . argument_list

    SCOPE             shift, and go to state 56
    LEFT_PARENTHESIS  shift, and go to state 57

    argument_list  go to state 58


State 47

   36 annotation_block: ANNOTATION_BLOCK_BEGIN annotations . ANNOTATION_BLOCK_END
   37 annotations: annotations . COMMA annotation

    COMMA                 shift, and go to state 59
    ANNOTATION_BLOCK_END  shift, and go to state 60


State 48

   38 annotations: annotation .

    $default  reduce using rule 38 (annotations)


State 49

   33 module_declaration: MODULE annotation_block_opt SEMICOLON .

    $default  reduce using rule 33 (module_declaration)


State 50

   31 qualified_import_suffix: SCOPE STAR .

    $default  reduce using rule 31 (qualified_import_suffix)


State 51

   27 qualified_name: qualified_name SCOPE simple_name .

    $default  reduce using rule 27 (qualified_name)


State 52

   15 unqualified_import: STAR .

    $default  reduce using rule 15 (unqualified_import)


State 53

   10 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 54

   14 unqualified_import: unqualified_import_simple_names .
   17 unqualified_import_simple_names: unqualified_import_simple_names . COMMA simple_name

    COMMA  shift, and go to state 62

    $default  reduce using rule 14 (unqualified_import)


State 55

   18 unqualified_import_simple_names: simple_name .

    $default  reduce using rule 18 (unqualified_import_simple_names)


State 56

   27 qualified_name: qualified_name SCOPE . simple_name

    IDENT  shift, and go to state 30

    simple_name  go to state 51


State 57

   40 argument_list: LEFT_PARENTHESIS . named_arguments RIGHT_PARENTHESIS

    IDENT  shift, and go to state 30

    simple_name      go to state 63
    named_arguments  go to state 64
    named_argument   go to state 65


State 58

   39 annotation: qualified_name argument_list .

    $default  reduce using rule 39 (annotation)


State 59

   37 annotations: annotations COMMA . annotation

    IDENT  shift, and go to state 30

    qualified_name  go to state 46
    simple_name     go to state 32
    annotation      go to state 66


State 60

   36 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END .

    $default  reduce using rule 36 (annotation_block)


State 61

   10 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON .

    $default  reduce using rule 10 (import_declaration)


State 62

   17 unqualified_import_simple_names: unqualified_import_simple_names COMMA . simple_name

    IDENT  shift, and go to state 30

    simple_name  go to state 67


State 63

   43 named_argument: simple_name . COLON assignment_expression

    COLON  shift, and go to state 68


State 64

   40 argument_list: LEFT_PARENTHESIS named_arguments . RIGHT_PARENTHESIS
   41 named_arguments: named_arguments . COMMA named_argument

    COMMA              shift, and go to state 69
    RIGHT_PARENTHESIS  shift, and go to state 70


State 65

   42 named_arguments: named_argument .

    $default  reduce using rule 42 (named_arguments)


State 66

   37 annotations: annotations COMMA annotation .

    $default  reduce using rule 37 (annotations)


State 67

   17 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name .

    $default  reduce using rule 17 (unqualified_import_simple_names)


State 68

   43 named_argument: simple_name COLON . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 72
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 69

   41 named_arguments: named_arguments COMMA . named_argument

    IDENT  shift, and go to state 30

    simple_name     go to state 63
    named_argument  go to state 84


State 70

   40 argument_list: LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 40 (argument_list)


State 71

   89 unary_expression: LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 85


State 72

   43 named_argument: simple_name COLON assignment_expression .

    $default  reduce using rule 43 (named_argument)


State 73

   46 assignment_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression
   47                      | logical_or_expression . ASSIGN_OP assignment_expression
   48                      | logical_or_expression . BITWISE_OR_ASSIGN_OP assignment_expression
   49                      | logical_or_expression . BITWISE_AND_ASSIGN_OP assignment_expression
   50                      | logical_or_expression . BITWISE_XOR_ASSIGN_OP assignment_expression
   51                      | logical_or_expression . SHIFT_LEFT_ASSIGN_OP assignment_expression
   52                      | logical_or_expression . SHIFT_RIGHT_ASSIGN_OP assignment_expression
   53                      | logical_or_expression . UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
   54                      | logical_or_expression . MULTIPLY_ASSIGN_OP assignment_expression
   55                      | logical_or_expression . DIVIDE_ASSIGN_OP assignment_expression
   56                      | logical_or_expression . MODULO_ASSIGN_OP assignment_expression
   57                      | logical_or_expression . PLUS_ASSIGN_OP assignment_expression
   58                      | logical_or_expression . MINUS_ASSIGN_OP assignment_expression
   59                      | logical_or_expression .

    ASSIGN_OP                       shift, and go to state 86
    BITWISE_OR_ASSIGN_OP            shift, and go to state 87
    BITWISE_AND_ASSIGN_OP           shift, and go to state 88
    BITWISE_XOR_ASSIGN_OP           shift, and go to state 89
    SHIFT_LEFT_ASSIGN_OP            shift, and go to state 90
    SHIFT_RIGHT_ASSIGN_OP           shift, and go to state 91
    UNSIGNED_SHIFT_RIGHT_ASSIGN_OP  shift, and go to state 92
    MULTIPLY_ASSIGN_OP              shift, and go to state 93
    DIVIDE_ASSIGN_OP                shift, and go to state 94
    MODULO_ASSIGN_OP                shift, and go to state 95
    PLUS_ASSIGN_OP                  shift, and go to state 96
    MINUS_ASSIGN_OP                 shift, and go to state 97
    CONDITIONAL_OP                  shift, and go to state 98

    $default  reduce using rule 59 (assignment_expression)


State 74

   60 logical_or_expression: logical_and_expression . LOGICAL_OR_OP logical_or_expression
   61                      | logical_and_expression .

    LOGICAL_OR_OP  shift, and go to state 99

    $default  reduce using rule 61 (logical_or_expression)


State 75

   62 logical_and_expression: inclusive_or_expression . LOGICAL_AND_OP logical_and_expression
   63                       | inclusive_or_expression .

    LOGICAL_AND_OP  shift, and go to state 100

    $default  reduce using rule 63 (logical_and_expression)


State 76

   64 inclusive_or_expression: exclusive_or_expression . BITWISE_OR_OP inclusive_or_expression
   65                        | exclusive_or_expression .

    BITWISE_OR_OP  shift, and go to state 101

    $default  reduce using rule 65 (inclusive_or_expression)


State 77

   66 exclusive_or_expression: and_expression . BITWISE_XOR_OP exclusive_or_expression
   67                        | and_expression .

    BITWISE_XOR_OP  shift, and go to state 102

    $default  reduce using rule 67 (exclusive_or_expression)


State 78

   68 and_expression: equality_expression . BITWISE_AND_OP and_expression
   69               | equality_expression .

    BITWISE_AND_OP  shift, and go to state 103

    $default  reduce using rule 69 (and_expression)


State 79

   70 equality_expression: relational_expression . EQUAL_OP equality_expression
   71                    | relational_expression . NOT_EQUAL_OP equality_expression
   72                    | relational_expression .

    EQUAL_OP      shift, and go to state 104
    NOT_EQUAL_OP  shift, and go to state 105

    $default  reduce using rule 72 (equality_expression)


State 80

   73 relational_expression: shift_expression . LESS_OP relational_expression
   74                      | shift_expression . LESS_OR_EQUAL_OP relational_expression
   75                      | shift_expression . GREATER_OR_EQUAL_OP relational_expression
   76                      | shift_expression . GREATER_OP relational_expression
   77                      | shift_expression .

    LESS_OP              shift, and go to state 106
    LESS_OR_EQUAL_OP     shift, and go to state 107
    GREATER_OR_EQUAL_OP  shift, and go to state 108
    GREATER_OP           shift, and go to state 109

    $default  reduce using rule 77 (relational_expression)


State 81

   78 shift_expression: additive_expression . SHIFT_LEFT_OP shift_expression
   79                 | additive_expression . SHIFT_RIGHT_OP shift_expression
   80                 | additive_expression . UNSIGNED_SHIFT_RIGHT_OP shift_expression
   81                 | additive_expression .

    SHIFT_LEFT_OP            shift, and go to state 110
    SHIFT_RIGHT_OP           shift, and go to state 111
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 112

    $default  reduce using rule 81 (shift_expression)


State 82

   82 additive_expression: multiplicative_expression . PLUS_OP additive_expression
   83                    | multiplicative_expression . MINUS_OP additive_expression
   84                    | multiplicative_expression .

    PLUS_OP   shift, and go to state 113
    MINUS_OP  shift, and go to state 114

    $default  reduce using rule 84 (additive_expression)


State 83

   85 multiplicative_expression: unary_expression . MULTIPLY_OP multiplicative_expression
   86                          | unary_expression . DIVIDE_OP multiplicative_expression
   87                          | unary_expression . MODULO_OP multiplicative_expression
   88                          | unary_expression .

    MULTIPLY_OP  shift, and go to state 115
    DIVIDE_OP    shift, and go to state 116
    MODULO_OP    shift, and go to state 117

    $default  reduce using rule 88 (multiplicative_expression)


State 84

   41 named_arguments: named_arguments COMMA named_argument .

    $default  reduce using rule 41 (named_arguments)


State 85

   89 unary_expression: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 89 (unary_expression)


State 86

   47 assignment_expression: logical_or_expression ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 118
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 87

   48 assignment_expression: logical_or_expression BITWISE_OR_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 119
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 88

   49 assignment_expression: logical_or_expression BITWISE_AND_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 120
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 89

   50 assignment_expression: logical_or_expression BITWISE_XOR_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 121
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 90

   51 assignment_expression: logical_or_expression SHIFT_LEFT_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 122
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 91

   52 assignment_expression: logical_or_expression SHIFT_RIGHT_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 123
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 92

   53 assignment_expression: logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 124
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 93

   54 assignment_expression: logical_or_expression MULTIPLY_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 125
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 94

   55 assignment_expression: logical_or_expression DIVIDE_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 126
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 95

   56 assignment_expression: logical_or_expression MODULO_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 127
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 96

   57 assignment_expression: logical_or_expression PLUS_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 128
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 97

   58 assignment_expression: logical_or_expression MINUS_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 129
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 98

   46 assignment_expression: logical_or_expression CONDITIONAL_OP . comma_expression COLON assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    comma_expression           go to state 130
    assignment_expression      go to state 131
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 99

   60 logical_or_expression: logical_and_expression LOGICAL_OR_OP . logical_or_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    logical_or_expression      go to state 132
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 100

   62 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP . logical_and_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    logical_and_expression     go to state 133
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 101

   64 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP . inclusive_or_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    inclusive_or_expression    go to state 134
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 102

   66 exclusive_or_expression: and_expression BITWISE_XOR_OP . exclusive_or_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    exclusive_or_expression    go to state 135
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 103

   68 and_expression: equality_expression BITWISE_AND_OP . and_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    and_expression             go to state 136
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 104

   70 equality_expression: relational_expression EQUAL_OP . equality_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    equality_expression        go to state 137
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 105

   71 equality_expression: relational_expression NOT_EQUAL_OP . equality_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    equality_expression        go to state 138
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 106

   73 relational_expression: shift_expression LESS_OP . relational_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    relational_expression      go to state 139
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 107

   74 relational_expression: shift_expression LESS_OR_EQUAL_OP . relational_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    relational_expression      go to state 140
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 108

   75 relational_expression: shift_expression GREATER_OR_EQUAL_OP . relational_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    relational_expression      go to state 141
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 109

   76 relational_expression: shift_expression GREATER_OP . relational_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    relational_expression      go to state 142
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 110

   78 shift_expression: additive_expression SHIFT_LEFT_OP . shift_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    shift_expression           go to state 143
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 111

   79 shift_expression: additive_expression SHIFT_RIGHT_OP . shift_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    shift_expression           go to state 144
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 112

   80 shift_expression: additive_expression UNSIGNED_SHIFT_RIGHT_OP . shift_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    shift_expression           go to state 145
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 113

   82 additive_expression: multiplicative_expression PLUS_OP . additive_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    additive_expression        go to state 146
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 114

   83 additive_expression: multiplicative_expression MINUS_OP . additive_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    additive_expression        go to state 147
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 115

   85 multiplicative_expression: unary_expression MULTIPLY_OP . multiplicative_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    multiplicative_expression  go to state 148
    unary_expression           go to state 83


State 116

   86 multiplicative_expression: unary_expression DIVIDE_OP . multiplicative_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    multiplicative_expression  go to state 149
    unary_expression           go to state 83


State 117

   87 multiplicative_expression: unary_expression MODULO_OP . multiplicative_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    multiplicative_expression  go to state 150
    unary_expression           go to state 83


State 118

   47 assignment_expression: logical_or_expression ASSIGN_OP assignment_expression .

    $default  reduce using rule 47 (assignment_expression)


State 119

   48 assignment_expression: logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 48 (assignment_expression)


State 120

   49 assignment_expression: logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression .

    $default  reduce using rule 49 (assignment_expression)


State 121

   50 assignment_expression: logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 50 (assignment_expression)


State 122

   51 assignment_expression: logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 51 (assignment_expression)


State 123

   52 assignment_expression: logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 52 (assignment_expression)


State 124

   53 assignment_expression: logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 53 (assignment_expression)


State 125

   54 assignment_expression: logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression .

    $default  reduce using rule 54 (assignment_expression)


State 126

   55 assignment_expression: logical_or_expression DIVIDE_ASSIGN_OP assignment_expression .

    $default  reduce using rule 55 (assignment_expression)


State 127

   56 assignment_expression: logical_or_expression MODULO_ASSIGN_OP assignment_expression .

    $default  reduce using rule 56 (assignment_expression)


State 128

   57 assignment_expression: logical_or_expression PLUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 57 (assignment_expression)


State 129

   58 assignment_expression: logical_or_expression MINUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 58 (assignment_expression)


State 130

   46 assignment_expression: logical_or_expression CONDITIONAL_OP comma_expression . COLON assignment_expression

    COLON  shift, and go to state 151


State 131

   44 comma_expression: assignment_expression . COMMA comma_expression
   45                 | assignment_expression .

    COMMA  shift, and go to state 152

    $default  reduce using rule 45 (comma_expression)


State 132

   60 logical_or_expression: logical_and_expression LOGICAL_OR_OP logical_or_expression .

    $default  reduce using rule 60 (logical_or_expression)


State 133

   62 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP logical_and_expression .

    $default  reduce using rule 62 (logical_and_expression)


State 134

   64 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP inclusive_or_expression .

    $default  reduce using rule 64 (inclusive_or_expression)


State 135

   66 exclusive_or_expression: and_expression BITWISE_XOR_OP exclusive_or_expression .

    $default  reduce using rule 66 (exclusive_or_expression)


State 136

   68 and_expression: equality_expression BITWISE_AND_OP and_expression .

    $default  reduce using rule 68 (and_expression)


State 137

   70 equality_expression: relational_expression EQUAL_OP equality_expression .

    $default  reduce using rule 70 (equality_expression)


State 138

   71 equality_expression: relational_expression NOT_EQUAL_OP equality_expression .

    $default  reduce using rule 71 (equality_expression)


State 139

   73 relational_expression: shift_expression LESS_OP relational_expression .

    $default  reduce using rule 73 (relational_expression)


State 140

   74 relational_expression: shift_expression LESS_OR_EQUAL_OP relational_expression .

    $default  reduce using rule 74 (relational_expression)


State 141

   75 relational_expression: shift_expression GREATER_OR_EQUAL_OP relational_expression .

    $default  reduce using rule 75 (relational_expression)


State 142

   76 relational_expression: shift_expression GREATER_OP relational_expression .

    $default  reduce using rule 76 (relational_expression)


State 143

   78 shift_expression: additive_expression SHIFT_LEFT_OP shift_expression .

    $default  reduce using rule 78 (shift_expression)


State 144

   79 shift_expression: additive_expression SHIFT_RIGHT_OP shift_expression .

    $default  reduce using rule 79 (shift_expression)


State 145

   80 shift_expression: additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression .

    $default  reduce using rule 80 (shift_expression)


State 146

   82 additive_expression: multiplicative_expression PLUS_OP additive_expression .

    $default  reduce using rule 82 (additive_expression)


State 147

   83 additive_expression: multiplicative_expression MINUS_OP additive_expression .

    $default  reduce using rule 83 (additive_expression)


State 148

   85 multiplicative_expression: unary_expression MULTIPLY_OP multiplicative_expression .

    $default  reduce using rule 85 (multiplicative_expression)


State 149

   86 multiplicative_expression: unary_expression DIVIDE_OP multiplicative_expression .

    $default  reduce using rule 86 (multiplicative_expression)


State 150

   87 multiplicative_expression: unary_expression MODULO_OP multiplicative_expression .

    $default  reduce using rule 87 (multiplicative_expression)


State 151

   46 assignment_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 153
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 152

   44 comma_expression: assignment_expression COMMA . comma_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    comma_expression           go to state 154
    assignment_expression      go to state 131
    logical_or_expression      go to state 73
    logical_and_expression     go to state 74
    inclusive_or_expression    go to state 75
    exclusive_or_expression    go to state 76
    and_expression             go to state 77
    equality_expression        go to state 78
    relational_expression      go to state 79
    shift_expression           go to state 80
    additive_expression        go to state 81
    multiplicative_expression  go to state 82
    unary_expression           go to state 83


State 153

   46 assignment_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression .

    $default  reduce using rule 46 (assignment_expression)


State 154

   44 comma_expression: assignment_expression COMMA comma_expression .

    $default  reduce using rule 44 (comma_expression)
