Grammar

    0 $accept: mdl $end

    1 mdl: mdl_version import_declarations module_declaration global_declarations
    2    | mdl_version import_declarations global_declarations
    3    | mdl_version module_declaration global_declarations
    4    | mdl_version import_declarations module_declaration
    5    | mdl_version import_declarations
    6    | mdl_version module_declaration
    7    | mdl_version global_declarations
    8    | mdl_version

    9 mdl_version: MDL FLOATING_LITERAL SEMICOLON

   10 import_declarations: import_declarations import_declaration
   11                    | import_declaration

   12 global_declarations: global_declarations global_declaration
   13                    | global_declaration

   14 variable_declarations: variable_declarations variable_declaration
   15                      | variable_declaration

   16 import_declaration: IMPORT qualified_imports SEMICOLON
   17                   | EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON

   18 qualified_imports: qualified_imports COMMA qualified_import
   19                  | qualified_import

   20 qualified_import_prefix: qualified_import_prefix_relative_current qualified_name_infix
   21                        | qualified_import_prefix_relative_parent qualified_name_infix
   22                        | qualified_import_prefix_absolute qualified_name_infix
   23                        | qualified_name_infix

   24 unqualified_import: unqualified_import_simple_names
   25                   | STAR

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | qualified_name_infix qualified_import_suffix
   30                 | qualified_import_prefix_relative_current qualified_name_infix
   31                 | qualified_import_prefix_relative_parent qualified_name_infix
   32                 | qualified_import_prefix_absolute qualified_name_infix
   33                 | qualified_name_infix

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name
   35                                | simple_name

   36 qualified_import_prefix_relative_current: DOT SCOPE

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | DOTDOT SCOPE

   39 qualified_import_prefix_absolute: SCOPE

   40 qualified_name_infix: qualified_name_infix SCOPE simple_name
   41                     | simple_name

   42 qualified_import_suffix: SCOPE STAR

   43 simple_name: IDENT

   44 module_declaration: MODULE annotation_block SEMICOLON
   45                   | MODULE SEMICOLON

   46 variable_declaration: type variable_declarators SEMICOLON

   47 variable_declarators: variable_declarators COMMA variable_declarator
   48                     | variable_declarator

   49 variable_declarator: simple_name argument_list annotation_block
   50                    | simple_name argument_list
   51                    | simple_name ASSIGN_OP assignment_expression annotation_block
   52                    | simple_name ASSIGN_OP assignment_expression
   53                    | simple_name annotation_block
   54                    | simple_name

   55 global_declaration: annotation_declaration
   56                   | constant_declaration
   57                   | type_declaration
   58                   | function_declaration

   59 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   60                       | ANNOTATION simple_name parameter_list SEMICOLON

   61 constant_declaration: CONST type constant_declarators SEMICOLON

   62 constant_declarators: constant_declarators COMMA constant_declarator
   63                     | constant_declarator

   64 constant_declarator: simple_name argument_list annotation_block
   65                    | simple_name argument_list
   66                    | simple_name ASSIGN_OP conditional_expression annotation_block
   67                    | simple_name ASSIGN_OP conditional_expression

   68 type_declaration: alias_type_declaration
   69                 | struct_type_declaration
   70                 | enum_type_declaration

   71 alias_type_declaration: TYPEDEF type simple_name SEMICOLON

   72 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

   76 struct_field_declarators: struct_field_declarators struct_field_declarator
   77                         | struct_field_declarator

   78 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   79                        | type simple_name ASSIGN_OP comma_expression SEMICOLON
   80                        | type simple_name annotation_block SEMICOLON
   81                        | type simple_name SEMICOLON

   82 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

   86 enum_value_declarators: enum_value_declarators COMMA enum_value_declarator
   87                       | enum_value_declarator

   88 enum_value_declarator: simple_name ASSIGN_OP assignment_expression annotation_block
   89                      | simple_name ASSIGN_OP assignment_expression
   90                      | simple_name annotation_block
   91                      | simple_name

   92 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   93                     | type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   94                     | type annotation_block simple_name parameter_list annotation_block SEMICOLON
   95                     | type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   96                     | type annotation_block simple_name parameter_list VARYING SEMICOLON
   97                     | type annotation_block simple_name parameter_list SEMICOLON
   98                     | type simple_name parameter_list UNIFORM annotation_block SEMICOLON
   99                     | type simple_name parameter_list VARYING annotation_block SEMICOLON
  100                     | type simple_name parameter_list annotation_block SEMICOLON
  101                     | type simple_name parameter_list UNIFORM SEMICOLON
  102                     | type simple_name parameter_list VARYING SEMICOLON
  103                     | type simple_name parameter_list SEMICOLON
  104                     | type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  105                     | type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  106                     | type annotation_block simple_name parameter_list annotation_block compound_statement
  107                     | type annotation_block simple_name parameter_list UNIFORM compound_statement
  108                     | type annotation_block simple_name parameter_list VARYING compound_statement
  109                     | type annotation_block simple_name parameter_list compound_statement
  110                     | type simple_name parameter_list UNIFORM annotation_block compound_statement
  111                     | type simple_name parameter_list VARYING annotation_block compound_statement
  112                     | type simple_name parameter_list annotation_block compound_statement
  113                     | type simple_name parameter_list UNIFORM compound_statement
  114                     | type simple_name parameter_list VARYING compound_statement
  115                     | type simple_name parameter_list compound_statement
  116                     | type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  122                     | type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

  132 compound_statement: LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

  134 statements: statements statement
  135           | statement

  136 statement: matched_statement
  137          | unmatched_statement

  138 matched_statement: compound_statement
  139                  | type_declaration
  140                  | constant_declaration
  141                  | matched_if_statement
  142                  | switch_statement
  143                  | matched_while_statement
  144                  | matched_do_statement
  145                  | matched_for_statement
  146                  | break_statement
  147                  | continue_statement
  148                  | return_statement
  149                  | variable_declaration
  150                  | comma_expression SEMICOLON
  151                  | SEMICOLON

  152 unmatched_statement: unmatched_if_statement
  153                    | unmatched_while_statement
  154                    | unmatched_do_statement
  155                    | unmatched_for_statement

  156 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement

  157 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

  159 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

  161 switch_cases: switch_cases switch_case
  162             | switch_case

  163 switch_case: CASE comma_expression COLON statement
  164            | CASE comma_expression COLON
  165            | DEFAULT COLON statement
  166            | DEFAULT COLON

  167 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement

  168 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement

  169 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

  170 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

  171 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement

  183 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

  195 break_statement: BREAK SEMICOLON

  196 continue_statement: CONTINUE SEMICOLON

  197 return_statement: RETURN SEMICOLON

  198 parameter_list: LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS

  199 parameters: parameters COMMA parameter
  200           | parameter

  201 parameter: type simple_name ASSIGN_OP assignment_expression annotation_block
  202          | type simple_name ASSIGN_OP assignment_expression
  203          | type simple_name annotation_block
  204          | type simple_name

  205 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

  206 annotations: annotations COMMA annotation
  207            | annotation

  208 qualified_name: SCOPE qualified_name_infix
  209               | qualified_name_infix

  210 annotation: qualified_name argument_list

  211 argument_list: LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  212              | LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS

  213 named_arguments: named_arguments COMMA named_argument
  214                | named_argument

  215 positional_arguments: positional_arguments COMMA positional_argument
  216                     | positional_argument

  217 named_argument: simple_name COLON assignment_expression

  218 positional_argument: assignment_expression

  219 comma_expression: assignment_expression COMMA comma_expression
  220                 | assignment_expression

  221 assignment_expression: conditional_expression
  222                      | logical_or_expression ASSIGN_OP assignment_expression
  223                      | logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | logical_or_expression

  235 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression

  236 logical_or_expression: logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | logical_and_expression

  238 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | inclusive_or_expression

  240 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | exclusive_or_expression

  242 exclusive_or_expression: and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | and_expression

  244 and_expression: equality_expression BITWISE_AND_OP and_expression
  245               | equality_expression

  246 equality_expression: relational_expression EQUAL_OP equality_expression
  247                    | relational_expression NOT_EQUAL_OP equality_expression
  248                    | relational_expression

  249 relational_expression: shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | shift_expression

  254 shift_expression: additive_expression SHIFT_LEFT_OP shift_expression
  255                 | additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | additive_expression

  258 additive_expression: multiplicative_expression PLUS_OP additive_expression
  259                    | multiplicative_expression MINUS_OP additive_expression
  260                    | multiplicative_expression

  261 multiplicative_expression: unary_expression STAR multiplicative_expression
  262                          | unary_expression DIVIDE_OP multiplicative_expression
  263                          | unary_expression MODULO_OP multiplicative_expression
  264                          | unary_expression

  265 unary_expression: postfix_expression
  266                 | BITWISE_COMPLEMENT_OP unary_expression
  267                 | LOGICAL_NOT_OP unary_expression
  268                 | POSITIVE_OP unary_expression
  269                 | NEGATIVE_OP unary_expression
  270                 | PRE_INCREMENT_OP unary_expression
  271                 | PRE_DECREMENT_OP unary_expression
  272                 | let_expression

  273 postfix_expression: primary_expression

  274 let_expression: LET variable_declaration IN unary_expression
  275               | LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression

  276 primary_expression: literal_expression
  277                   | simple_type
  278                   | simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS

  280 literal_expression: boolean_literal
  281                   | integer_literal
  282                   | floating_literal
  283                   | string_literal

  284 boolean_literal: TRUE
  285                | FALSE

  286 integer_literal: INTEGER_LITERAL

  287 floating_literal: FLOATING_LITERAL

  288 string_literal: string_literal STRING_LITERAL
  289               | STRING_LITERAL

  290 type: VARYING array_type
  291     | UNIFORM array_type
  292     | array_type

  293 array_type: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET

  296 simple_type: SCOPE relative_type
  297            | relative_type

  298 relative_type: BOOL
  299              | BOOL2
  300              | BOOL3
  301              | BOOL4
  302              | INT
  303              | INT2
  304              | INT3
  305              | INT4
  306              | FLOAT
  307              | FLOAT2
  308              | FLOAT3
  309              | FLOAT4
  310              | FLOAT2X2
  311              | FLOAT2X3
  312              | FLOAT2X4
  313              | FLOAT3X2
  314              | FLOAT3X3
  315              | FLOAT3X4
  316              | FLOAT4X2
  317              | FLOAT4X3
  318              | FLOAT4X4
  319              | DOUBLE
  320              | DOUBLE2
  321              | DOUBLE3
  322              | DOUBLE4
  323              | DOUBLE2X2
  324              | DOUBLE2X3
  325              | DOUBLE2X4
  326              | DOUBLE3X2
  327              | DOUBLE3X3
  328              | DOUBLE3X4
  329              | DOUBLE4X2
  330              | DOUBLE4X3
  331              | DOUBLE4X4
  332              | COLOR
  333              | STRING
  334              | SDF
  335              | EDF
  336              | VDF
  337              | LIGHT_PROFILE
  338              | MATERIAL
  339              | MATERIAL_EMISSION
  340              | MATERIAL_GEOMETRY
  341              | MATERIAL_SURFACE
  342              | MATERIAL_VOLUME
  343              | TEXTURE_2D
  344              | TEXTURE_3D
  345              | TEXTURE_CUBE
  346              | TEXTURE_PTEX
  347              | BSDF_MEASUREMENT
  348              | INTENSITY_MODE
  349              | INTENSITY_RADIANT_EXITANCE
  350              | INTENSITY_POWER
  351              | HAIR_BSDF
  352              | qualified_name_infix


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING_LITERAL (258) 288 289
SEMICOLON (259) 9 16 17 44 45 46 59 60 61 71 72 73 74 75 78 79 80 81
    82 83 84 85 92 93 94 95 96 97 98 99 100 101 102 103 116 117 118
    119 120 121 122 123 124 125 126 127 128 129 130 131 150 151 169
    170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185
    186 187 188 189 190 191 192 193 194 195 196 197
COMMA (260) 18 34 47 62 86 199 206 213 215 219
MDL (261) 9
IMPORT (262) 16 17
USING (263) 17
MODULE (264) 44 45
EXPORT (265) 17
UNIFORM (266) 92 95 98 101 104 107 110 113 116 119 122 125 291
VARYING (267) 93 96 99 102 105 108 111 114 117 120 123 126 290
BOOL (268) 298
BOOL2 (269) 299
BOOL3 (270) 300
BOOL4 (271) 301
INT (272) 302
INT2 (273) 303
INT3 (274) 304
INT4 (275) 305
FLOAT (276) 306
FLOAT2 (277) 307
FLOAT3 (278) 308
FLOAT4 (279) 309
FLOAT2X2 (280) 310
FLOAT2X3 (281) 311
FLOAT2X4 (282) 312
FLOAT3X2 (283) 313
FLOAT3X3 (284) 314
FLOAT3X4 (285) 315
FLOAT4X2 (286) 316
FLOAT4X3 (287) 317
FLOAT4X4 (288) 318
DOUBLE (289) 319
DOUBLE2 (290) 320
DOUBLE3 (291) 321
DOUBLE4 (292) 322
DOUBLE2X2 (293) 323
DOUBLE2X3 (294) 324
DOUBLE2X4 (295) 325
DOUBLE3X2 (296) 326
DOUBLE3X3 (297) 327
DOUBLE3X4 (298) 328
DOUBLE4X2 (299) 329
DOUBLE4X3 (300) 330
DOUBLE4X4 (301) 331
COLOR (302) 332
STRING (303) 333
SDF (304) 334
EDF (305) 335
VDF (306) 336
LIGHT_PROFILE (307) 337
MATERIAL (308) 338
MATERIAL_EMISSION (309) 339
MATERIAL_GEOMETRY (310) 340
MATERIAL_SURFACE (311) 341
MATERIAL_VOLUME (312) 342
TEXTURE_2D (313) 343
TEXTURE_3D (314) 344
TEXTURE_CUBE (315) 345
TEXTURE_PTEX (316) 346
BSDF_MEASUREMENT (317) 347
INTENSITY_MODE (318) 348
INTENSITY_RADIANT_EXITANCE (319) 349
INTENSITY_POWER (320) 350
HAIR_BSDF (321) 351
TRUE (322) 284
FALSE (323) 285
LET (324) 274 275
IN (325) 274 275
ANNOTATION (326) 59 60
CONST (327) 61
TYPEDEF (328) 71
STRUCT (329) 72 73 74 75
ENUM (330) 82 83 84 85
IF (331) 156 157 158
ELSE (332) 156 158
SWITCH (333) 159 160
CASE (334) 163 164
DEFAULT (335) 165 166
WHILE (336) 167 168 169 170
DO (337) 169 170
FOR (338) 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185
    186 187 188 189 190 191 192 193 194
BREAK (339) 195
CONTINUE (340) 196
RETURN (341) 197
ASSIGN_OP (342) 51 52 66 67 78 79 88 89 116 117 118 119 120 121 122
    123 124 125 126 127 128 129 130 131 201 202 222
BITWISE_OR_ASSIGN_OP (343) 223
BITWISE_AND_ASSIGN_OP (344) 224
BITWISE_XOR_ASSIGN_OP (345) 225
SHIFT_LEFT_ASSIGN_OP (346) 226
SHIFT_RIGHT_ASSIGN_OP (347) 227
UNSIGNED_SHIFT_RIGHT_ASSIGN_OP (348) 228
MULTIPLY_ASSIGN_OP (349) 229
DIVIDE_ASSIGN_OP (350) 230
MODULO_ASSIGN_OP (351) 231
PLUS_ASSIGN_OP (352) 232
MINUS_ASSIGN_OP (353) 233
CONDITIONAL_OP (354) 235
LOGICAL_OR_OP (355) 236
LOGICAL_AND_OP (356) 238
BITWISE_OR_OP (357) 240
BITWISE_XOR_OP (358) 242
BITWISE_AND_OP (359) 244
EQUAL_OP (360) 246
NOT_EQUAL_OP (361) 247
LESS_OR_EQUAL_OP (362) 250
GREATER_OR_EQUAL_OP (363) 251
SHIFT_LEFT_OP (364) 254
SHIFT_RIGHT_OP (365) 255
UNSIGNED_SHIFT_RIGHT_OP (366) 256
PLUS_OP (367) 258
MINUS_OP (368) 259
DIVIDE_OP (369) 262
MODULO_OP (370) 263
BITWISE_COMPLEMENT_OP (371) 266
LOGICAL_NOT_OP (372) 267
POSITIVE_OP (373) 268
NEGATIVE_OP (374) 269
PRE_INCREMENT_OP (375) 270
PRE_DECREMENT_OP (376) 271
DOT (377) 36
DOTDOT (378) 37 38
SCOPE (379) 36 37 38 39 40 42 208 296
STAR (380) 25 42 128 129 130 131 261
COLON (381) 163 164 165 166 217 235
ANNOTATION_BLOCK_BEGIN (382) 205
ANNOTATION_BLOCK_END (383) 205
LEFT_PARENTHESIS (384) 128 129 130 131 156 157 158 159 160 167 168
    169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184
    185 186 187 188 189 190 191 192 193 194 198 211 212 279
RIGHT_PARENTHESIS (385) 128 129 130 131 156 157 158 159 160 167 168
    169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184
    185 186 187 188 189 190 191 192 193 194 198 211 212 279
LEFT_SQUARE_BRACKET (386) 278 293 294 295
RIGHT_SQUARE_BRACKET (387) 278 293 294 295
LEFT_ANGLE_BRACKET (388) 249 295
RIGHT_ANGLE_BRACKET (389) 252 295
LEFT_CURLY_BRACE (390) 72 73 74 75 82 83 84 85 132 133 159 160 275
RIGHT_CURLY_BRACE (391) 72 73 74 75 82 83 84 85 132 133 159 160 275
IDENT (392) 43
INTEGER_LITERAL (393) 286
FLOATING_LITERAL (394) 9 287


Nonterminals, with rules where they appear

$accept (140)
    on left: 0
mdl (141)
    on left: 1 2 3 4 5 6 7 8, on right: 0
mdl_version (142)
    on left: 9, on right: 1 2 3 4 5 6 7 8
import_declarations (143)
    on left: 10 11, on right: 1 2 4 5 10
global_declarations (144)
    on left: 12 13, on right: 1 2 3 7 12
variable_declarations (145)
    on left: 14 15, on right: 14 275
import_declaration (146)
    on left: 16 17, on right: 10 11
qualified_imports (147)
    on left: 18 19, on right: 16 18
qualified_import_prefix (148)
    on left: 20 21 22 23, on right: 17
unqualified_import (149)
    on left: 24 25, on right: 17
qualified_import (150)
    on left: 26 27 28 29 30 31 32 33, on right: 18 19
unqualified_import_simple_names (151)
    on left: 34 35, on right: 24 34
qualified_import_prefix_relative_current (152)
    on left: 36, on right: 20 26 30
qualified_import_prefix_relative_parent (153)
    on left: 37 38, on right: 21 27 31 37
qualified_import_prefix_absolute (154)
    on left: 39, on right: 22 28 32
qualified_name_infix (155)
    on left: 40 41, on right: 20 21 22 23 26 27 28 29 30 31 32 33 40
    208 209 352
qualified_import_suffix (156)
    on left: 42, on right: 26 27 28 29
simple_name (157)
    on left: 43, on right: 34 35 40 41 49 50 51 52 53 54 59 60 64 65
    66 67 71 72 73 74 75 78 79 80 81 82 83 84 85 88 89 90 91 92 93
    94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111
    112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127
    128 129 130 131 201 202 203 204 217 295
module_declaration (158)
    on left: 44 45, on right: 1 3 4 6
variable_declaration (159)
    on left: 46, on right: 14 15 149 171 172 173 174 183 184 185 186
    274
variable_declarators (160)
    on left: 47 48, on right: 46 47
variable_declarator (161)
    on left: 49 50 51 52 53 54, on right: 47 48
global_declaration (162)
    on left: 55 56 57 58, on right: 12 13
annotation_declaration (163)
    on left: 59 60, on right: 55
constant_declaration (164)
    on left: 61, on right: 56 140
constant_declarators (165)
    on left: 62 63, on right: 61 62
constant_declarator (166)
    on left: 64 65 66 67, on right: 62 63
type_declaration (167)
    on left: 68 69 70, on right: 57 139
alias_type_declaration (168)
    on left: 71, on right: 68
struct_type_declaration (169)
    on left: 72 73 74 75, on right: 69
struct_field_declarators (170)
    on left: 76 77, on right: 72 73 76
struct_field_declarator (171)
    on left: 78 79 80 81, on right: 76 77
enum_type_declaration (172)
    on left: 82 83 84 85, on right: 70
enum_value_declarators (173)
    on left: 86 87, on right: 82 83 86
enum_value_declarator (174)
    on left: 88 89 90 91, on right: 86 87
function_declaration (175)
    on left: 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107
    108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123
    124 125 126 127 128 129 130 131, on right: 58
compound_statement (176)
    on left: 132 133, on right: 104 105 106 107 108 109 110 111 112
    113 114 115 138
statements (177)
    on left: 134 135, on right: 132 134
statement (178)
    on left: 136 137, on right: 134 135 157 163 165
matched_statement (179)
    on left: 138 139 140 141 142 143 144 145 146 147 148 149 150 151,
    on right: 136 156 158 167 169 171 172 173 174 175 176 177 178 179
    180 181 182
unmatched_statement (180)
    on left: 152 153 154 155, on right: 137 158 168 170 183 184 185
    186 187 188 189 190 191 192 193 194
matched_if_statement (181)
    on left: 156, on right: 141
unmatched_if_statement (182)
    on left: 157 158, on right: 152
switch_statement (183)
    on left: 159 160, on right: 142
switch_cases (184)
    on left: 161 162, on right: 159 161
switch_case (185)
    on left: 163 164 165 166, on right: 161 162
matched_while_statement (186)
    on left: 167, on right: 143
unmatched_while_statement (187)
    on left: 168, on right: 153
matched_do_statement (188)
    on left: 169, on right: 144
unmatched_do_statement (189)
    on left: 170, on right: 154
matched_for_statement (190)
    on left: 171 172 173 174 175 176 177 178 179 180 181 182, on right:
    145
unmatched_for_statement (191)
    on left: 183 184 185 186 187 188 189 190 191 192 193 194, on right:
    155
break_statement (192)
    on left: 195, on right: 146
continue_statement (193)
    on left: 196, on right: 147
return_statement (194)
    on left: 197, on right: 148
parameter_list (195)
    on left: 198, on right: 59 60 92 93 94 95 96 97 98 99 100 101 102
    103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118
    119 120 121 122 123 124 125 126 127
parameters (196)
    on left: 199 200, on right: 198 199
parameter (197)
    on left: 201 202 203 204, on right: 199 200
annotation_block (198)
    on left: 205, on right: 44 49 51 53 59 64 66 72 74 78 80 82 84
    88 90 92 93 94 95 96 97 98 99 100 104 105 106 107 108 109 110 111
    112 116 117 118 119 120 121 122 123 124 128 129 130 201 203
annotations (199)
    on left: 206 207, on right: 205 206
qualified_name (200)
    on left: 208 209, on right: 210
annotation (201)
    on left: 210, on right: 206 207
argument_list (202)
    on left: 211 212, on right: 49 50 64 65 210
named_arguments (203)
    on left: 213 214, on right: 211 213
positional_arguments (204)
    on left: 215 216, on right: 212 215
named_argument (205)
    on left: 217, on right: 213 214
positional_argument (206)
    on left: 218, on right: 215 216
comma_expression (207)
    on left: 219 220, on right: 78 79 116 117 118 119 120 121 122 123
    124 125 126 127 128 129 130 131 150 156 157 158 159 160 163 164
    167 168 169 170 171 172 173 175 176 177 178 179 180 181 183 184
    185 187 188 189 190 191 192 193 219 235 279
assignment_expression (208)
    on left: 221 222 223 224 225 226 227 228 229 230 231 232 233 234,
    on right: 51 52 88 89 201 202 217 218 219 220 222 223 224 225 226
    227 228 229 230 231 232 233 235
conditional_expression (209)
    on left: 235, on right: 66 67 221 294
logical_or_expression (210)
    on left: 236 237, on right: 222 223 224 225 226 227 228 229 230
    231 232 233 234 235 236
logical_and_expression (211)
    on left: 238 239, on right: 236 237 238
inclusive_or_expression (212)
    on left: 240 241, on right: 238 239 240
exclusive_or_expression (213)
    on left: 242 243, on right: 240 241 242
and_expression (214)
    on left: 244 245, on right: 242 243 244
equality_expression (215)
    on left: 246 247 248, on right: 244 245 246 247
relational_expression (216)
    on left: 249 250 251 252 253, on right: 246 247 248 249 250 251
    252
shift_expression (217)
    on left: 254 255 256 257, on right: 249 250 251 252 253 254 255
    256
additive_expression (218)
    on left: 258 259 260, on right: 254 255 256 257 258 259
multiplicative_expression (219)
    on left: 261 262 263 264, on right: 258 259 260 261 262 263
unary_expression (220)
    on left: 265 266 267 268 269 270 271 272, on right: 261 262 263
    264 266 267 268 269 270 271 274 275
postfix_expression (221)
    on left: 273, on right: 265
let_expression (222)
    on left: 274 275, on right: 272
primary_expression (223)
    on left: 276 277 278 279, on right: 273
literal_expression (224)
    on left: 280 281 282 283, on right: 276
boolean_literal (225)
    on left: 284 285, on right: 280
integer_literal (226)
    on left: 286, on right: 281
floating_literal (227)
    on left: 287, on right: 282
string_literal (228)
    on left: 288 289, on right: 283 288
type (229)
    on left: 290 291 292, on right: 46 61 71 78 79 80 81 92 93 94 95
    96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
    113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128
    129 130 131 201 202 203 204
array_type (230)
    on left: 293 294 295, on right: 290 291 292
simple_type (231)
    on left: 296 297, on right: 277 278 293 294 295
relative_type (232)
    on left: 298 299 300 301 302 303 304 305 306 307 308 309 310 311
    312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327
    328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343
    344 345 346 347 348 349 350 351 352, on right: 296 297


State 0

    0 $accept: . mdl $end
    1 mdl: . mdl_version import_declarations module_declaration global_declarations
    2    | . mdl_version import_declarations global_declarations
    3    | . mdl_version module_declaration global_declarations
    4    | . mdl_version import_declarations module_declaration
    5    | . mdl_version import_declarations
    6    | . mdl_version module_declaration
    7    | . mdl_version global_declarations
    8    | . mdl_version
    9 mdl_version: . MDL FLOATING_LITERAL SEMICOLON

    MDL  shift, and go to state 1

    mdl          go to state 2
    mdl_version  go to state 3


State 1

    9 mdl_version: MDL . FLOATING_LITERAL SEMICOLON

    FLOATING_LITERAL  shift, and go to state 4


State 2

    0 $accept: mdl . $end

    $end  shift, and go to state 5


State 3

    1 mdl: mdl_version . import_declarations module_declaration global_declarations
    2    | mdl_version . import_declarations global_declarations
    3    | mdl_version . module_declaration global_declarations
    4    | mdl_version . import_declarations module_declaration
    5    | mdl_version . import_declarations
    6    | mdl_version . module_declaration
    7    | mdl_version . global_declarations
    8    | mdl_version .  [$end]
   10 import_declarations: . import_declarations import_declaration
   11                    | . import_declaration
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   16 import_declaration: . IMPORT qualified_imports SEMICOLON
   17                   | . EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   44 module_declaration: . MODULE annotation_block SEMICOLON
   45                   | . MODULE SEMICOLON
   55 global_declaration: . annotation_declaration
   56                   | . constant_declaration
   57                   | . type_declaration
   58                   | . function_declaration
   59 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   60                       | . ANNOTATION simple_name parameter_list SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   92 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   93                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   94                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   95                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
   97                     | . type annotation_block simple_name parameter_list SEMICOLON
   98                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
   99                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  100                     | . type simple_name parameter_list annotation_block SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM SEMICOLON
  102                     | . type simple_name parameter_list VARYING SEMICOLON
  103                     | . type simple_name parameter_list SEMICOLON
  104                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  105                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  106                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  107                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  109                     | . type annotation_block simple_name parameter_list compound_statement
  110                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  111                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  112                     | . type simple_name parameter_list annotation_block compound_statement
  113                     | . type simple_name parameter_list UNIFORM compound_statement
  114                     | . type simple_name parameter_list VARYING compound_statement
  115                     | . type simple_name parameter_list compound_statement
  116                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  122                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    IMPORT                      shift, and go to state 6
    MODULE                      shift, and go to state 7
    EXPORT                      shift, and go to state 8
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 8 (mdl)

    import_declarations      go to state 72
    global_declarations      go to state 73
    import_declaration       go to state 74
    qualified_name_infix     go to state 75
    simple_name              go to state 76
    module_declaration       go to state 77
    global_declaration       go to state 78
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 4

    9 mdl_version: MDL FLOATING_LITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 5

    0 $accept: mdl $end .

    $default  accept


State 6

   16 import_declaration: IMPORT . qualified_imports SEMICOLON
   18 qualified_imports: . qualified_imports COMMA qualified_import
   19                  | . qualified_import
   26 qualified_import: . qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | . qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | . qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | . qualified_name_infix qualified_import_suffix
   30                 | . qualified_import_prefix_relative_current qualified_name_infix
   31                 | . qualified_import_prefix_relative_parent qualified_name_infix
   32                 | . qualified_import_prefix_absolute qualified_name_infix
   33                 | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    DOT     shift, and go to state 91
    DOTDOT  shift, and go to state 92
    SCOPE   shift, and go to state 93
    IDENT   shift, and go to state 71

    qualified_imports                         go to state 94
    qualified_import                          go to state 95
    qualified_import_prefix_relative_current  go to state 96
    qualified_import_prefix_relative_parent   go to state 97
    qualified_import_prefix_absolute          go to state 98
    qualified_name_infix                      go to state 99
    simple_name                               go to state 76


State 7

   44 module_declaration: MODULE . annotation_block SEMICOLON
   45                   | MODULE . SEMICOLON
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 100
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 102


State 8

   17 import_declaration: EXPORT . USING qualified_import_prefix IMPORT unqualified_import SEMICOLON

    USING  shift, and go to state 103


State 9

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  291 type: UNIFORM . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    array_type            go to state 104
    simple_type           go to state 88
    relative_type         go to state 89


State 10

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  290 type: VARYING . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    array_type            go to state 105
    simple_type           go to state 88
    relative_type         go to state 89


State 11

  298 relative_type: BOOL .

    $default  reduce using rule 298 (relative_type)


State 12

  299 relative_type: BOOL2 .

    $default  reduce using rule 299 (relative_type)


State 13

  300 relative_type: BOOL3 .

    $default  reduce using rule 300 (relative_type)


State 14

  301 relative_type: BOOL4 .

    $default  reduce using rule 301 (relative_type)


State 15

  302 relative_type: INT .

    $default  reduce using rule 302 (relative_type)


State 16

  303 relative_type: INT2 .

    $default  reduce using rule 303 (relative_type)


State 17

  304 relative_type: INT3 .

    $default  reduce using rule 304 (relative_type)


State 18

  305 relative_type: INT4 .

    $default  reduce using rule 305 (relative_type)


State 19

  306 relative_type: FLOAT .

    $default  reduce using rule 306 (relative_type)


State 20

  307 relative_type: FLOAT2 .

    $default  reduce using rule 307 (relative_type)


State 21

  308 relative_type: FLOAT3 .

    $default  reduce using rule 308 (relative_type)


State 22

  309 relative_type: FLOAT4 .

    $default  reduce using rule 309 (relative_type)


State 23

  310 relative_type: FLOAT2X2 .

    $default  reduce using rule 310 (relative_type)


State 24

  311 relative_type: FLOAT2X3 .

    $default  reduce using rule 311 (relative_type)


State 25

  312 relative_type: FLOAT2X4 .

    $default  reduce using rule 312 (relative_type)


State 26

  313 relative_type: FLOAT3X2 .

    $default  reduce using rule 313 (relative_type)


State 27

  314 relative_type: FLOAT3X3 .

    $default  reduce using rule 314 (relative_type)


State 28

  315 relative_type: FLOAT3X4 .

    $default  reduce using rule 315 (relative_type)


State 29

  316 relative_type: FLOAT4X2 .

    $default  reduce using rule 316 (relative_type)


State 30

  317 relative_type: FLOAT4X3 .

    $default  reduce using rule 317 (relative_type)


State 31

  318 relative_type: FLOAT4X4 .

    $default  reduce using rule 318 (relative_type)


State 32

  319 relative_type: DOUBLE .

    $default  reduce using rule 319 (relative_type)


State 33

  320 relative_type: DOUBLE2 .

    $default  reduce using rule 320 (relative_type)


State 34

  321 relative_type: DOUBLE3 .

    $default  reduce using rule 321 (relative_type)


State 35

  322 relative_type: DOUBLE4 .

    $default  reduce using rule 322 (relative_type)


State 36

  323 relative_type: DOUBLE2X2 .

    $default  reduce using rule 323 (relative_type)


State 37

  324 relative_type: DOUBLE2X3 .

    $default  reduce using rule 324 (relative_type)


State 38

  325 relative_type: DOUBLE2X4 .

    $default  reduce using rule 325 (relative_type)


State 39

  326 relative_type: DOUBLE3X2 .

    $default  reduce using rule 326 (relative_type)


State 40

  327 relative_type: DOUBLE3X3 .

    $default  reduce using rule 327 (relative_type)


State 41

  328 relative_type: DOUBLE3X4 .

    $default  reduce using rule 328 (relative_type)


State 42

  329 relative_type: DOUBLE4X2 .

    $default  reduce using rule 329 (relative_type)


State 43

  330 relative_type: DOUBLE4X3 .

    $default  reduce using rule 330 (relative_type)


State 44

  331 relative_type: DOUBLE4X4 .

    $default  reduce using rule 331 (relative_type)


State 45

  332 relative_type: COLOR .

    $default  reduce using rule 332 (relative_type)


State 46

  333 relative_type: STRING .

    $default  reduce using rule 333 (relative_type)


State 47

  334 relative_type: SDF .

    $default  reduce using rule 334 (relative_type)


State 48

  335 relative_type: EDF .

    $default  reduce using rule 335 (relative_type)


State 49

  336 relative_type: VDF .

    $default  reduce using rule 336 (relative_type)


State 50

  337 relative_type: LIGHT_PROFILE .

    $default  reduce using rule 337 (relative_type)


State 51

  338 relative_type: MATERIAL .

    $default  reduce using rule 338 (relative_type)


State 52

  339 relative_type: MATERIAL_EMISSION .

    $default  reduce using rule 339 (relative_type)


State 53

  340 relative_type: MATERIAL_GEOMETRY .

    $default  reduce using rule 340 (relative_type)


State 54

  341 relative_type: MATERIAL_SURFACE .

    $default  reduce using rule 341 (relative_type)


State 55

  342 relative_type: MATERIAL_VOLUME .

    $default  reduce using rule 342 (relative_type)


State 56

  343 relative_type: TEXTURE_2D .

    $default  reduce using rule 343 (relative_type)


State 57

  344 relative_type: TEXTURE_3D .

    $default  reduce using rule 344 (relative_type)


State 58

  345 relative_type: TEXTURE_CUBE .

    $default  reduce using rule 345 (relative_type)


State 59

  346 relative_type: TEXTURE_PTEX .

    $default  reduce using rule 346 (relative_type)


State 60

  347 relative_type: BSDF_MEASUREMENT .

    $default  reduce using rule 347 (relative_type)


State 61

  348 relative_type: INTENSITY_MODE .

    $default  reduce using rule 348 (relative_type)


State 62

  349 relative_type: INTENSITY_RADIANT_EXITANCE .

    $default  reduce using rule 349 (relative_type)


State 63

  350 relative_type: INTENSITY_POWER .

    $default  reduce using rule 350 (relative_type)


State 64

  351 relative_type: HAIR_BSDF .

    $default  reduce using rule 351 (relative_type)


State 65

   43 simple_name: . IDENT
   59 annotation_declaration: ANNOTATION . simple_name parameter_list annotation_block SEMICOLON
   60                       | ANNOTATION . simple_name parameter_list SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 106


State 66

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   61 constant_declaration: CONST . type constant_declarators SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    type                  go to state 107
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 67

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   71 alias_type_declaration: TYPEDEF . type simple_name SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    type                  go to state 108
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 68

   43 simple_name: . IDENT
   72 struct_type_declaration: STRUCT . simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | STRUCT . simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | STRUCT . simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | STRUCT . simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 109


State 69

   43 simple_name: . IDENT
   82 enum_type_declaration: ENUM . simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | ENUM . simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | ENUM . simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | ENUM . simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 110


State 70

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  296 simple_type: SCOPE . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    relative_type         go to state 111


State 71

   43 simple_name: IDENT .

    $default  reduce using rule 43 (simple_name)


State 72

    1 mdl: mdl_version import_declarations . module_declaration global_declarations
    2    | mdl_version import_declarations . global_declarations
    4    | mdl_version import_declarations . module_declaration
    5    | mdl_version import_declarations .  [$end]
   10 import_declarations: import_declarations . import_declaration
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   16 import_declaration: . IMPORT qualified_imports SEMICOLON
   17                   | . EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   44 module_declaration: . MODULE annotation_block SEMICOLON
   45                   | . MODULE SEMICOLON
   55 global_declaration: . annotation_declaration
   56                   | . constant_declaration
   57                   | . type_declaration
   58                   | . function_declaration
   59 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   60                       | . ANNOTATION simple_name parameter_list SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   92 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   93                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   94                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   95                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
   97                     | . type annotation_block simple_name parameter_list SEMICOLON
   98                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
   99                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  100                     | . type simple_name parameter_list annotation_block SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM SEMICOLON
  102                     | . type simple_name parameter_list VARYING SEMICOLON
  103                     | . type simple_name parameter_list SEMICOLON
  104                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  105                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  106                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  107                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  109                     | . type annotation_block simple_name parameter_list compound_statement
  110                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  111                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  112                     | . type simple_name parameter_list annotation_block compound_statement
  113                     | . type simple_name parameter_list UNIFORM compound_statement
  114                     | . type simple_name parameter_list VARYING compound_statement
  115                     | . type simple_name parameter_list compound_statement
  116                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  122                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    IMPORT                      shift, and go to state 6
    MODULE                      shift, and go to state 7
    EXPORT                      shift, and go to state 8
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 5 (mdl)

    global_declarations      go to state 112
    import_declaration       go to state 113
    qualified_name_infix     go to state 75
    simple_name              go to state 76
    module_declaration       go to state 114
    global_declaration       go to state 78
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 73

    7 mdl: mdl_version global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . annotation_declaration
   56                   | . constant_declaration
   57                   | . type_declaration
   58                   | . function_declaration
   59 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   60                       | . ANNOTATION simple_name parameter_list SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   92 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   93                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   94                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   95                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
   97                     | . type annotation_block simple_name parameter_list SEMICOLON
   98                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
   99                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  100                     | . type simple_name parameter_list annotation_block SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM SEMICOLON
  102                     | . type simple_name parameter_list VARYING SEMICOLON
  103                     | . type simple_name parameter_list SEMICOLON
  104                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  105                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  106                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  107                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  109                     | . type annotation_block simple_name parameter_list compound_statement
  110                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  111                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  112                     | . type simple_name parameter_list annotation_block compound_statement
  113                     | . type simple_name parameter_list UNIFORM compound_statement
  114                     | . type simple_name parameter_list VARYING compound_statement
  115                     | . type simple_name parameter_list compound_statement
  116                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  122                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 7 (mdl)

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 115
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 74

   11 import_declarations: import_declaration .

    $default  reduce using rule 11 (import_declarations)


State 75

   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
  352 relative_type: qualified_name_infix .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, PLUS_OP, MINUS_OP, DIVIDE_OP, MODULO_OP, STAR, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]

    SCOPE  shift, and go to state 116

    $default  reduce using rule 352 (relative_type)


State 76

   41 qualified_name_infix: simple_name .

    $default  reduce using rule 41 (qualified_name_infix)


State 77

    3 mdl: mdl_version module_declaration . global_declarations
    6    | mdl_version module_declaration .  [$end]
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . annotation_declaration
   56                   | . constant_declaration
   57                   | . type_declaration
   58                   | . function_declaration
   59 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   60                       | . ANNOTATION simple_name parameter_list SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   92 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   93                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   94                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   95                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
   97                     | . type annotation_block simple_name parameter_list SEMICOLON
   98                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
   99                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  100                     | . type simple_name parameter_list annotation_block SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM SEMICOLON
  102                     | . type simple_name parameter_list VARYING SEMICOLON
  103                     | . type simple_name parameter_list SEMICOLON
  104                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  105                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  106                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  107                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  109                     | . type annotation_block simple_name parameter_list compound_statement
  110                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  111                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  112                     | . type simple_name parameter_list annotation_block compound_statement
  113                     | . type simple_name parameter_list UNIFORM compound_statement
  114                     | . type simple_name parameter_list VARYING compound_statement
  115                     | . type simple_name parameter_list compound_statement
  116                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  122                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 6 (mdl)

    global_declarations      go to state 117
    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 78
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 78

   13 global_declarations: global_declaration .

    $default  reduce using rule 13 (global_declarations)


State 79

   55 global_declaration: annotation_declaration .

    $default  reduce using rule 55 (global_declaration)


State 80

   56 global_declaration: constant_declaration .

    $default  reduce using rule 56 (global_declaration)


State 81

   57 global_declaration: type_declaration .

    $default  reduce using rule 57 (global_declaration)


State 82

   68 type_declaration: alias_type_declaration .

    $default  reduce using rule 68 (type_declaration)


State 83

   69 type_declaration: struct_type_declaration .

    $default  reduce using rule 69 (type_declaration)


State 84

   70 type_declaration: enum_type_declaration .

    $default  reduce using rule 70 (type_declaration)


State 85

   58 global_declaration: function_declaration .

    $default  reduce using rule 58 (global_declaration)


State 86

   43 simple_name: . IDENT
   92 function_declaration: type . annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   93                     | type . annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   94                     | type . annotation_block simple_name parameter_list annotation_block SEMICOLON
   95                     | type . annotation_block simple_name parameter_list UNIFORM SEMICOLON
   96                     | type . annotation_block simple_name parameter_list VARYING SEMICOLON
   97                     | type . annotation_block simple_name parameter_list SEMICOLON
   98                     | type . simple_name parameter_list UNIFORM annotation_block SEMICOLON
   99                     | type . simple_name parameter_list VARYING annotation_block SEMICOLON
  100                     | type . simple_name parameter_list annotation_block SEMICOLON
  101                     | type . simple_name parameter_list UNIFORM SEMICOLON
  102                     | type . simple_name parameter_list VARYING SEMICOLON
  103                     | type . simple_name parameter_list SEMICOLON
  104                     | type . annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  105                     | type . annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  106                     | type . annotation_block simple_name parameter_list annotation_block compound_statement
  107                     | type . annotation_block simple_name parameter_list UNIFORM compound_statement
  108                     | type . annotation_block simple_name parameter_list VARYING compound_statement
  109                     | type . annotation_block simple_name parameter_list compound_statement
  110                     | type . simple_name parameter_list UNIFORM annotation_block compound_statement
  111                     | type . simple_name parameter_list VARYING annotation_block compound_statement
  112                     | type . simple_name parameter_list annotation_block compound_statement
  113                     | type . simple_name parameter_list UNIFORM compound_statement
  114                     | type . simple_name parameter_list VARYING compound_statement
  115                     | type . simple_name parameter_list compound_statement
  116                     | type . annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | type . annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | type . annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | type . annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | type . annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | type . annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  122                     | type . simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type . simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | type . simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | type . simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | type . simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | type . simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | type . annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type . annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  130                     | type . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | type . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    IDENT                   shift, and go to state 71

    simple_name       go to state 118
    annotation_block  go to state 119


State 87

  292 type: array_type .

    $default  reduce using rule 292 (type)


State 88

  293 array_type: simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | simple_type . LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | simple_type . LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 120


State 89

  297 simple_type: relative_type .

    $default  reduce using rule 297 (simple_type)


State 90

    9 mdl_version: MDL FLOATING_LITERAL SEMICOLON .

    $default  reduce using rule 9 (mdl_version)


State 91

   36 qualified_import_prefix_relative_current: DOT . SCOPE

    SCOPE  shift, and go to state 121


State 92

   38 qualified_import_prefix_relative_parent: DOTDOT . SCOPE

    SCOPE  shift, and go to state 122


State 93

   39 qualified_import_prefix_absolute: SCOPE .

    $default  reduce using rule 39 (qualified_import_prefix_absolute)


State 94

   16 import_declaration: IMPORT qualified_imports . SEMICOLON
   18 qualified_imports: qualified_imports . COMMA qualified_import

    SEMICOLON  shift, and go to state 123
    COMMA      shift, and go to state 124


State 95

   19 qualified_imports: qualified_import .

    $default  reduce using rule 19 (qualified_imports)


State 96

   26 qualified_import: qualified_import_prefix_relative_current . qualified_name_infix qualified_import_suffix
   30                 | qualified_import_prefix_relative_current . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 125
    simple_name           go to state 76


State 97

   27 qualified_import: qualified_import_prefix_relative_parent . qualified_name_infix qualified_import_suffix
   31                 | qualified_import_prefix_relative_parent . qualified_name_infix
   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent . DOTDOT SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    DOTDOT  shift, and go to state 126
    IDENT   shift, and go to state 71

    qualified_name_infix  go to state 127
    simple_name           go to state 76


State 98

   28 qualified_import: qualified_import_prefix_absolute . qualified_name_infix qualified_import_suffix
   32                 | qualified_import_prefix_absolute . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 128
    simple_name           go to state 76


State 99

   29 qualified_import: qualified_name_infix . qualified_import_suffix
   33                 | qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 129

    $default  reduce using rule 33 (qualified_import)

    qualified_import_suffix  go to state 130


State 100

   45 module_declaration: MODULE SEMICOLON .

    $default  reduce using rule 45 (module_declaration)


State 101

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  205 annotation_block: ANNOTATION_BLOCK_BEGIN . annotations ANNOTATION_BLOCK_END
  206 annotations: . annotations COMMA annotation
  207            | . annotation
  208 qualified_name: . SCOPE qualified_name_infix
  209               | . qualified_name_infix
  210 annotation: . qualified_name argument_list

    SCOPE  shift, and go to state 131
    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 132
    simple_name           go to state 76
    annotations           go to state 133
    qualified_name        go to state 134
    annotation            go to state 135


State 102

   44 module_declaration: MODULE annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 136


State 103

   17 import_declaration: EXPORT USING . qualified_import_prefix IMPORT unqualified_import SEMICOLON
   20 qualified_import_prefix: . qualified_import_prefix_relative_current qualified_name_infix
   21                        | . qualified_import_prefix_relative_parent qualified_name_infix
   22                        | . qualified_import_prefix_absolute qualified_name_infix
   23                        | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    DOT     shift, and go to state 91
    DOTDOT  shift, and go to state 92
    SCOPE   shift, and go to state 93
    IDENT   shift, and go to state 71

    qualified_import_prefix                   go to state 137
    qualified_import_prefix_relative_current  go to state 138
    qualified_import_prefix_relative_parent   go to state 139
    qualified_import_prefix_absolute          go to state 140
    qualified_name_infix                      go to state 141
    simple_name                               go to state 76


State 104

  291 type: UNIFORM array_type .

    $default  reduce using rule 291 (type)


State 105

  290 type: VARYING array_type .

    $default  reduce using rule 290 (type)


State 106

   59 annotation_declaration: ANNOTATION simple_name . parameter_list annotation_block SEMICOLON
   60                       | ANNOTATION simple_name . parameter_list SEMICOLON
  198 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 142

    parameter_list  go to state 143


State 107

   43 simple_name: . IDENT
   61 constant_declaration: CONST type . constant_declarators SEMICOLON
   62 constant_declarators: . constant_declarators COMMA constant_declarator
   63                     | . constant_declarator
   64 constant_declarator: . simple_name argument_list annotation_block
   65                    | . simple_name argument_list
   66                    | . simple_name ASSIGN_OP conditional_expression annotation_block
   67                    | . simple_name ASSIGN_OP conditional_expression

    IDENT  shift, and go to state 71

    simple_name           go to state 144
    constant_declarators  go to state 145
    constant_declarator   go to state 146


State 108

   43 simple_name: . IDENT
   71 alias_type_declaration: TYPEDEF type . simple_name SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 147


State 109

   72 struct_type_declaration: STRUCT simple_name . annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | STRUCT simple_name . LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | STRUCT simple_name . annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | STRUCT simple_name . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 148

    annotation_block  go to state 149


State 110

   82 enum_type_declaration: ENUM simple_name . annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | ENUM simple_name . LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | ENUM simple_name . annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | ENUM simple_name . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 150

    annotation_block  go to state 151


State 111

  296 simple_type: SCOPE relative_type .

    $default  reduce using rule 296 (simple_type)


State 112

    2 mdl: mdl_version import_declarations global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . annotation_declaration
   56                   | . constant_declaration
   57                   | . type_declaration
   58                   | . function_declaration
   59 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   60                       | . ANNOTATION simple_name parameter_list SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   92 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   93                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   94                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   95                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
   97                     | . type annotation_block simple_name parameter_list SEMICOLON
   98                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
   99                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  100                     | . type simple_name parameter_list annotation_block SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM SEMICOLON
  102                     | . type simple_name parameter_list VARYING SEMICOLON
  103                     | . type simple_name parameter_list SEMICOLON
  104                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  105                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  106                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  107                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  109                     | . type annotation_block simple_name parameter_list compound_statement
  110                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  111                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  112                     | . type simple_name parameter_list annotation_block compound_statement
  113                     | . type simple_name parameter_list UNIFORM compound_statement
  114                     | . type simple_name parameter_list VARYING compound_statement
  115                     | . type simple_name parameter_list compound_statement
  116                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  122                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 2 (mdl)

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 115
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 113

   10 import_declarations: import_declarations import_declaration .

    $default  reduce using rule 10 (import_declarations)


State 114

    1 mdl: mdl_version import_declarations module_declaration . global_declarations
    4    | mdl_version import_declarations module_declaration .  [$end]
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . annotation_declaration
   56                   | . constant_declaration
   57                   | . type_declaration
   58                   | . function_declaration
   59 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   60                       | . ANNOTATION simple_name parameter_list SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   92 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   93                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   94                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   95                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
   97                     | . type annotation_block simple_name parameter_list SEMICOLON
   98                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
   99                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  100                     | . type simple_name parameter_list annotation_block SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM SEMICOLON
  102                     | . type simple_name parameter_list VARYING SEMICOLON
  103                     | . type simple_name parameter_list SEMICOLON
  104                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  105                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  106                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  107                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  109                     | . type annotation_block simple_name parameter_list compound_statement
  110                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  111                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  112                     | . type simple_name parameter_list annotation_block compound_statement
  113                     | . type simple_name parameter_list UNIFORM compound_statement
  114                     | . type simple_name parameter_list VARYING compound_statement
  115                     | . type simple_name parameter_list compound_statement
  116                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  122                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 4 (mdl)

    global_declarations      go to state 152
    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 78
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 115

   12 global_declarations: global_declarations global_declaration .

    $default  reduce using rule 12 (global_declarations)


State 116

   40 qualified_name_infix: qualified_name_infix SCOPE . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 153


State 117

    3 mdl: mdl_version module_declaration global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . annotation_declaration
   56                   | . constant_declaration
   57                   | . type_declaration
   58                   | . function_declaration
   59 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   60                       | . ANNOTATION simple_name parameter_list SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   92 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   93                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   94                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   95                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
   97                     | . type annotation_block simple_name parameter_list SEMICOLON
   98                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
   99                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  100                     | . type simple_name parameter_list annotation_block SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM SEMICOLON
  102                     | . type simple_name parameter_list VARYING SEMICOLON
  103                     | . type simple_name parameter_list SEMICOLON
  104                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  105                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  106                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  107                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  109                     | . type annotation_block simple_name parameter_list compound_statement
  110                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  111                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  112                     | . type simple_name parameter_list annotation_block compound_statement
  113                     | . type simple_name parameter_list UNIFORM compound_statement
  114                     | . type simple_name parameter_list VARYING compound_statement
  115                     | . type simple_name parameter_list compound_statement
  116                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  122                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 3 (mdl)

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 115
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 118

   98 function_declaration: type simple_name . parameter_list UNIFORM annotation_block SEMICOLON
   99                     | type simple_name . parameter_list VARYING annotation_block SEMICOLON
  100                     | type simple_name . parameter_list annotation_block SEMICOLON
  101                     | type simple_name . parameter_list UNIFORM SEMICOLON
  102                     | type simple_name . parameter_list VARYING SEMICOLON
  103                     | type simple_name . parameter_list SEMICOLON
  110                     | type simple_name . parameter_list UNIFORM annotation_block compound_statement
  111                     | type simple_name . parameter_list VARYING annotation_block compound_statement
  112                     | type simple_name . parameter_list annotation_block compound_statement
  113                     | type simple_name . parameter_list UNIFORM compound_statement
  114                     | type simple_name . parameter_list VARYING compound_statement
  115                     | type simple_name . parameter_list compound_statement
  122                     | type simple_name . parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type simple_name . parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | type simple_name . parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | type simple_name . parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | type simple_name . parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name . parameter_list ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | type simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  198 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 154

    parameter_list  go to state 155


State 119

   43 simple_name: . IDENT
   92 function_declaration: type annotation_block . simple_name parameter_list UNIFORM annotation_block SEMICOLON
   93                     | type annotation_block . simple_name parameter_list VARYING annotation_block SEMICOLON
   94                     | type annotation_block . simple_name parameter_list annotation_block SEMICOLON
   95                     | type annotation_block . simple_name parameter_list UNIFORM SEMICOLON
   96                     | type annotation_block . simple_name parameter_list VARYING SEMICOLON
   97                     | type annotation_block . simple_name parameter_list SEMICOLON
  104                     | type annotation_block . simple_name parameter_list UNIFORM annotation_block compound_statement
  105                     | type annotation_block . simple_name parameter_list VARYING annotation_block compound_statement
  106                     | type annotation_block . simple_name parameter_list annotation_block compound_statement
  107                     | type annotation_block . simple_name parameter_list UNIFORM compound_statement
  108                     | type annotation_block . simple_name parameter_list VARYING compound_statement
  109                     | type annotation_block . simple_name parameter_list compound_statement
  116                     | type annotation_block . simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | type annotation_block . simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | type annotation_block . simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | type annotation_block . simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block . simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block . simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | type annotation_block . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type annotation_block . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 156


State 120

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  293 array_type: simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  294           | simple_type LEFT_SQUARE_BRACKET . conditional_expression RIGHT_SQUARE_BRACKET
  295           | simple_type LEFT_SQUARE_BRACKET . LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    RIGHT_SQUARE_BRACKET        shift, and go to state 168
    LEFT_ANGLE_BRACKET          shift, and go to state 169
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    conditional_expression     go to state 172
    logical_or_expression      go to state 173
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 121

   36 qualified_import_prefix_relative_current: DOT SCOPE .

    $default  reduce using rule 36 (qualified_import_prefix_relative_current)


State 122

   38 qualified_import_prefix_relative_parent: DOTDOT SCOPE .

    $default  reduce using rule 38 (qualified_import_prefix_relative_parent)


State 123

   16 import_declaration: IMPORT qualified_imports SEMICOLON .

    $default  reduce using rule 16 (import_declaration)


State 124

   18 qualified_imports: qualified_imports COMMA . qualified_import
   26 qualified_import: . qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | . qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | . qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | . qualified_name_infix qualified_import_suffix
   30                 | . qualified_import_prefix_relative_current qualified_name_infix
   31                 | . qualified_import_prefix_relative_parent qualified_name_infix
   32                 | . qualified_import_prefix_absolute qualified_name_infix
   33                 | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    DOT     shift, and go to state 91
    DOTDOT  shift, and go to state 92
    SCOPE   shift, and go to state 93
    IDENT   shift, and go to state 71

    qualified_import                          go to state 193
    qualified_import_prefix_relative_current  go to state 96
    qualified_import_prefix_relative_parent   go to state 97
    qualified_import_prefix_absolute          go to state 98
    qualified_name_infix                      go to state 99
    simple_name                               go to state 76


State 125

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix . qualified_import_suffix
   30                 | qualified_import_prefix_relative_current qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 129

    $default  reduce using rule 30 (qualified_import)

    qualified_import_suffix  go to state 194


State 126

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT . SCOPE

    SCOPE  shift, and go to state 195


State 127

   27 qualified_import: qualified_import_prefix_relative_parent qualified_name_infix . qualified_import_suffix
   31                 | qualified_import_prefix_relative_parent qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 129

    $default  reduce using rule 31 (qualified_import)

    qualified_import_suffix  go to state 196


State 128

   28 qualified_import: qualified_import_prefix_absolute qualified_name_infix . qualified_import_suffix
   32                 | qualified_import_prefix_absolute qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 129

    $default  reduce using rule 32 (qualified_import)

    qualified_import_suffix  go to state 197


State 129

   40 qualified_name_infix: qualified_name_infix SCOPE . simple_name
   42 qualified_import_suffix: SCOPE . STAR
   43 simple_name: . IDENT

    STAR   shift, and go to state 198
    IDENT  shift, and go to state 71

    simple_name  go to state 153


State 130

   29 qualified_import: qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 29 (qualified_import)


State 131

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  208 qualified_name: SCOPE . qualified_name_infix

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 199
    simple_name           go to state 76


State 132

   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
  209 qualified_name: qualified_name_infix .  [LEFT_PARENTHESIS]

    SCOPE  shift, and go to state 116

    $default  reduce using rule 209 (qualified_name)


State 133

  205 annotation_block: ANNOTATION_BLOCK_BEGIN annotations . ANNOTATION_BLOCK_END
  206 annotations: annotations . COMMA annotation

    COMMA                 shift, and go to state 200
    ANNOTATION_BLOCK_END  shift, and go to state 201


State 134

  210 annotation: qualified_name . argument_list
  211 argument_list: . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  212              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 202

    argument_list  go to state 203


State 135

  207 annotations: annotation .

    $default  reduce using rule 207 (annotations)


State 136

   44 module_declaration: MODULE annotation_block SEMICOLON .

    $default  reduce using rule 44 (module_declaration)


State 137

   17 import_declaration: EXPORT USING qualified_import_prefix . IMPORT unqualified_import SEMICOLON

    IMPORT  shift, and go to state 204


State 138

   20 qualified_import_prefix: qualified_import_prefix_relative_current . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 205
    simple_name           go to state 76


State 139

   21 qualified_import_prefix: qualified_import_prefix_relative_parent . qualified_name_infix
   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent . DOTDOT SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    DOTDOT  shift, and go to state 126
    IDENT   shift, and go to state 71

    qualified_name_infix  go to state 206
    simple_name           go to state 76


State 140

   22 qualified_import_prefix: qualified_import_prefix_absolute . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 207
    simple_name           go to state 76


State 141

   23 qualified_import_prefix: qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 116

    $default  reduce using rule 23 (qualified_import_prefix)


State 142

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  198 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  199 parameters: . parameters COMMA parameter
  200           | . parameter
  201 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  202          | . type simple_name ASSIGN_OP assignment_expression
  203          | . type simple_name annotation_block
  204          | . type simple_name
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    parameters            go to state 208
    parameter             go to state 209
    type                  go to state 210
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 143

   59 annotation_declaration: ANNOTATION simple_name parameter_list . annotation_block SEMICOLON
   60                       | ANNOTATION simple_name parameter_list . SEMICOLON
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 211
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 212


State 144

   64 constant_declarator: simple_name . argument_list annotation_block
   65                    | simple_name . argument_list
   66                    | simple_name . ASSIGN_OP conditional_expression annotation_block
   67                    | simple_name . ASSIGN_OP conditional_expression
  211 argument_list: . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  212              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS

    ASSIGN_OP         shift, and go to state 213
    LEFT_PARENTHESIS  shift, and go to state 202

    argument_list  go to state 214


State 145

   61 constant_declaration: CONST type constant_declarators . SEMICOLON
   62 constant_declarators: constant_declarators . COMMA constant_declarator

    SEMICOLON  shift, and go to state 215
    COMMA      shift, and go to state 216


State 146

   63 constant_declarators: constant_declarator .

    $default  reduce using rule 63 (constant_declarators)


State 147

   71 alias_type_declaration: TYPEDEF type simple_name . SEMICOLON

    SEMICOLON  shift, and go to state 217


State 148

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   73 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE . struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   75                        | STRUCT simple_name LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   76 struct_field_declarators: . struct_field_declarators struct_field_declarator
   77                         | . struct_field_declarator
   78 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   79                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   80                        | . type simple_name annotation_block SEMICOLON
   81                        | . type simple_name SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 218
    IDENT                       shift, and go to state 71

    qualified_name_infix      go to state 75
    simple_name               go to state 76
    struct_field_declarators  go to state 219
    struct_field_declarator   go to state 220
    type                      go to state 221
    array_type                go to state 87
    simple_type               go to state 88
    relative_type             go to state 89


State 149

   72 struct_type_declaration: STRUCT simple_name annotation_block . LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | STRUCT simple_name annotation_block . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    LEFT_CURLY_BRACE  shift, and go to state 222


State 150

   43 simple_name: . IDENT
   83 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE . enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   85                      | ENUM simple_name LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   86 enum_value_declarators: . enum_value_declarators COMMA enum_value_declarator
   87                       | . enum_value_declarator
   88 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   89                      | . simple_name ASSIGN_OP assignment_expression
   90                      | . simple_name annotation_block
   91                      | . simple_name

    RIGHT_CURLY_BRACE  shift, and go to state 223
    IDENT              shift, and go to state 71

    simple_name             go to state 224
    enum_value_declarators  go to state 225
    enum_value_declarator   go to state 226


State 151

   82 enum_type_declaration: ENUM simple_name annotation_block . LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | ENUM simple_name annotation_block . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    LEFT_CURLY_BRACE  shift, and go to state 227


State 152

    1 mdl: mdl_version import_declarations module_declaration global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   55 global_declaration: . annotation_declaration
   56                   | . constant_declaration
   57                   | . type_declaration
   58                   | . function_declaration
   59 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   60                       | . ANNOTATION simple_name parameter_list SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   92 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   93                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   94                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   95                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
   97                     | . type annotation_block simple_name parameter_list SEMICOLON
   98                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
   99                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  100                     | . type simple_name parameter_list annotation_block SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM SEMICOLON
  102                     | . type simple_name parameter_list VARYING SEMICOLON
  103                     | . type simple_name parameter_list SEMICOLON
  104                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  105                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  106                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  107                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  109                     | . type annotation_block simple_name parameter_list compound_statement
  110                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  111                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  112                     | . type simple_name parameter_list annotation_block compound_statement
  113                     | . type simple_name parameter_list UNIFORM compound_statement
  114                     | . type simple_name parameter_list VARYING compound_statement
  115                     | . type simple_name parameter_list compound_statement
  116                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  122                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 1 (mdl)

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    global_declaration       go to state 115
    annotation_declaration   go to state 79
    constant_declaration     go to state 80
    type_declaration         go to state 81
    alias_type_declaration   go to state 82
    struct_type_declaration  go to state 83
    enum_type_declaration    go to state 84
    function_declaration     go to state 85
    type                     go to state 86
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 153

   40 qualified_name_infix: qualified_name_infix SCOPE simple_name .

    $default  reduce using rule 40 (qualified_name_infix)


State 154

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  130 function_declaration: type simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | type simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  198 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  199 parameters: . parameters COMMA parameter
  200           | . parameter
  201 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  202          | . type simple_name ASSIGN_OP assignment_expression
  203          | . type simple_name annotation_block
  204          | . type simple_name
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    STAR                        shift, and go to state 228
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    parameters            go to state 208
    parameter             go to state 209
    type                  go to state 210
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 155

   98 function_declaration: type simple_name parameter_list . UNIFORM annotation_block SEMICOLON
   99                     | type simple_name parameter_list . VARYING annotation_block SEMICOLON
  100                     | type simple_name parameter_list . annotation_block SEMICOLON
  101                     | type simple_name parameter_list . UNIFORM SEMICOLON
  102                     | type simple_name parameter_list . VARYING SEMICOLON
  103                     | type simple_name parameter_list . SEMICOLON
  110                     | type simple_name parameter_list . UNIFORM annotation_block compound_statement
  111                     | type simple_name parameter_list . VARYING annotation_block compound_statement
  112                     | type simple_name parameter_list . annotation_block compound_statement
  113                     | type simple_name parameter_list . UNIFORM compound_statement
  114                     | type simple_name parameter_list . VARYING compound_statement
  115                     | type simple_name parameter_list . compound_statement
  122                     | type simple_name parameter_list . UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type simple_name parameter_list . VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  124                     | type simple_name parameter_list . annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | type simple_name parameter_list . UNIFORM ASSIGN_OP comma_expression SEMICOLON
  126                     | type simple_name parameter_list . VARYING ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name parameter_list . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 229
    UNIFORM                 shift, and go to state 230
    VARYING                 shift, and go to state 231
    ASSIGN_OP               shift, and go to state 232
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 233

    compound_statement  go to state 234
    annotation_block    go to state 235


State 156

   92 function_declaration: type annotation_block simple_name . parameter_list UNIFORM annotation_block SEMICOLON
   93                     | type annotation_block simple_name . parameter_list VARYING annotation_block SEMICOLON
   94                     | type annotation_block simple_name . parameter_list annotation_block SEMICOLON
   95                     | type annotation_block simple_name . parameter_list UNIFORM SEMICOLON
   96                     | type annotation_block simple_name . parameter_list VARYING SEMICOLON
   97                     | type annotation_block simple_name . parameter_list SEMICOLON
  104                     | type annotation_block simple_name . parameter_list UNIFORM annotation_block compound_statement
  105                     | type annotation_block simple_name . parameter_list VARYING annotation_block compound_statement
  106                     | type annotation_block simple_name . parameter_list annotation_block compound_statement
  107                     | type annotation_block simple_name . parameter_list UNIFORM compound_statement
  108                     | type annotation_block simple_name . parameter_list VARYING compound_statement
  109                     | type annotation_block simple_name . parameter_list compound_statement
  116                     | type annotation_block simple_name . parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | type annotation_block simple_name . parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | type annotation_block simple_name . parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | type annotation_block simple_name . parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block simple_name . parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name . parameter_list ASSIGN_OP comma_expression SEMICOLON
  128                     | type annotation_block simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type annotation_block simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  198 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 236

    parameter_list  go to state 237


State 157

  289 string_literal: STRING_LITERAL .

    $default  reduce using rule 289 (string_literal)


State 158

  284 boolean_literal: TRUE .

    $default  reduce using rule 284 (boolean_literal)


State 159

  285 boolean_literal: FALSE .

    $default  reduce using rule 285 (boolean_literal)


State 160

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
  274 let_expression: LET . variable_declaration IN unary_expression
  275               | LET . LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    LEFT_CURLY_BRACE            shift, and go to state 238
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    variable_declaration  go to state 239
    type                  go to state 240
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 161

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  266                 | BITWISE_COMPLEMENT_OP . unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    unary_expression      go to state 241
    postfix_expression    go to state 184
    let_expression        go to state 185
    primary_expression    go to state 186
    literal_expression    go to state 187
    boolean_literal       go to state 188
    integer_literal       go to state 189
    floating_literal      go to state 190
    string_literal        go to state 191
    simple_type           go to state 192
    relative_type         go to state 89


State 162

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  267                 | LOGICAL_NOT_OP . unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    unary_expression      go to state 242
    postfix_expression    go to state 184
    let_expression        go to state 185
    primary_expression    go to state 186
    literal_expression    go to state 187
    boolean_literal       go to state 188
    integer_literal       go to state 189
    floating_literal      go to state 190
    string_literal        go to state 191
    simple_type           go to state 192
    relative_type         go to state 89


State 163

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  268                 | POSITIVE_OP . unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    unary_expression      go to state 243
    postfix_expression    go to state 184
    let_expression        go to state 185
    primary_expression    go to state 186
    literal_expression    go to state 187
    boolean_literal       go to state 188
    integer_literal       go to state 189
    floating_literal      go to state 190
    string_literal        go to state 191
    simple_type           go to state 192
    relative_type         go to state 89


State 164

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  269                 | NEGATIVE_OP . unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    unary_expression      go to state 244
    postfix_expression    go to state 184
    let_expression        go to state 185
    primary_expression    go to state 186
    literal_expression    go to state 187
    boolean_literal       go to state 188
    integer_literal       go to state 189
    floating_literal      go to state 190
    string_literal        go to state 191
    simple_type           go to state 192
    relative_type         go to state 89


State 165

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  270                 | PRE_INCREMENT_OP . unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    unary_expression      go to state 245
    postfix_expression    go to state 184
    let_expression        go to state 185
    primary_expression    go to state 186
    literal_expression    go to state 187
    boolean_literal       go to state 188
    integer_literal       go to state 189
    floating_literal      go to state 190
    string_literal        go to state 191
    simple_type           go to state 192
    relative_type         go to state 89


State 166

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  271                 | PRE_DECREMENT_OP . unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    unary_expression      go to state 246
    postfix_expression    go to state 184
    let_expression        go to state 185
    primary_expression    go to state 186
    literal_expression    go to state 187
    boolean_literal       go to state 188
    integer_literal       go to state 189
    floating_literal      go to state 190
    string_literal        go to state 191
    simple_type           go to state 192
    relative_type         go to state 89


State 167

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  279                   | LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 247
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 168

  293 array_type: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 293 (array_type)


State 169

   43 simple_name: . IDENT
  295 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET . simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET

    IDENT  shift, and go to state 71

    simple_name  go to state 251


State 170

  286 integer_literal: INTEGER_LITERAL .

    $default  reduce using rule 286 (integer_literal)


State 171

  287 floating_literal: FLOATING_LITERAL .

    $default  reduce using rule 287 (floating_literal)


State 172

  294 array_type: simple_type LEFT_SQUARE_BRACKET conditional_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 252


State 173

  235 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression

    CONDITIONAL_OP  shift, and go to state 253


State 174

  236 logical_or_expression: logical_and_expression . LOGICAL_OR_OP logical_or_expression
  237                      | logical_and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    LOGICAL_OR_OP  shift, and go to state 254

    $default  reduce using rule 237 (logical_or_expression)


State 175

  238 logical_and_expression: inclusive_or_expression . LOGICAL_AND_OP logical_and_expression
  239                       | inclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    LOGICAL_AND_OP  shift, and go to state 255

    $default  reduce using rule 239 (logical_and_expression)


State 176

  240 inclusive_or_expression: exclusive_or_expression . BITWISE_OR_OP inclusive_or_expression
  241                        | exclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    BITWISE_OR_OP  shift, and go to state 256

    $default  reduce using rule 241 (inclusive_or_expression)


State 177

  242 exclusive_or_expression: and_expression . BITWISE_XOR_OP exclusive_or_expression
  243                        | and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    BITWISE_XOR_OP  shift, and go to state 257

    $default  reduce using rule 243 (exclusive_or_expression)


State 178

  244 and_expression: equality_expression . BITWISE_AND_OP and_expression
  245               | equality_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    BITWISE_AND_OP  shift, and go to state 258

    $default  reduce using rule 245 (and_expression)


State 179

  246 equality_expression: relational_expression . EQUAL_OP equality_expression
  247                    | relational_expression . NOT_EQUAL_OP equality_expression
  248                    | relational_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    EQUAL_OP      shift, and go to state 259
    NOT_EQUAL_OP  shift, and go to state 260

    $default  reduce using rule 248 (equality_expression)


State 180

  249 relational_expression: shift_expression . LEFT_ANGLE_BRACKET relational_expression
  250                      | shift_expression . LESS_OR_EQUAL_OP relational_expression
  251                      | shift_expression . GREATER_OR_EQUAL_OP relational_expression
  252                      | shift_expression . RIGHT_ANGLE_BRACKET relational_expression
  253                      | shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]

    LESS_OR_EQUAL_OP     shift, and go to state 261
    GREATER_OR_EQUAL_OP  shift, and go to state 262
    LEFT_ANGLE_BRACKET   shift, and go to state 263
    RIGHT_ANGLE_BRACKET  shift, and go to state 264

    $default  reduce using rule 253 (relational_expression)


State 181

  254 shift_expression: additive_expression . SHIFT_LEFT_OP shift_expression
  255                 | additive_expression . SHIFT_RIGHT_OP shift_expression
  256                 | additive_expression . UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | additive_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]

    SHIFT_LEFT_OP            shift, and go to state 265
    SHIFT_RIGHT_OP           shift, and go to state 266
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 267

    $default  reduce using rule 257 (shift_expression)


State 182

  258 additive_expression: multiplicative_expression . PLUS_OP additive_expression
  259                    | multiplicative_expression . MINUS_OP additive_expression
  260                    | multiplicative_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]

    PLUS_OP   shift, and go to state 268
    MINUS_OP  shift, and go to state 269

    $default  reduce using rule 260 (additive_expression)


State 183

  261 multiplicative_expression: unary_expression . STAR multiplicative_expression
  262                          | unary_expression . DIVIDE_OP multiplicative_expression
  263                          | unary_expression . MODULO_OP multiplicative_expression
  264                          | unary_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, PLUS_OP, MINUS_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]

    DIVIDE_OP  shift, and go to state 270
    MODULO_OP  shift, and go to state 271
    STAR       shift, and go to state 272

    $default  reduce using rule 264 (multiplicative_expression)


State 184

  265 unary_expression: postfix_expression .

    $default  reduce using rule 265 (unary_expression)


State 185

  272 unary_expression: let_expression .

    $default  reduce using rule 272 (unary_expression)


State 186

  273 postfix_expression: primary_expression .

    $default  reduce using rule 273 (postfix_expression)


State 187

  276 primary_expression: literal_expression .

    $default  reduce using rule 276 (primary_expression)


State 188

  280 literal_expression: boolean_literal .

    $default  reduce using rule 280 (literal_expression)


State 189

  281 literal_expression: integer_literal .

    $default  reduce using rule 281 (literal_expression)


State 190

  282 literal_expression: floating_literal .

    $default  reduce using rule 282 (literal_expression)


State 191

  283 literal_expression: string_literal .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, PLUS_OP, MINUS_OP, DIVIDE_OP, MODULO_OP, STAR, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  288 string_literal: string_literal . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 273

    $default  reduce using rule 283 (literal_expression)


State 192

  277 primary_expression: simple_type .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, PLUS_OP, MINUS_OP, DIVIDE_OP, MODULO_OP, STAR, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  278                   | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 274

    $default  reduce using rule 277 (primary_expression)


State 193

   18 qualified_imports: qualified_imports COMMA qualified_import .

    $default  reduce using rule 18 (qualified_imports)


State 194

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 26 (qualified_import)


State 195

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE .

    $default  reduce using rule 37 (qualified_import_prefix_relative_parent)


State 196

   27 qualified_import: qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 27 (qualified_import)


State 197

   28 qualified_import: qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 28 (qualified_import)


State 198

   42 qualified_import_suffix: SCOPE STAR .

    $default  reduce using rule 42 (qualified_import_suffix)


State 199

   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
  208 qualified_name: SCOPE qualified_name_infix .  [LEFT_PARENTHESIS]

    SCOPE  shift, and go to state 116

    $default  reduce using rule 208 (qualified_name)


State 200

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  206 annotations: annotations COMMA . annotation
  208 qualified_name: . SCOPE qualified_name_infix
  209               | . qualified_name_infix
  210 annotation: . qualified_name argument_list

    SCOPE  shift, and go to state 131
    IDENT  shift, and go to state 71

    qualified_name_infix  go to state 132
    simple_name           go to state 76
    qualified_name        go to state 134
    annotation            go to state 275


State 201

  205 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END .

    $default  reduce using rule 205 (annotation_block)


State 202

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  211 argument_list: LEFT_PARENTHESIS . named_arguments RIGHT_PARENTHESIS
  212              | LEFT_PARENTHESIS . positional_arguments RIGHT_PARENTHESIS
  213 named_arguments: . named_arguments COMMA named_argument
  214                | . named_argument
  215 positional_arguments: . positional_arguments COMMA positional_argument
  216                     | . positional_argument
  217 named_argument: . simple_name COLON assignment_expression
  218 positional_argument: . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 276
    named_arguments            go to state 277
    positional_arguments       go to state 278
    named_argument             go to state 279
    positional_argument        go to state 280
    assignment_expression      go to state 281
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 203

  210 annotation: qualified_name argument_list .

    $default  reduce using rule 210 (annotation)


State 204

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT . unqualified_import SEMICOLON
   24 unqualified_import: . unqualified_import_simple_names
   25                   | . STAR
   34 unqualified_import_simple_names: . unqualified_import_simple_names COMMA simple_name
   35                                | . simple_name
   43 simple_name: . IDENT

    STAR   shift, and go to state 282
    IDENT  shift, and go to state 71

    unqualified_import               go to state 283
    unqualified_import_simple_names  go to state 284
    simple_name                      go to state 285


State 205

   20 qualified_import_prefix: qualified_import_prefix_relative_current qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 116

    $default  reduce using rule 20 (qualified_import_prefix)


State 206

   21 qualified_import_prefix: qualified_import_prefix_relative_parent qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 116

    $default  reduce using rule 21 (qualified_import_prefix)


State 207

   22 qualified_import_prefix: qualified_import_prefix_absolute qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 116

    $default  reduce using rule 22 (qualified_import_prefix)


State 208

  198 parameter_list: LEFT_PARENTHESIS parameters . RIGHT_PARENTHESIS
  199 parameters: parameters . COMMA parameter

    COMMA              shift, and go to state 286
    RIGHT_PARENTHESIS  shift, and go to state 287


State 209

  200 parameters: parameter .

    $default  reduce using rule 200 (parameters)


State 210

   43 simple_name: . IDENT
  201 parameter: type . simple_name ASSIGN_OP assignment_expression annotation_block
  202          | type . simple_name ASSIGN_OP assignment_expression
  203          | type . simple_name annotation_block
  204          | type . simple_name

    IDENT  shift, and go to state 71

    simple_name  go to state 288


State 211

   60 annotation_declaration: ANNOTATION simple_name parameter_list SEMICOLON .

    $default  reduce using rule 60 (annotation_declaration)


State 212

   59 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 289


State 213

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   66 constant_declarator: simple_name ASSIGN_OP . conditional_expression annotation_block
   67                    | simple_name ASSIGN_OP . conditional_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    conditional_expression     go to state 290
    logical_or_expression      go to state 173
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 214

   64 constant_declarator: simple_name argument_list . annotation_block
   65                    | simple_name argument_list .  [SEMICOLON, COMMA]
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 65 (constant_declarator)

    annotation_block  go to state 291


State 215

   61 constant_declaration: CONST type constant_declarators SEMICOLON .

    $default  reduce using rule 61 (constant_declaration)


State 216

   43 simple_name: . IDENT
   62 constant_declarators: constant_declarators COMMA . constant_declarator
   64 constant_declarator: . simple_name argument_list annotation_block
   65                    | . simple_name argument_list
   66                    | . simple_name ASSIGN_OP conditional_expression annotation_block
   67                    | . simple_name ASSIGN_OP conditional_expression

    IDENT  shift, and go to state 71

    simple_name          go to state 144
    constant_declarator  go to state 292


State 217

   71 alias_type_declaration: TYPEDEF type simple_name SEMICOLON .

    $default  reduce using rule 71 (alias_type_declaration)


State 218

   75 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 293


State 219

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   73 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators . RIGHT_CURLY_BRACE SEMICOLON
   76 struct_field_declarators: struct_field_declarators . struct_field_declarator
   78 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   79                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   80                        | . type simple_name annotation_block SEMICOLON
   81                        | . type simple_name SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 294
    IDENT                       shift, and go to state 71

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    struct_field_declarator  go to state 295
    type                     go to state 221
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 220

   77 struct_field_declarators: struct_field_declarator .

    $default  reduce using rule 77 (struct_field_declarators)


State 221

   43 simple_name: . IDENT
   78 struct_field_declarator: type . simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   79                        | type . simple_name ASSIGN_OP comma_expression SEMICOLON
   80                        | type . simple_name annotation_block SEMICOLON
   81                        | type . simple_name SEMICOLON

    IDENT  shift, and go to state 71

    simple_name  go to state 296


State 222

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   72 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE . struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | STRUCT simple_name annotation_block LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   76 struct_field_declarators: . struct_field_declarators struct_field_declarator
   77                         | . struct_field_declarator
   78 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   79                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   80                        | . type simple_name annotation_block SEMICOLON
   81                        | . type simple_name SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 297
    IDENT                       shift, and go to state 71

    qualified_name_infix      go to state 75
    simple_name               go to state 76
    struct_field_declarators  go to state 298
    struct_field_declarator   go to state 220
    type                      go to state 221
    array_type                go to state 87
    simple_type               go to state 88
    relative_type             go to state 89


State 223

   85 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 299


State 224

   88 enum_value_declarator: simple_name . ASSIGN_OP assignment_expression annotation_block
   89                      | simple_name . ASSIGN_OP assignment_expression
   90                      | simple_name . annotation_block
   91                      | simple_name .  [COMMA, RIGHT_CURLY_BRACE]
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 300
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 91 (enum_value_declarator)

    annotation_block  go to state 301


State 225

   83 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators . RIGHT_CURLY_BRACE SEMICOLON
   86 enum_value_declarators: enum_value_declarators . COMMA enum_value_declarator

    COMMA              shift, and go to state 302
    RIGHT_CURLY_BRACE  shift, and go to state 303


State 226

   87 enum_value_declarators: enum_value_declarator .

    $default  reduce using rule 87 (enum_value_declarators)


State 227

   43 simple_name: . IDENT
   82 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE . enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | ENUM simple_name annotation_block LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   86 enum_value_declarators: . enum_value_declarators COMMA enum_value_declarator
   87                       | . enum_value_declarator
   88 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   89                      | . simple_name ASSIGN_OP assignment_expression
   90                      | . simple_name annotation_block
   91                      | . simple_name

    RIGHT_CURLY_BRACE  shift, and go to state 304
    IDENT              shift, and go to state 71

    simple_name             go to state 224
    enum_value_declarators  go to state 305
    enum_value_declarator   go to state 226


State 228

  130 function_declaration: type simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | type simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 306


State 229

  103 function_declaration: type simple_name parameter_list SEMICOLON .

    $default  reduce using rule 103 (function_declaration)


State 230

   98 function_declaration: type simple_name parameter_list UNIFORM . annotation_block SEMICOLON
  101                     | type simple_name parameter_list UNIFORM . SEMICOLON
  110                     | type simple_name parameter_list UNIFORM . annotation_block compound_statement
  113                     | type simple_name parameter_list UNIFORM . compound_statement
  122                     | type simple_name parameter_list UNIFORM . annotation_block ASSIGN_OP comma_expression SEMICOLON
  125                     | type simple_name parameter_list UNIFORM . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 307
    ASSIGN_OP               shift, and go to state 308
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 233

    compound_statement  go to state 309
    annotation_block    go to state 310


State 231

   99 function_declaration: type simple_name parameter_list VARYING . annotation_block SEMICOLON
  102                     | type simple_name parameter_list VARYING . SEMICOLON
  111                     | type simple_name parameter_list VARYING . annotation_block compound_statement
  114                     | type simple_name parameter_list VARYING . compound_statement
  123                     | type simple_name parameter_list VARYING . annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | type simple_name parameter_list VARYING . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 311
    ASSIGN_OP               shift, and go to state 312
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 233

    compound_statement  go to state 313
    annotation_block    go to state 314


State 232

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  127 function_declaration: type simple_name parameter_list ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 315
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 233

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  132                   | LEFT_CURLY_BRACE . statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  133                   | LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
  134 statements: . statements statement
  135           | . statement
  136 statement: . matched_statement
  137          | . unmatched_statement
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    RIGHT_CURLY_BRACE           shift, and go to state 325
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    statements                 go to state 330
    statement                  go to state 331
    matched_statement          go to state 332
    unmatched_statement        go to state 333
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 234

  115 function_declaration: type simple_name parameter_list compound_statement .

    $default  reduce using rule 115 (function_declaration)


State 235

  100 function_declaration: type simple_name parameter_list annotation_block . SEMICOLON
  112                     | type simple_name parameter_list annotation_block . compound_statement
  124                     | type simple_name parameter_list annotation_block . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 348
    ASSIGN_OP         shift, and go to state 349
    LEFT_CURLY_BRACE  shift, and go to state 233

    compound_statement  go to state 350


State 236

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  128 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type annotation_block simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  198 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  199 parameters: . parameters COMMA parameter
  200           | . parameter
  201 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  202          | . type simple_name ASSIGN_OP assignment_expression
  203          | . type simple_name annotation_block
  204          | . type simple_name
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    STAR                        shift, and go to state 351
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    parameters            go to state 208
    parameter             go to state 209
    type                  go to state 210
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 237

   92 function_declaration: type annotation_block simple_name parameter_list . UNIFORM annotation_block SEMICOLON
   93                     | type annotation_block simple_name parameter_list . VARYING annotation_block SEMICOLON
   94                     | type annotation_block simple_name parameter_list . annotation_block SEMICOLON
   95                     | type annotation_block simple_name parameter_list . UNIFORM SEMICOLON
   96                     | type annotation_block simple_name parameter_list . VARYING SEMICOLON
   97                     | type annotation_block simple_name parameter_list . SEMICOLON
  104                     | type annotation_block simple_name parameter_list . UNIFORM annotation_block compound_statement
  105                     | type annotation_block simple_name parameter_list . VARYING annotation_block compound_statement
  106                     | type annotation_block simple_name parameter_list . annotation_block compound_statement
  107                     | type annotation_block simple_name parameter_list . UNIFORM compound_statement
  108                     | type annotation_block simple_name parameter_list . VARYING compound_statement
  109                     | type annotation_block simple_name parameter_list . compound_statement
  116                     | type annotation_block simple_name parameter_list . UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  117                     | type annotation_block simple_name parameter_list . VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  118                     | type annotation_block simple_name parameter_list . annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | type annotation_block simple_name parameter_list . UNIFORM ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block simple_name parameter_list . VARYING ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name parameter_list . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 352
    UNIFORM                 shift, and go to state 353
    VARYING                 shift, and go to state 354
    ASSIGN_OP               shift, and go to state 355
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 233

    compound_statement  go to state 356
    annotation_block    go to state 357


State 238

   14 variable_declarations: . variable_declarations variable_declaration
   15                      | . variable_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
  275 let_expression: LET LEFT_CURLY_BRACE . variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    variable_declarations  go to state 358
    qualified_name_infix   go to state 75
    simple_name            go to state 76
    variable_declaration   go to state 359
    type                   go to state 240
    array_type             go to state 87
    simple_type            go to state 88
    relative_type          go to state 89


State 239

  274 let_expression: LET variable_declaration . IN unary_expression

    IN  shift, and go to state 360


State 240

   43 simple_name: . IDENT
   46 variable_declaration: type . variable_declarators SEMICOLON
   47 variable_declarators: . variable_declarators COMMA variable_declarator
   48                     | . variable_declarator
   49 variable_declarator: . simple_name argument_list annotation_block
   50                    | . simple_name argument_list
   51                    | . simple_name ASSIGN_OP assignment_expression annotation_block
   52                    | . simple_name ASSIGN_OP assignment_expression
   53                    | . simple_name annotation_block
   54                    | . simple_name

    IDENT  shift, and go to state 71

    simple_name           go to state 361
    variable_declarators  go to state 362
    variable_declarator   go to state 363


State 241

  266 unary_expression: BITWISE_COMPLEMENT_OP unary_expression .

    $default  reduce using rule 266 (unary_expression)


State 242

  267 unary_expression: LOGICAL_NOT_OP unary_expression .

    $default  reduce using rule 267 (unary_expression)


State 243

  268 unary_expression: POSITIVE_OP unary_expression .

    $default  reduce using rule 268 (unary_expression)


State 244

  269 unary_expression: NEGATIVE_OP unary_expression .

    $default  reduce using rule 269 (unary_expression)


State 245

  270 unary_expression: PRE_INCREMENT_OP unary_expression .

    $default  reduce using rule 270 (unary_expression)


State 246

  271 unary_expression: PRE_DECREMENT_OP unary_expression .

    $default  reduce using rule 271 (unary_expression)


State 247

  279 primary_expression: LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 364


State 248

  219 comma_expression: assignment_expression . COMMA comma_expression
  220                 | assignment_expression .  [SEMICOLON, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS]

    COMMA  shift, and go to state 365

    $default  reduce using rule 220 (comma_expression)


State 249

  221 assignment_expression: conditional_expression .

    $default  reduce using rule 221 (assignment_expression)


State 250

  222 assignment_expression: logical_or_expression . ASSIGN_OP assignment_expression
  223                      | logical_or_expression . BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | logical_or_expression . BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | logical_or_expression . BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | logical_or_expression . SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | logical_or_expression . SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | logical_or_expression . UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | logical_or_expression . MULTIPLY_ASSIGN_OP assignment_expression
  230                      | logical_or_expression . DIVIDE_ASSIGN_OP assignment_expression
  231                      | logical_or_expression . MODULO_ASSIGN_OP assignment_expression
  232                      | logical_or_expression . PLUS_ASSIGN_OP assignment_expression
  233                      | logical_or_expression . MINUS_ASSIGN_OP assignment_expression
  234                      | logical_or_expression .  [SEMICOLON, COMMA, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  235 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression

    ASSIGN_OP                       shift, and go to state 366
    BITWISE_OR_ASSIGN_OP            shift, and go to state 367
    BITWISE_AND_ASSIGN_OP           shift, and go to state 368
    BITWISE_XOR_ASSIGN_OP           shift, and go to state 369
    SHIFT_LEFT_ASSIGN_OP            shift, and go to state 370
    SHIFT_RIGHT_ASSIGN_OP           shift, and go to state 371
    UNSIGNED_SHIFT_RIGHT_ASSIGN_OP  shift, and go to state 372
    MULTIPLY_ASSIGN_OP              shift, and go to state 373
    DIVIDE_ASSIGN_OP                shift, and go to state 374
    MODULO_ASSIGN_OP                shift, and go to state 375
    PLUS_ASSIGN_OP                  shift, and go to state 376
    MINUS_ASSIGN_OP                 shift, and go to state 377
    CONDITIONAL_OP                  shift, and go to state 253

    $default  reduce using rule 234 (assignment_expression)


State 251

  295 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name . RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 378


State 252

  294 array_type: simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 294 (array_type)


State 253

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  235                       | logical_or_expression CONDITIONAL_OP . comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 379
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 254

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  236                      | logical_and_expression LOGICAL_OR_OP . logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    logical_or_expression      go to state 380
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 255

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  238                       | inclusive_or_expression LOGICAL_AND_OP . logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    logical_and_expression     go to state 381
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 256

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  240                        | exclusive_or_expression BITWISE_OR_OP . inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    inclusive_or_expression    go to state 382
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 257

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  242                        | and_expression BITWISE_XOR_OP . exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    exclusive_or_expression    go to state 383
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 258

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  244               | equality_expression BITWISE_AND_OP . and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    and_expression             go to state 384
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 259

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  246                    | relational_expression EQUAL_OP . equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    equality_expression        go to state 385
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 260

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  247                    | relational_expression NOT_EQUAL_OP . equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    equality_expression        go to state 386
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 261

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  250                      | shift_expression LESS_OR_EQUAL_OP . relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    relational_expression      go to state 387
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 262

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  251                      | shift_expression GREATER_OR_EQUAL_OP . relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    relational_expression      go to state 388
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 263

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  249                      | shift_expression LEFT_ANGLE_BRACKET . relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    relational_expression      go to state 389
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 264

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  252                      | shift_expression RIGHT_ANGLE_BRACKET . relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    relational_expression      go to state 390
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 265

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  254                 | additive_expression SHIFT_LEFT_OP . shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    shift_expression           go to state 391
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 266

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  255                 | additive_expression SHIFT_RIGHT_OP . shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    shift_expression           go to state 392
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 267

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  256                 | additive_expression UNSIGNED_SHIFT_RIGHT_OP . shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    shift_expression           go to state 393
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 268

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  258                    | multiplicative_expression PLUS_OP . additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    additive_expression        go to state 394
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 269

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  259                    | multiplicative_expression MINUS_OP . additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    additive_expression        go to state 395
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 270

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  262                          | unary_expression DIVIDE_OP . multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    multiplicative_expression  go to state 396
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 271

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  263                          | unary_expression MODULO_OP . multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    multiplicative_expression  go to state 397
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 272

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  261                          | unary_expression STAR . multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    multiplicative_expression  go to state 398
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 273

  288 string_literal: string_literal STRING_LITERAL .

    $default  reduce using rule 288 (string_literal)


State 274

  278 primary_expression: simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 399


State 275

  206 annotations: annotations COMMA annotation .

    $default  reduce using rule 206 (annotations)


State 276

   41 qualified_name_infix: simple_name .  [COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, PLUS_OP, MINUS_OP, DIVIDE_OP, MODULO_OP, SCOPE, STAR, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  217 named_argument: simple_name . COLON assignment_expression

    COLON  shift, and go to state 400

    $default  reduce using rule 41 (qualified_name_infix)


State 277

  211 argument_list: LEFT_PARENTHESIS named_arguments . RIGHT_PARENTHESIS
  213 named_arguments: named_arguments . COMMA named_argument

    COMMA              shift, and go to state 401
    RIGHT_PARENTHESIS  shift, and go to state 402


State 278

  212 argument_list: LEFT_PARENTHESIS positional_arguments . RIGHT_PARENTHESIS
  215 positional_arguments: positional_arguments . COMMA positional_argument

    COMMA              shift, and go to state 403
    RIGHT_PARENTHESIS  shift, and go to state 404


State 279

  214 named_arguments: named_argument .

    $default  reduce using rule 214 (named_arguments)


State 280

  216 positional_arguments: positional_argument .

    $default  reduce using rule 216 (positional_arguments)


State 281

  218 positional_argument: assignment_expression .

    $default  reduce using rule 218 (positional_argument)


State 282

   25 unqualified_import: STAR .

    $default  reduce using rule 25 (unqualified_import)


State 283

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import . SEMICOLON

    SEMICOLON  shift, and go to state 405


State 284

   24 unqualified_import: unqualified_import_simple_names .  [SEMICOLON]
   34 unqualified_import_simple_names: unqualified_import_simple_names . COMMA simple_name

    COMMA  shift, and go to state 406

    $default  reduce using rule 24 (unqualified_import)


State 285

   35 unqualified_import_simple_names: simple_name .

    $default  reduce using rule 35 (unqualified_import_simple_names)


State 286

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  199 parameters: parameters COMMA . parameter
  201 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  202          | . type simple_name ASSIGN_OP assignment_expression
  203          | . type simple_name annotation_block
  204          | . type simple_name
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    parameter             go to state 407
    type                  go to state 210
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 287

  198 parameter_list: LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS .

    $default  reduce using rule 198 (parameter_list)


State 288

  201 parameter: type simple_name . ASSIGN_OP assignment_expression annotation_block
  202          | type simple_name . ASSIGN_OP assignment_expression
  203          | type simple_name . annotation_block
  204          | type simple_name .  [COMMA, RIGHT_PARENTHESIS]
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 408
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 204 (parameter)

    annotation_block  go to state 409


State 289

   59 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 59 (annotation_declaration)


State 290

   66 constant_declarator: simple_name ASSIGN_OP conditional_expression . annotation_block
   67                    | simple_name ASSIGN_OP conditional_expression .  [SEMICOLON, COMMA]
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 67 (constant_declarator)

    annotation_block  go to state 410


State 291

   64 constant_declarator: simple_name argument_list annotation_block .

    $default  reduce using rule 64 (constant_declarator)


State 292

   62 constant_declarators: constant_declarators COMMA constant_declarator .

    $default  reduce using rule 62 (constant_declarators)


State 293

   75 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 75 (struct_type_declaration)


State 294

   73 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 411


State 295

   76 struct_field_declarators: struct_field_declarators struct_field_declarator .

    $default  reduce using rule 76 (struct_field_declarators)


State 296

   78 struct_field_declarator: type simple_name . ASSIGN_OP comma_expression annotation_block SEMICOLON
   79                        | type simple_name . ASSIGN_OP comma_expression SEMICOLON
   80                        | type simple_name . annotation_block SEMICOLON
   81                        | type simple_name . SEMICOLON
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 412
    ASSIGN_OP               shift, and go to state 413
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 414


State 297

   74 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 415


State 298

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   72 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators . RIGHT_CURLY_BRACE SEMICOLON
   76 struct_field_declarators: struct_field_declarators . struct_field_declarator
   78 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   79                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   80                        | . type simple_name annotation_block SEMICOLON
   81                        | . type simple_name SEMICOLON
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 416
    IDENT                       shift, and go to state 71

    qualified_name_infix     go to state 75
    simple_name              go to state 76
    struct_field_declarator  go to state 295
    type                     go to state 221
    array_type               go to state 87
    simple_type              go to state 88
    relative_type            go to state 89


State 299

   85 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 85 (enum_type_declaration)


State 300

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   88 enum_value_declarator: simple_name ASSIGN_OP . assignment_expression annotation_block
   89                      | simple_name ASSIGN_OP . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 417
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 301

   90 enum_value_declarator: simple_name annotation_block .

    $default  reduce using rule 90 (enum_value_declarator)


State 302

   43 simple_name: . IDENT
   86 enum_value_declarators: enum_value_declarators COMMA . enum_value_declarator
   88 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   89                      | . simple_name ASSIGN_OP assignment_expression
   90                      | . simple_name annotation_block
   91                      | . simple_name

    IDENT  shift, and go to state 71

    simple_name            go to state 224
    enum_value_declarator  go to state 418


State 303

   83 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 419


State 304

   84 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 420


State 305

   82 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators . RIGHT_CURLY_BRACE SEMICOLON
   86 enum_value_declarators: enum_value_declarators . COMMA enum_value_declarator

    COMMA              shift, and go to state 302
    RIGHT_CURLY_BRACE  shift, and go to state 421


State 306

  130 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . annotation_block ASSIGN_OP comma_expression SEMICOLON
  131                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . ASSIGN_OP comma_expression SEMICOLON
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 422
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 423


State 307

  101 function_declaration: type simple_name parameter_list UNIFORM SEMICOLON .

    $default  reduce using rule 101 (function_declaration)


State 308

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  125 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 424
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 309

  113 function_declaration: type simple_name parameter_list UNIFORM compound_statement .

    $default  reduce using rule 113 (function_declaration)


State 310

   98 function_declaration: type simple_name parameter_list UNIFORM annotation_block . SEMICOLON
  110                     | type simple_name parameter_list UNIFORM annotation_block . compound_statement
  122                     | type simple_name parameter_list UNIFORM annotation_block . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 425
    ASSIGN_OP         shift, and go to state 426
    LEFT_CURLY_BRACE  shift, and go to state 233

    compound_statement  go to state 427


State 311

  102 function_declaration: type simple_name parameter_list VARYING SEMICOLON .

    $default  reduce using rule 102 (function_declaration)


State 312

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  126 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 428
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 313

  114 function_declaration: type simple_name parameter_list VARYING compound_statement .

    $default  reduce using rule 114 (function_declaration)


State 314

   99 function_declaration: type simple_name parameter_list VARYING annotation_block . SEMICOLON
  111                     | type simple_name parameter_list VARYING annotation_block . compound_statement
  123                     | type simple_name parameter_list VARYING annotation_block . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 429
    ASSIGN_OP         shift, and go to state 430
    LEFT_CURLY_BRACE  shift, and go to state 233

    compound_statement  go to state 431


State 315

  127 function_declaration: type simple_name parameter_list ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 432


State 316

  151 matched_statement: SEMICOLON .

    $default  reduce using rule 151 (matched_statement)


State 317

  156 matched_if_statement: IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 433


State 318

  159 switch_statement: SWITCH . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | SWITCH . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 434


State 319

  167 matched_while_statement: WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 435


State 320

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  169                     | DO . matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170                       | DO . unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 436
    unmatched_statement        go to state 437
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 321

  171 matched_for_statement: FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 438


State 322

  195 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 439


State 323

  196 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 440


State 324

  197 return_statement: RETURN . SEMICOLON

    SEMICOLON  shift, and go to state 441


State 325

  133 compound_statement: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 133 (compound_statement)


State 326

  149 matched_statement: variable_declaration .

    $default  reduce using rule 149 (matched_statement)


State 327

  140 matched_statement: constant_declaration .

    $default  reduce using rule 140 (matched_statement)


State 328

  139 matched_statement: type_declaration .

    $default  reduce using rule 139 (matched_statement)


State 329

  138 matched_statement: compound_statement .

    $default  reduce using rule 138 (matched_statement)


State 330

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  132                   | LEFT_CURLY_BRACE statements . RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  134 statements: statements . statement
  136 statement: . matched_statement
  137          | . unmatched_statement
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    RIGHT_CURLY_BRACE           shift, and go to state 442
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    statement                  go to state 443
    matched_statement          go to state 332
    unmatched_statement        go to state 333
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 331

  135 statements: statement .

    $default  reduce using rule 135 (statements)


State 332

  136 statement: matched_statement .

    $default  reduce using rule 136 (statement)


State 333

  137 statement: unmatched_statement .

    $default  reduce using rule 137 (statement)


State 334

  141 matched_statement: matched_if_statement .

    $default  reduce using rule 141 (matched_statement)


State 335

  152 unmatched_statement: unmatched_if_statement .

    $default  reduce using rule 152 (unmatched_statement)


State 336

  142 matched_statement: switch_statement .

    $default  reduce using rule 142 (matched_statement)


State 337

  143 matched_statement: matched_while_statement .

    $default  reduce using rule 143 (matched_statement)


State 338

  153 unmatched_statement: unmatched_while_statement .

    $default  reduce using rule 153 (unmatched_statement)


State 339

  144 matched_statement: matched_do_statement .

    $default  reduce using rule 144 (matched_statement)


State 340

  154 unmatched_statement: unmatched_do_statement .

    $default  reduce using rule 154 (unmatched_statement)


State 341

  145 matched_statement: matched_for_statement .

    $default  reduce using rule 145 (matched_statement)


State 342

  155 unmatched_statement: unmatched_for_statement .

    $default  reduce using rule 155 (unmatched_statement)


State 343

  146 matched_statement: break_statement .

    $default  reduce using rule 146 (matched_statement)


State 344

  147 matched_statement: continue_statement .

    $default  reduce using rule 147 (matched_statement)


State 345

  148 matched_statement: return_statement .

    $default  reduce using rule 148 (matched_statement)


State 346

  150 matched_statement: comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 444


State 347

  277 primary_expression: simple_type .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, PLUS_OP, MINUS_OP, DIVIDE_OP, MODULO_OP, STAR, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  278                   | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  293 array_type: simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | simple_type . LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | simple_type . LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 445

    $default  reduce using rule 277 (primary_expression)


State 348

  100 function_declaration: type simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 100 (function_declaration)


State 349

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  124 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 446
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 350

  112 function_declaration: type simple_name parameter_list annotation_block compound_statement .

    $default  reduce using rule 112 (function_declaration)


State 351

  128 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type annotation_block simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 447


State 352

   97 function_declaration: type annotation_block simple_name parameter_list SEMICOLON .

    $default  reduce using rule 97 (function_declaration)


State 353

   92 function_declaration: type annotation_block simple_name parameter_list UNIFORM . annotation_block SEMICOLON
   95                     | type annotation_block simple_name parameter_list UNIFORM . SEMICOLON
  104                     | type annotation_block simple_name parameter_list UNIFORM . annotation_block compound_statement
  107                     | type annotation_block simple_name parameter_list UNIFORM . compound_statement
  116                     | type annotation_block simple_name parameter_list UNIFORM . annotation_block ASSIGN_OP comma_expression SEMICOLON
  119                     | type annotation_block simple_name parameter_list UNIFORM . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 448
    ASSIGN_OP               shift, and go to state 449
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 233

    compound_statement  go to state 450
    annotation_block    go to state 451


State 354

   93 function_declaration: type annotation_block simple_name parameter_list VARYING . annotation_block SEMICOLON
   96                     | type annotation_block simple_name parameter_list VARYING . SEMICOLON
  105                     | type annotation_block simple_name parameter_list VARYING . annotation_block compound_statement
  108                     | type annotation_block simple_name parameter_list VARYING . compound_statement
  117                     | type annotation_block simple_name parameter_list VARYING . annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block simple_name parameter_list VARYING . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 452
    ASSIGN_OP               shift, and go to state 453
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_CURLY_BRACE        shift, and go to state 233

    compound_statement  go to state 454
    annotation_block    go to state 455


State 355

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  121 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 456
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 356

  109 function_declaration: type annotation_block simple_name parameter_list compound_statement .

    $default  reduce using rule 109 (function_declaration)


State 357

   94 function_declaration: type annotation_block simple_name parameter_list annotation_block . SEMICOLON
  106                     | type annotation_block simple_name parameter_list annotation_block . compound_statement
  118                     | type annotation_block simple_name parameter_list annotation_block . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 457
    ASSIGN_OP         shift, and go to state 458
    LEFT_CURLY_BRACE  shift, and go to state 233

    compound_statement  go to state 459


State 358

   14 variable_declarations: variable_declarations . variable_declaration
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
  275 let_expression: LET LEFT_CURLY_BRACE variable_declarations . RIGHT_CURLY_BRACE IN unary_expression
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 460
    IDENT                       shift, and go to state 71

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    variable_declaration  go to state 461
    type                  go to state 240
    array_type            go to state 87
    simple_type           go to state 88
    relative_type         go to state 89


State 359

   15 variable_declarations: variable_declaration .

    $default  reduce using rule 15 (variable_declarations)


State 360

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  274               | LET variable_declaration IN . unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    unary_expression      go to state 462
    postfix_expression    go to state 184
    let_expression        go to state 185
    primary_expression    go to state 186
    literal_expression    go to state 187
    boolean_literal       go to state 188
    integer_literal       go to state 189
    floating_literal      go to state 190
    string_literal        go to state 191
    simple_type           go to state 192
    relative_type         go to state 89


State 361

   49 variable_declarator: simple_name . argument_list annotation_block
   50                    | simple_name . argument_list
   51                    | simple_name . ASSIGN_OP assignment_expression annotation_block
   52                    | simple_name . ASSIGN_OP assignment_expression
   53                    | simple_name . annotation_block
   54                    | simple_name .  [SEMICOLON, COMMA]
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END
  211 argument_list: . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  212              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS

    ASSIGN_OP               shift, and go to state 463
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101
    LEFT_PARENTHESIS        shift, and go to state 202

    $default  reduce using rule 54 (variable_declarator)

    annotation_block  go to state 464
    argument_list     go to state 465


State 362

   46 variable_declaration: type variable_declarators . SEMICOLON
   47 variable_declarators: variable_declarators . COMMA variable_declarator

    SEMICOLON  shift, and go to state 466
    COMMA      shift, and go to state 467


State 363

   48 variable_declarators: variable_declarator .

    $default  reduce using rule 48 (variable_declarators)


State 364

  279 primary_expression: LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS .

    $default  reduce using rule 279 (primary_expression)


State 365

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  219 comma_expression: . assignment_expression COMMA comma_expression
  219                 | assignment_expression COMMA . comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 468
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 366

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  222                      | logical_or_expression ASSIGN_OP . assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 469
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 367

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  223                      | logical_or_expression BITWISE_OR_ASSIGN_OP . assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 470
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 368

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  224                      | logical_or_expression BITWISE_AND_ASSIGN_OP . assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 471
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 369

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  225                      | logical_or_expression BITWISE_XOR_ASSIGN_OP . assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 472
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 370

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  226                      | logical_or_expression SHIFT_LEFT_ASSIGN_OP . assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 473
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 371

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  227                      | logical_or_expression SHIFT_RIGHT_ASSIGN_OP . assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 474
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 372

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP . assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 475
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 373

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  229                      | logical_or_expression MULTIPLY_ASSIGN_OP . assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 476
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 374

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  230                      | logical_or_expression DIVIDE_ASSIGN_OP . assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 477
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 375

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  231                      | logical_or_expression MODULO_ASSIGN_OP . assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 478
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 376

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  232                      | logical_or_expression PLUS_ASSIGN_OP . assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 479
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 377

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  233                      | logical_or_expression MINUS_ASSIGN_OP . assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 480
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 378

  295 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 481


State 379

  235 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression . COLON assignment_expression

    COLON  shift, and go to state 482


State 380

  236 logical_or_expression: logical_and_expression LOGICAL_OR_OP logical_or_expression .

    $default  reduce using rule 236 (logical_or_expression)


State 381

  238 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP logical_and_expression .

    $default  reduce using rule 238 (logical_and_expression)


State 382

  240 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP inclusive_or_expression .

    $default  reduce using rule 240 (inclusive_or_expression)


State 383

  242 exclusive_or_expression: and_expression BITWISE_XOR_OP exclusive_or_expression .

    $default  reduce using rule 242 (exclusive_or_expression)


State 384

  244 and_expression: equality_expression BITWISE_AND_OP and_expression .

    $default  reduce using rule 244 (and_expression)


State 385

  246 equality_expression: relational_expression EQUAL_OP equality_expression .

    $default  reduce using rule 246 (equality_expression)


State 386

  247 equality_expression: relational_expression NOT_EQUAL_OP equality_expression .

    $default  reduce using rule 247 (equality_expression)


State 387

  250 relational_expression: shift_expression LESS_OR_EQUAL_OP relational_expression .

    $default  reduce using rule 250 (relational_expression)


State 388

  251 relational_expression: shift_expression GREATER_OR_EQUAL_OP relational_expression .

    $default  reduce using rule 251 (relational_expression)


State 389

  249 relational_expression: shift_expression LEFT_ANGLE_BRACKET relational_expression .

    $default  reduce using rule 249 (relational_expression)


State 390

  252 relational_expression: shift_expression RIGHT_ANGLE_BRACKET relational_expression .

    $default  reduce using rule 252 (relational_expression)


State 391

  254 shift_expression: additive_expression SHIFT_LEFT_OP shift_expression .

    $default  reduce using rule 254 (shift_expression)


State 392

  255 shift_expression: additive_expression SHIFT_RIGHT_OP shift_expression .

    $default  reduce using rule 255 (shift_expression)


State 393

  256 shift_expression: additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression .

    $default  reduce using rule 256 (shift_expression)


State 394

  258 additive_expression: multiplicative_expression PLUS_OP additive_expression .

    $default  reduce using rule 258 (additive_expression)


State 395

  259 additive_expression: multiplicative_expression MINUS_OP additive_expression .

    $default  reduce using rule 259 (additive_expression)


State 396

  262 multiplicative_expression: unary_expression DIVIDE_OP multiplicative_expression .

    $default  reduce using rule 262 (multiplicative_expression)


State 397

  263 multiplicative_expression: unary_expression MODULO_OP multiplicative_expression .

    $default  reduce using rule 263 (multiplicative_expression)


State 398

  261 multiplicative_expression: unary_expression STAR multiplicative_expression .

    $default  reduce using rule 261 (multiplicative_expression)


State 399

  278 primary_expression: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 278 (primary_expression)


State 400

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  217 named_argument: simple_name COLON . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 483
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 401

   43 simple_name: . IDENT
  213 named_arguments: named_arguments COMMA . named_argument
  217 named_argument: . simple_name COLON assignment_expression

    IDENT  shift, and go to state 71

    simple_name     go to state 484
    named_argument  go to state 485


State 402

  211 argument_list: LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 211 (argument_list)


State 403

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  215 positional_arguments: positional_arguments COMMA . positional_argument
  218 positional_argument: . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    positional_argument        go to state 486
    assignment_expression      go to state 281
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 404

  212 argument_list: LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 212 (argument_list)


State 405

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON .

    $default  reduce using rule 17 (import_declaration)


State 406

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA . simple_name
   43 simple_name: . IDENT

    IDENT  shift, and go to state 71

    simple_name  go to state 487


State 407

  199 parameters: parameters COMMA parameter .

    $default  reduce using rule 199 (parameters)


State 408

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  201 parameter: type simple_name ASSIGN_OP . assignment_expression annotation_block
  202          | type simple_name ASSIGN_OP . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 488
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 409

  203 parameter: type simple_name annotation_block .

    $default  reduce using rule 203 (parameter)


State 410

   66 constant_declarator: simple_name ASSIGN_OP conditional_expression annotation_block .

    $default  reduce using rule 66 (constant_declarator)


State 411

   73 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 73 (struct_type_declaration)


State 412

   81 struct_field_declarator: type simple_name SEMICOLON .

    $default  reduce using rule 81 (struct_field_declarator)


State 413

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   78 struct_field_declarator: type simple_name ASSIGN_OP . comma_expression annotation_block SEMICOLON
   79                        | type simple_name ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 489
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 414

   80 struct_field_declarator: type simple_name annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 490


State 415

   74 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 74 (struct_type_declaration)


State 416

   72 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 491


State 417

   88 enum_value_declarator: simple_name ASSIGN_OP assignment_expression . annotation_block
   89                      | simple_name ASSIGN_OP assignment_expression .  [COMMA, RIGHT_CURLY_BRACE]
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 89 (enum_value_declarator)

    annotation_block  go to state 492


State 418

   86 enum_value_declarators: enum_value_declarators COMMA enum_value_declarator .

    $default  reduce using rule 86 (enum_value_declarators)


State 419

   83 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 83 (enum_type_declaration)


State 420

   84 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 84 (enum_type_declaration)


State 421

   82 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 493


State 422

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  131 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 494
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 423

  130 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block . ASSIGN_OP comma_expression SEMICOLON

    ASSIGN_OP  shift, and go to state 495


State 424

  125 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 496


State 425

   98 function_declaration: type simple_name parameter_list UNIFORM annotation_block SEMICOLON .

    $default  reduce using rule 98 (function_declaration)


State 426

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  122 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 497
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 427

  110 function_declaration: type simple_name parameter_list UNIFORM annotation_block compound_statement .

    $default  reduce using rule 110 (function_declaration)


State 428

  126 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 498


State 429

   99 function_declaration: type simple_name parameter_list VARYING annotation_block SEMICOLON .

    $default  reduce using rule 99 (function_declaration)


State 430

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  123 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 499
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 431

  111 function_declaration: type simple_name parameter_list VARYING annotation_block compound_statement .

    $default  reduce using rule 111 (function_declaration)


State 432

  127 function_declaration: type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 127 (function_declaration)


State 433

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  156 matched_if_statement: IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS statement
  158                       | IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 500
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 434

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  159 switch_statement: SWITCH LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | SWITCH LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 501
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 435

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  167 matched_while_statement: WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 502
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 436

  169 matched_do_statement: DO matched_statement . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 503


State 437

  170 unmatched_do_statement: DO unmatched_statement . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 504


State 438

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
  171 matched_for_statement: FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 505
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 506
    comma_expression           go to state 507
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 439

  195 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 195 (break_statement)


State 440

  196 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 196 (continue_statement)


State 441

  197 return_statement: RETURN SEMICOLON .

    $default  reduce using rule 197 (return_statement)


State 442

  132 compound_statement: LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE .

    $default  reduce using rule 132 (compound_statement)


State 443

  134 statements: statements statement .

    $default  reduce using rule 134 (statements)


State 444

  150 matched_statement: comma_expression SEMICOLON .

    $default  reduce using rule 150 (matched_statement)


State 445

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  278                   | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  293 array_type: simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  294           | simple_type LEFT_SQUARE_BRACKET . conditional_expression RIGHT_SQUARE_BRACKET
  295           | simple_type LEFT_SQUARE_BRACKET . LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    RIGHT_SQUARE_BRACKET        shift, and go to state 508
    LEFT_ANGLE_BRACKET          shift, and go to state 169
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    conditional_expression     go to state 172
    logical_or_expression      go to state 173
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 446

  124 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 509


State 447

  128 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . ASSIGN_OP comma_expression SEMICOLON
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 510
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 511


State 448

   95 function_declaration: type annotation_block simple_name parameter_list UNIFORM SEMICOLON .

    $default  reduce using rule 95 (function_declaration)


State 449

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  119 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 512
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 450

  107 function_declaration: type annotation_block simple_name parameter_list UNIFORM compound_statement .

    $default  reduce using rule 107 (function_declaration)


State 451

   92 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block . SEMICOLON
  104                     | type annotation_block simple_name parameter_list UNIFORM annotation_block . compound_statement
  116                     | type annotation_block simple_name parameter_list UNIFORM annotation_block . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 513
    ASSIGN_OP         shift, and go to state 514
    LEFT_CURLY_BRACE  shift, and go to state 233

    compound_statement  go to state 515


State 452

   96 function_declaration: type annotation_block simple_name parameter_list VARYING SEMICOLON .

    $default  reduce using rule 96 (function_declaration)


State 453

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  120 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 516
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 454

  108 function_declaration: type annotation_block simple_name parameter_list VARYING compound_statement .

    $default  reduce using rule 108 (function_declaration)


State 455

   93 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block . SEMICOLON
  105                     | type annotation_block simple_name parameter_list VARYING annotation_block . compound_statement
  117                     | type annotation_block simple_name parameter_list VARYING annotation_block . ASSIGN_OP comma_expression SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 517
    ASSIGN_OP         shift, and go to state 518
    LEFT_CURLY_BRACE  shift, and go to state 233

    compound_statement  go to state 519


State 456

  121 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 520


State 457

   94 function_declaration: type annotation_block simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 94 (function_declaration)


State 458

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  118 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 521
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 459

  106 function_declaration: type annotation_block simple_name parameter_list annotation_block compound_statement .

    $default  reduce using rule 106 (function_declaration)


State 460

  275 let_expression: LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE . IN unary_expression

    IN  shift, and go to state 522


State 461

   14 variable_declarations: variable_declarations variable_declaration .

    $default  reduce using rule 14 (variable_declarations)


State 462

  274 let_expression: LET variable_declaration IN unary_expression .

    $default  reduce using rule 274 (let_expression)


State 463

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   51 variable_declarator: simple_name ASSIGN_OP . assignment_expression annotation_block
   52                    | simple_name ASSIGN_OP . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 523
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 464

   53 variable_declarator: simple_name annotation_block .

    $default  reduce using rule 53 (variable_declarator)


State 465

   49 variable_declarator: simple_name argument_list . annotation_block
   50                    | simple_name argument_list .  [SEMICOLON, COMMA]
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 50 (variable_declarator)

    annotation_block  go to state 524


State 466

   46 variable_declaration: type variable_declarators SEMICOLON .

    $default  reduce using rule 46 (variable_declaration)


State 467

   43 simple_name: . IDENT
   47 variable_declarators: variable_declarators COMMA . variable_declarator
   49 variable_declarator: . simple_name argument_list annotation_block
   50                    | . simple_name argument_list
   51                    | . simple_name ASSIGN_OP assignment_expression annotation_block
   52                    | . simple_name ASSIGN_OP assignment_expression
   53                    | . simple_name annotation_block
   54                    | . simple_name

    IDENT  shift, and go to state 71

    simple_name          go to state 361
    variable_declarator  go to state 525


State 468

  219 comma_expression: assignment_expression COMMA comma_expression .

    $default  reduce using rule 219 (comma_expression)


State 469

  222 assignment_expression: logical_or_expression ASSIGN_OP assignment_expression .

    $default  reduce using rule 222 (assignment_expression)


State 470

  223 assignment_expression: logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 223 (assignment_expression)


State 471

  224 assignment_expression: logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression .

    $default  reduce using rule 224 (assignment_expression)


State 472

  225 assignment_expression: logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 225 (assignment_expression)


State 473

  226 assignment_expression: logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 226 (assignment_expression)


State 474

  227 assignment_expression: logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 227 (assignment_expression)


State 475

  228 assignment_expression: logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 228 (assignment_expression)


State 476

  229 assignment_expression: logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression .

    $default  reduce using rule 229 (assignment_expression)


State 477

  230 assignment_expression: logical_or_expression DIVIDE_ASSIGN_OP assignment_expression .

    $default  reduce using rule 230 (assignment_expression)


State 478

  231 assignment_expression: logical_or_expression MODULO_ASSIGN_OP assignment_expression .

    $default  reduce using rule 231 (assignment_expression)


State 479

  232 assignment_expression: logical_or_expression PLUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 232 (assignment_expression)


State 480

  233 assignment_expression: logical_or_expression MINUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 233 (assignment_expression)


State 481

  295 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 295 (array_type)


State 482

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  235                       | logical_or_expression CONDITIONAL_OP comma_expression COLON . assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    assignment_expression      go to state 526
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 483

  217 named_argument: simple_name COLON assignment_expression .

    $default  reduce using rule 217 (named_argument)


State 484

  217 named_argument: simple_name . COLON assignment_expression

    COLON  shift, and go to state 400


State 485

  213 named_arguments: named_arguments COMMA named_argument .

    $default  reduce using rule 213 (named_arguments)


State 486

  215 positional_arguments: positional_arguments COMMA positional_argument .

    $default  reduce using rule 215 (positional_arguments)


State 487

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name .

    $default  reduce using rule 34 (unqualified_import_simple_names)


State 488

  201 parameter: type simple_name ASSIGN_OP assignment_expression . annotation_block
  202          | type simple_name ASSIGN_OP assignment_expression .  [COMMA, RIGHT_PARENTHESIS]
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 202 (parameter)

    annotation_block  go to state 527


State 489

   78 struct_field_declarator: type simple_name ASSIGN_OP comma_expression . annotation_block SEMICOLON
   79                        | type simple_name ASSIGN_OP comma_expression . SEMICOLON
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 528
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    annotation_block  go to state 529


State 490

   80 struct_field_declarator: type simple_name annotation_block SEMICOLON .

    $default  reduce using rule 80 (struct_field_declarator)


State 491

   72 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 72 (struct_type_declaration)


State 492

   88 enum_value_declarator: simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 88 (enum_value_declarator)


State 493

   82 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 82 (enum_type_declaration)


State 494

  131 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 530


State 495

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  130 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 531
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 496

  125 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 125 (function_declaration)


State 497

  122 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 532


State 498

  126 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 126 (function_declaration)


State 499

  123 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 533


State 500

  156 matched_if_statement: IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS statement
  158                       | IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 534


State 501

  159 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | SWITCH LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 535


State 502

  167 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 536


State 503

  169 matched_do_statement: DO matched_statement WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 537


State 504

  170 unmatched_do_statement: DO unmatched_statement WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 538


State 505

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  179 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON RIGHT_PARENTHESIS matched_statement
  191 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 539
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 540
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 506

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  171 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 541
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 542
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 507

  175 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 543


State 508

  278 primary_expression: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, PLUS_OP, MINUS_OP, DIVIDE_OP, MODULO_OP, STAR, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  293 array_type: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .  [IDENT]

    IDENT     reduce using rule 293 (array_type)
    $default  reduce using rule 278 (primary_expression)


State 509

  124 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 124 (function_declaration)


State 510

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  129 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 544
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 511

  128 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block . ASSIGN_OP comma_expression SEMICOLON

    ASSIGN_OP  shift, and go to state 545


State 512

  119 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 546


State 513

   92 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON .

    $default  reduce using rule 92 (function_declaration)


State 514

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  116 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 547
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 515

  104 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement .

    $default  reduce using rule 104 (function_declaration)


State 516

  120 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 548


State 517

   93 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON .

    $default  reduce using rule 93 (function_declaration)


State 518

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  117 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 549
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 519

  105 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block compound_statement .

    $default  reduce using rule 105 (function_declaration)


State 520

  121 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 121 (function_declaration)


State 521

  118 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 550


State 522

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  275               | LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN . unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix  go to state 75
    simple_name           go to state 76
    unary_expression      go to state 551
    postfix_expression    go to state 184
    let_expression        go to state 185
    primary_expression    go to state 186
    literal_expression    go to state 187
    boolean_literal       go to state 188
    integer_literal       go to state 189
    floating_literal      go to state 190
    string_literal        go to state 191
    simple_type           go to state 192
    relative_type         go to state 89


State 523

   51 variable_declarator: simple_name ASSIGN_OP assignment_expression . annotation_block
   52                    | simple_name ASSIGN_OP assignment_expression .  [SEMICOLON, COMMA]
  205 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 101

    $default  reduce using rule 52 (variable_declarator)

    annotation_block  go to state 552


State 524

   49 variable_declarator: simple_name argument_list annotation_block .

    $default  reduce using rule 49 (variable_declarator)


State 525

   47 variable_declarators: variable_declarators COMMA variable_declarator .

    $default  reduce using rule 47 (variable_declarators)


State 526

  235 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression .

    $default  reduce using rule 235 (conditional_expression)


State 527

  201 parameter: type simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 201 (parameter)


State 528

   79 struct_field_declarator: type simple_name ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 79 (struct_field_declarator)


State 529

   78 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 553


State 530

  131 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 131 (function_declaration)


State 531

  130 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 554


State 532

  122 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 122 (function_declaration)


State 533

  123 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 123 (function_declaration)


State 534

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  136 statement: . matched_statement
  137          | . unmatched_statement
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  156                     | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  157                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  158                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    statement                  go to state 555
    matched_statement          go to state 556
    unmatched_statement        go to state 333
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 535

  159 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 557


State 536

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  167                        | WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  168                          | WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 558
    unmatched_statement        go to state 559
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 537

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  169 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 560
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 538

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  170 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 561
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 539

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  181 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . RIGHT_PARENTHESIS matched_statement
  193 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    RIGHT_PARENTHESIS           shift, and go to state 562
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 563
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 540

  179 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  191 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 564


State 541

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  173 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . RIGHT_PARENTHESIS matched_statement
  185 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    RIGHT_PARENTHESIS           shift, and go to state 565
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 566
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 542

  171 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 567


State 543

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  175 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 568
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 569
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 544

  129 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 570


State 545

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  128 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP . comma_expression SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 571
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 546

  119 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 119 (function_declaration)


State 547

  116 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 572


State 548

  120 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 120 (function_declaration)


State 549

  117 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 573


State 550

  118 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 118 (function_declaration)


State 551

  275 let_expression: LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression .

    $default  reduce using rule 275 (let_expression)


State 552

   51 variable_declarator: simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 51 (variable_declarator)


State 553

   78 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON .

    $default  reduce using rule 78 (struct_field_declarator)


State 554

  130 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 130 (function_declaration)


State 555

  157 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement .

    $default  reduce using rule 157 (unmatched_if_statement)


State 556

  136 statement: matched_statement .  [STRING_LITERAL, SEMICOLON, UNIFORM, VARYING, BOOL, BOOL2, BOOL3, BOOL4, INT, INT2, INT3, INT4, FLOAT, FLOAT2, FLOAT3, FLOAT4, FLOAT2X2, FLOAT2X3, FLOAT2X4, FLOAT3X2, FLOAT3X3, FLOAT3X4, FLOAT4X2, FLOAT4X3, FLOAT4X4, DOUBLE, DOUBLE2, DOUBLE3, DOUBLE4, DOUBLE2X2, DOUBLE2X3, DOUBLE2X4, DOUBLE3X2, DOUBLE3X3, DOUBLE3X4, DOUBLE4X2, DOUBLE4X3, DOUBLE4X4, COLOR, STRING, SDF, EDF, VDF, LIGHT_PROFILE, MATERIAL, MATERIAL_EMISSION, MATERIAL_GEOMETRY, MATERIAL_SURFACE, MATERIAL_VOLUME, TEXTURE_2D, TEXTURE_3D, TEXTURE_CUBE, TEXTURE_PTEX, BSDF_MEASUREMENT, INTENSITY_MODE, INTENSITY_RADIANT_EXITANCE, INTENSITY_POWER, HAIR_BSDF, TRUE, FALSE, LET, CONST, TYPEDEF, STRUCT, ENUM, IF, SWITCH, CASE, DEFAULT, WHILE, DO, FOR, BREAK, CONTINUE, RETURN, BITWISE_COMPLEMENT_OP, LOGICAL_NOT_OP, POSITIVE_OP, NEGATIVE_OP, PRE_INCREMENT_OP, PRE_DECREMENT_OP, SCOPE, LEFT_PARENTHESIS, LEFT_CURLY_BRACE, RIGHT_CURLY_BRACE, IDENT, INTEGER_LITERAL, FLOATING_LITERAL]
  156 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement . ELSE matched_statement
  158 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement . ELSE unmatched_statement

    ELSE  shift, and go to state 574

    $default  reduce using rule 136 (statement)


State 557

  159 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . switch_cases RIGHT_CURLY_BRACE
  160                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
  161 switch_cases: . switch_cases switch_case
  162             | . switch_case
  163 switch_case: . CASE comma_expression COLON statement
  164            | . CASE comma_expression COLON
  165            | . DEFAULT COLON statement
  166            | . DEFAULT COLON

    CASE               shift, and go to state 575
    DEFAULT            shift, and go to state 576
    RIGHT_CURLY_BRACE  shift, and go to state 577

    switch_cases  go to state 578
    switch_case   go to state 579


State 558

  167 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 167 (matched_while_statement)


State 559

  168 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 168 (unmatched_while_statement)


State 560

  169 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 580


State 561

  170 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 581


State 562

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS . matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 582
    unmatched_statement        go to state 583
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 563

  181 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  193 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 584


State 564

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  179 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  191 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    RIGHT_PARENTHESIS           shift, and go to state 585
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 586
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 565

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  174                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS . matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  186                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 587
    unmatched_statement        go to state 588
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 566

  173 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  185 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 589


State 567

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  171 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    RIGHT_PARENTHESIS           shift, and go to state 590
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 591
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 568

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  177 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . RIGHT_PARENTHESIS matched_statement
  189 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    RIGHT_PARENTHESIS           shift, and go to state 592
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 593
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 569

  175 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 594


State 570

  129 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 129 (function_declaration)


State 571

  128 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 595


State 572

  116 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 116 (function_declaration)


State 573

  117 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 117 (function_declaration)


State 574

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  156                     | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE . matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  158                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE . unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 596
    unmatched_statement        go to state 597
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 575

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  163 switch_case: CASE . comma_expression COLON statement
  164            | CASE . comma_expression COLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 598
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 576

  165 switch_case: DEFAULT . COLON statement
  166            | DEFAULT . COLON

    COLON  shift, and go to state 599


State 577

  160 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 160 (switch_statement)


State 578

  159 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases . RIGHT_CURLY_BRACE
  161 switch_cases: switch_cases . switch_case
  163 switch_case: . CASE comma_expression COLON statement
  164            | . CASE comma_expression COLON
  165            | . DEFAULT COLON statement
  166            | . DEFAULT COLON

    CASE               shift, and go to state 575
    DEFAULT            shift, and go to state 576
    RIGHT_CURLY_BRACE  shift, and go to state 600

    switch_case  go to state 601


State 579

  162 switch_cases: switch_case .

    $default  reduce using rule 162 (switch_cases)


State 580

  169 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 602


State 581

  170 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 603


State 582

  182 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 182 (matched_for_statement)


State 583

  194 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 194 (unmatched_for_statement)


State 584

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 604
    unmatched_statement        go to state 605
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 585

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 606
    unmatched_statement        go to state 607
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 586

  179 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  191 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 608


State 587

  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 174 (matched_for_statement)


State 588

  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 186 (unmatched_for_statement)


State 589

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  173                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  185                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 609
    unmatched_statement        go to state 610
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 590

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  172                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  184                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 611
    unmatched_statement        go to state 612
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 591

  171 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 613


State 592

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS . matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 614
    unmatched_statement        go to state 615
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 593

  177 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  189 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 616


State 594

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
  175 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    RIGHT_PARENTHESIS           shift, and go to state 617
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    comma_expression           go to state 618
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    simple_type                go to state 192
    relative_type              go to state 89


State 595

  128 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 128 (function_declaration)


State 596

  156 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement .

    $default  reduce using rule 156 (matched_if_statement)


State 597

  158 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement .

    $default  reduce using rule 158 (unmatched_if_statement)


State 598

  163 switch_case: CASE comma_expression . COLON statement
  164            | CASE comma_expression . COLON

    COLON  shift, and go to state 619


State 599

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  136 statement: . matched_statement
  137          | . unmatched_statement
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  165 switch_case: DEFAULT COLON . statement
  166            | DEFAULT COLON .  [CASE, DEFAULT, RIGHT_CURLY_BRACE]
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    $default  reduce using rule 166 (switch_case)

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    statement                  go to state 620
    matched_statement          go to state 332
    unmatched_statement        go to state 333
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 600

  159 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE .

    $default  reduce using rule 159 (switch_statement)


State 601

  161 switch_cases: switch_cases switch_case .

    $default  reduce using rule 161 (switch_cases)


State 602

  169 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON .

    $default  reduce using rule 169 (matched_do_statement)


State 603

  170 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON .

    $default  reduce using rule 170 (unmatched_do_statement)


State 604

  181 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 181 (matched_for_statement)


State 605

  193 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 193 (unmatched_for_statement)


State 606

  180 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 180 (matched_for_statement)


State 607

  192 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 192 (unmatched_for_statement)


State 608

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 621
    unmatched_statement        go to state 622
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 609

  173 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 173 (matched_for_statement)


State 610

  185 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 185 (unmatched_for_statement)


State 611

  172 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 172 (matched_for_statement)


State 612

  184 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 184 (unmatched_for_statement)


State 613

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  171                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  183                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 623
    unmatched_statement        go to state 624
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 614

  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 178 (matched_for_statement)


State 615

  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 190 (unmatched_for_statement)


State 616

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 625
    unmatched_statement        go to state 626
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 617

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 627
    unmatched_statement        go to state 628
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 618

  175 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  187 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 629


State 619

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  136 statement: . matched_statement
  137          | . unmatched_statement
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  163 switch_case: CASE comma_expression COLON . statement
  164            | CASE comma_expression COLON .  [CASE, DEFAULT, RIGHT_CURLY_BRACE]
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    $default  reduce using rule 164 (switch_case)

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    statement                  go to state 630
    matched_statement          go to state 332
    unmatched_statement        go to state 333
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 620

  165 switch_case: DEFAULT COLON statement .

    $default  reduce using rule 165 (switch_case)


State 621

  179 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 179 (matched_for_statement)


State 622

  191 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 191 (unmatched_for_statement)


State 623

  171 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 171 (matched_for_statement)


State 624

  183 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 183 (unmatched_for_statement)


State 625

  177 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 177 (matched_for_statement)


State 626

  189 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 189 (unmatched_for_statement)


State 627

  176 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 176 (matched_for_statement)


State 628

  188 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 188 (unmatched_for_statement)


State 629

   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
   43 simple_name: . IDENT
   46 variable_declaration: . type variable_declarators SEMICOLON
   61 constant_declaration: . CONST type constant_declarators SEMICOLON
   68 type_declaration: . alias_type_declaration
   69                 | . struct_type_declaration
   70                 | . enum_type_declaration
   71 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   72 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   73                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   74                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   75                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   82 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   83                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   84                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  132 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  133                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  138 matched_statement: . compound_statement
  139                  | . type_declaration
  140                  | . constant_declaration
  141                  | . matched_if_statement
  142                  | . switch_statement
  143                  | . matched_while_statement
  144                  | . matched_do_statement
  145                  | . matched_for_statement
  146                  | . break_statement
  147                  | . continue_statement
  148                  | . return_statement
  149                  | . variable_declaration
  150                  | . comma_expression SEMICOLON
  151                  | . SEMICOLON
  152 unmatched_statement: . unmatched_if_statement
  153                    | . unmatched_while_statement
  154                    | . unmatched_do_statement
  155                    | . unmatched_for_statement
  156 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  157 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  158                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  159 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  160                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  167 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  168 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  169 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  170 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  171 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  172                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  173                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  176                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  183 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  184                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  185                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195 break_statement: . BREAK SEMICOLON
  196 continue_statement: . CONTINUE SEMICOLON
  197 return_statement: . RETURN SEMICOLON
  219 comma_expression: . assignment_expression COMMA comma_expression
  220                 | . assignment_expression
  221 assignment_expression: . conditional_expression
  222                      | . logical_or_expression ASSIGN_OP assignment_expression
  223                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  224                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  225                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  226                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  227                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  228                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  229                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression
  235 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  236 logical_or_expression: . logical_and_expression LOGICAL_OR_OP logical_or_expression
  237                      | . logical_and_expression
  238 logical_and_expression: . inclusive_or_expression LOGICAL_AND_OP logical_and_expression
  239                       | . inclusive_or_expression
  240 inclusive_or_expression: . exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
  241                        | . exclusive_or_expression
  242 exclusive_or_expression: . and_expression BITWISE_XOR_OP exclusive_or_expression
  243                        | . and_expression
  244 and_expression: . equality_expression BITWISE_AND_OP and_expression
  245               | . equality_expression
  246 equality_expression: . relational_expression EQUAL_OP equality_expression
  247                    | . relational_expression NOT_EQUAL_OP equality_expression
  248                    | . relational_expression
  249 relational_expression: . shift_expression LEFT_ANGLE_BRACKET relational_expression
  250                      | . shift_expression LESS_OR_EQUAL_OP relational_expression
  251                      | . shift_expression GREATER_OR_EQUAL_OP relational_expression
  252                      | . shift_expression RIGHT_ANGLE_BRACKET relational_expression
  253                      | . shift_expression
  254 shift_expression: . additive_expression SHIFT_LEFT_OP shift_expression
  255                 | . additive_expression SHIFT_RIGHT_OP shift_expression
  256                 | . additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
  257                 | . additive_expression
  258 additive_expression: . multiplicative_expression PLUS_OP additive_expression
  259                    | . multiplicative_expression MINUS_OP additive_expression
  260                    | . multiplicative_expression
  261 multiplicative_expression: . unary_expression STAR multiplicative_expression
  262                          | . unary_expression DIVIDE_OP multiplicative_expression
  263                          | . unary_expression MODULO_OP multiplicative_expression
  264                          | . unary_expression
  265 unary_expression: . postfix_expression
  266                 | . BITWISE_COMPLEMENT_OP unary_expression
  267                 | . LOGICAL_NOT_OP unary_expression
  268                 | . POSITIVE_OP unary_expression
  269                 | . NEGATIVE_OP unary_expression
  270                 | . PRE_INCREMENT_OP unary_expression
  271                 | . PRE_DECREMENT_OP unary_expression
  272                 | . let_expression
  273 postfix_expression: . primary_expression
  274 let_expression: . LET variable_declaration IN unary_expression
  275               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  276 primary_expression: . literal_expression
  277                   | . simple_type
  278                   | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  279                   | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  280 literal_expression: . boolean_literal
  281                   | . integer_literal
  282                   | . floating_literal
  283                   | . string_literal
  284 boolean_literal: . TRUE
  285                | . FALSE
  286 integer_literal: . INTEGER_LITERAL
  287 floating_literal: . FLOATING_LITERAL
  288 string_literal: . string_literal STRING_LITERAL
  289               | . STRING_LITERAL
  290 type: . VARYING array_type
  291     | . UNIFORM array_type
  292     | . array_type
  293 array_type: . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  294           | . simple_type LEFT_SQUARE_BRACKET conditional_expression RIGHT_SQUARE_BRACKET
  295           | . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  296 simple_type: . SCOPE relative_type
  297            | . relative_type
  298 relative_type: . BOOL
  299              | . BOOL2
  300              | . BOOL3
  301              | . BOOL4
  302              | . INT
  303              | . INT2
  304              | . INT3
  305              | . INT4
  306              | . FLOAT
  307              | . FLOAT2
  308              | . FLOAT3
  309              | . FLOAT4
  310              | . FLOAT2X2
  311              | . FLOAT2X3
  312              | . FLOAT2X4
  313              | . FLOAT3X2
  314              | . FLOAT3X3
  315              | . FLOAT3X4
  316              | . FLOAT4X2
  317              | . FLOAT4X3
  318              | . FLOAT4X4
  319              | . DOUBLE
  320              | . DOUBLE2
  321              | . DOUBLE3
  322              | . DOUBLE4
  323              | . DOUBLE2X2
  324              | . DOUBLE2X3
  325              | . DOUBLE2X4
  326              | . DOUBLE3X2
  327              | . DOUBLE3X3
  328              | . DOUBLE3X4
  329              | . DOUBLE4X2
  330              | . DOUBLE4X3
  331              | . DOUBLE4X4
  332              | . COLOR
  333              | . STRING
  334              | . SDF
  335              | . EDF
  336              | . VDF
  337              | . LIGHT_PROFILE
  338              | . MATERIAL
  339              | . MATERIAL_EMISSION
  340              | . MATERIAL_GEOMETRY
  341              | . MATERIAL_SURFACE
  342              | . MATERIAL_VOLUME
  343              | . TEXTURE_2D
  344              | . TEXTURE_3D
  345              | . TEXTURE_CUBE
  346              | . TEXTURE_PTEX
  347              | . BSDF_MEASUREMENT
  348              | . INTENSITY_MODE
  349              | . INTENSITY_RADIANT_EXITANCE
  350              | . INTENSITY_POWER
  351              | . HAIR_BSDF
  352              | . qualified_name_infix

    STRING_LITERAL              shift, and go to state 157
    SEMICOLON                   shift, and go to state 316
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 158
    FALSE                       shift, and go to state 159
    LET                         shift, and go to state 160
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 317
    SWITCH                      shift, and go to state 318
    WHILE                       shift, and go to state 319
    DO                          shift, and go to state 320
    FOR                         shift, and go to state 321
    BREAK                       shift, and go to state 322
    CONTINUE                    shift, and go to state 323
    RETURN                      shift, and go to state 324
    BITWISE_COMPLEMENT_OP       shift, and go to state 161
    LOGICAL_NOT_OP              shift, and go to state 162
    POSITIVE_OP                 shift, and go to state 163
    NEGATIVE_OP                 shift, and go to state 164
    PRE_INCREMENT_OP            shift, and go to state 165
    PRE_DECREMENT_OP            shift, and go to state 166
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 167
    LEFT_CURLY_BRACE            shift, and go to state 233
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 170
    FLOATING_LITERAL            shift, and go to state 171

    qualified_name_infix       go to state 75
    simple_name                go to state 76
    variable_declaration       go to state 326
    constant_declaration       go to state 327
    type_declaration           go to state 328
    alias_type_declaration     go to state 82
    struct_type_declaration    go to state 83
    enum_type_declaration      go to state 84
    compound_statement         go to state 329
    matched_statement          go to state 631
    unmatched_statement        go to state 632
    matched_if_statement       go to state 334
    unmatched_if_statement     go to state 335
    switch_statement           go to state 336
    matched_while_statement    go to state 337
    unmatched_while_statement  go to state 338
    matched_do_statement       go to state 339
    unmatched_do_statement     go to state 340
    matched_for_statement      go to state 341
    unmatched_for_statement    go to state 342
    break_statement            go to state 343
    continue_statement         go to state 344
    return_statement           go to state 345
    comma_expression           go to state 346
    assignment_expression      go to state 248
    conditional_expression     go to state 249
    logical_or_expression      go to state 250
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 176
    and_expression             go to state 177
    equality_expression        go to state 178
    relational_expression      go to state 179
    shift_expression           go to state 180
    additive_expression        go to state 181
    multiplicative_expression  go to state 182
    unary_expression           go to state 183
    postfix_expression         go to state 184
    let_expression             go to state 185
    primary_expression         go to state 186
    literal_expression         go to state 187
    boolean_literal            go to state 188
    integer_literal            go to state 189
    floating_literal           go to state 190
    string_literal             go to state 191
    type                       go to state 240
    array_type                 go to state 87
    simple_type                go to state 347
    relative_type              go to state 89


State 630

  163 switch_case: CASE comma_expression COLON statement .

    $default  reduce using rule 163 (switch_case)


State 631

  175 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 175 (matched_for_statement)


State 632

  187 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 187 (unmatched_for_statement)
