Grammar

    0 $accept: mdl $end

    1 mdl: mdl_version import_declarations module_declaration global_declarations
    2    | mdl_version import_declarations global_declarations
    3    | mdl_version module_declaration global_declarations
    4    | mdl_version import_declarations module_declaration
    5    | mdl_version import_declarations
    6    | mdl_version module_declaration
    7    | mdl_version global_declarations
    8    | mdl_version

    9 mdl_version: MDL FLOATING_LITERAL SEMICOLON

   10 import_declarations: import_declarations import_declaration
   11                    | import_declaration

   12 global_declarations: global_declarations global_declaration
   13                    | global_declaration

   14 variable_declarations: variable_declarations variable_declaration
   15                      | variable_declaration

   16 import_declaration: IMPORT qualified_imports SEMICOLON
   17                   | EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON

   18 qualified_imports: qualified_imports COMMA qualified_import
   19                  | qualified_import

   20 qualified_import_prefix: qualified_import_prefix_relative_current qualified_name_infix
   21                        | qualified_import_prefix_relative_parent qualified_name_infix
   22                        | qualified_import_prefix_absolute qualified_name_infix
   23                        | qualified_name_infix

   24 unqualified_import: unqualified_import_simple_names
   25                   | STAR

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | qualified_name_infix qualified_import_suffix
   30                 | qualified_import_prefix_relative_current qualified_name_infix
   31                 | qualified_import_prefix_relative_parent qualified_name_infix
   32                 | qualified_import_prefix_absolute qualified_name_infix
   33                 | qualified_name_infix

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name
   35                                | simple_name

   36 qualified_import_prefix_relative_current: DOT SCOPE

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | DOTDOT SCOPE

   39 qualified_import_prefix_absolute: SCOPE

   40 qualified_name_infix: qualified_name_infix SCOPE simple_name
   41                     | simple_name

   42 qualified_import_suffix: SCOPE STAR

   43 module_declaration: MODULE annotation_block SEMICOLON
   44                   | MODULE SEMICOLON

   45 variable_declaration: type variable_declarators SEMICOLON

   46 variable_declarators: variable_declarators COMMA variable_declarator
   47                     | variable_declarator

   48 variable_declarator: simple_name argument_list annotation_block
   49                    | simple_name argument_list
   50                    | simple_name ASSIGN_OP assignment_expression annotation_block
   51                    | simple_name ASSIGN_OP assignment_expression
   52                    | simple_name annotation_block
   53                    | simple_name

   54 global_declaration: EXPORT annotation_declaration
   55                   | EXPORT constant_declaration
   56                   | EXPORT type_declaration
   57                   | EXPORT function_declaration
   58                   | annotation_declaration
   59                   | constant_declaration
   60                   | type_declaration
   61                   | function_declaration

   62 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | ANNOTATION simple_name parameter_list SEMICOLON

   64 constant_declaration: CONST type constant_declarators SEMICOLON

   65 constant_declarators: constant_declarators COMMA constant_declarator
   66                     | constant_declarator

   67 constant_declarator: simple_name argument_list annotation_block
   68                    | simple_name argument_list
   69                    | simple_name ASSIGN_OP conditional_expression annotation_block
   70                    | simple_name ASSIGN_OP conditional_expression

   71 type_declaration: alias_type_declaration
   72                 | struct_type_declaration
   73                 | enum_type_declaration

   74 alias_type_declaration: TYPEDEF type simple_name SEMICOLON

   75 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

   79 struct_field_declarators: struct_field_declarators struct_field_declarator
   80                         | struct_field_declarator

   81 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | type simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | type simple_name annotation_block SEMICOLON
   84                        | type simple_name SEMICOLON

   85 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

   89 enum_value_declarators: enum_value_declarators COMMA enum_value_declarator
   90                       | enum_value_declarator

   91 enum_value_declarator: simple_name ASSIGN_OP assignment_expression annotation_block
   92                      | simple_name ASSIGN_OP assignment_expression
   93                      | simple_name annotation_block
   94                      | simple_name

   95 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | type annotation_block simple_name parameter_list SEMICOLON
  101                     | type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | type simple_name parameter_list annotation_block SEMICOLON
  104                     | type simple_name parameter_list UNIFORM SEMICOLON
  105                     | type simple_name parameter_list VARYING SEMICOLON
  106                     | type simple_name parameter_list SEMICOLON
  107                     | type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | type annotation_block simple_name parameter_list compound_statement
  113                     | type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | type simple_name parameter_list annotation_block compound_statement
  116                     | type simple_name parameter_list UNIFORM compound_statement
  117                     | type simple_name parameter_list VARYING compound_statement
  118                     | type simple_name parameter_list compound_statement
  119                     | type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

  135 compound_statement: LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

  137 statements: statements statement
  138           | statement

  139 statement: matched_statement
  140          | unmatched_statement

  141 matched_statement: compound_statement
  142                  | type_declaration
  143                  | constant_declaration
  144                  | matched_if_statement
  145                  | switch_statement
  146                  | matched_while_statement
  147                  | matched_do_statement
  148                  | matched_for_statement
  149                  | break_statement
  150                  | continue_statement
  151                  | return_statement
  152                  | variable_declaration
  153                  | comma_expression SEMICOLON
  154                  | SEMICOLON

  155 unmatched_statement: unmatched_if_statement
  156                    | unmatched_while_statement
  157                    | unmatched_do_statement
  158                    | unmatched_for_statement

  159 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement

  160 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

  164 switch_cases: switch_cases switch_case
  165             | switch_case

  166 switch_case: CASE comma_expression COLON statement
  167            | CASE comma_expression COLON
  168            | DEFAULT COLON statement
  169            | DEFAULT COLON

  170 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement

  171 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement

  172 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

  173 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement

  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

  198 break_statement: BREAK SEMICOLON

  199 continue_statement: CONTINUE SEMICOLON

  200 return_statement: RETURN comma_expression SEMICOLON

  201 parameter_list: LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  202               | LEFT_PARENTHESIS RIGHT_PARENTHESIS

  203 parameters: parameters COMMA parameter
  204           | parameter

  205 parameter: type simple_name ASSIGN_OP assignment_expression annotation_block
  206          | type simple_name ASSIGN_OP assignment_expression
  207          | type simple_name annotation_block
  208          | type simple_name

  209 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

  210 annotations: annotations COMMA annotation
  211            | annotation

  212 annotation: SCOPE annotation_qualified_name argument_list
  213           | annotation_qualified_name argument_list

  214 annotation_qualified_name: annotation_qualified_name SCOPE IDENT
  215                          | IDENT

  216 argument_list: LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | LEFT_PARENTHESIS RIGHT_PARENTHESIS

  220 named_arguments: named_arguments COMMA named_argument
  221                | named_argument

  222 positional_arguments: positional_arguments COMMA positional_argument
  223                     | positional_argument

  224 named_argument: simple_name COLON assignment_expression

  225 positional_argument: assignment_expression

  226 comma_expression: assignment_expression COMMA comma_expression
  227                 | assignment_expression

  228 assignment_expression: logical_or_expression ASSIGN_OP assignment_expression
  229                      | logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | conditional_expression

  241 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | logical_or_expression

  243 logical_or_expression: logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | logical_and_expression

  245 logical_and_expression: logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | inclusive_or_expression

  247 inclusive_or_expression: inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | exclusive_or_expression

  249 exclusive_or_expression: exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | and_expression

  251 and_expression: and_expression BITWISE_AND_OP equality_expression
  252               | equality_expression

  253 equality_expression: equality_expression EQUAL_OP relational_expression
  254                    | equality_expression NOT_EQUAL_OP relational_expression
  255                    | relational_expression

  256 relational_expression: relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | shift_expression

  261 shift_expression: shift_expression SHIFT_LEFT_OP additive_expression
  262                 | shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | additive_expression

  265 additive_expression: additive_expression POSITIVE_OP multiplicative_expression
  266                    | additive_expression NEGATIVE_OP multiplicative_expression
  267                    | multiplicative_expression

  268 multiplicative_expression: multiplicative_expression STAR unary_expression
  269                          | multiplicative_expression DIVIDE_OP unary_expression
  270                          | multiplicative_expression MODULO_OP unary_expression
  271                          | unary_expression

  272 unary_expression: BITWISE_COMPLEMENT_OP unary_expression
  273                 | LOGICAL_NOT_OP unary_expression
  274                 | POSITIVE_OP unary_expression
  275                 | NEGATIVE_OP unary_expression
  276                 | INCREMENT_OP unary_expression
  277                 | DECREMENT_OP unary_expression
  278                 | postfix_expression
  279                 | let_expression

  280 postfix_expression: matched_postfix_expression
  281                   | unmatched_postfix_expression

  282 matched_postfix_expression: matched_postfix_expression INCREMENT_OP
  283                           | matched_postfix_expression DECREMENT_OP
  284                           | matched_postfix_expression DOT simple_name
  285                           | matched_postfix_expression argument_list
  286                           | matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | matched_primary_expression
  288                           | cast_expression

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | literal_expression
  292                           | LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS

  293 unmatched_postfix_expression: unmatched_postfix_expression INCREMENT_OP
  294                             | unmatched_postfix_expression DECREMENT_OP
  295                             | unmatched_postfix_expression DOT simple_name
  296                             | unmatched_postfix_expression argument_list
  297                             | unmatched_primary_expression

  298 unmatched_primary_expression: simple_type

  299 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

  300 let_expression: LET variable_declaration IN unary_expression
  301               | LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression

  302 literal_expression: boolean_literal
  303                   | integer_literal
  304                   | floating_literal
  305                   | string_literal

  306 boolean_literal: TRUE
  307                | FALSE

  308 integer_literal: INTEGER_LITERAL

  309 floating_literal: FLOATING_LITERAL

  310 string_literal: string_literal STRING_LITERAL
  311               | STRING_LITERAL

  312 type: VARYING array_type
  313     | UNIFORM array_type
  314     | array_type

  315 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | simple_type

  319 simple_type: SCOPE relative_type
  320            | relative_type

  321 relative_type: BOOL
  322              | BOOL2
  323              | BOOL3
  324              | BOOL4
  325              | INT
  326              | INT2
  327              | INT3
  328              | INT4
  329              | FLOAT
  330              | FLOAT2
  331              | FLOAT3
  332              | FLOAT4
  333              | FLOAT2X2
  334              | FLOAT2X3
  335              | FLOAT2X4
  336              | FLOAT3X2
  337              | FLOAT3X3
  338              | FLOAT3X4
  339              | FLOAT4X2
  340              | FLOAT4X3
  341              | FLOAT4X4
  342              | DOUBLE
  343              | DOUBLE2
  344              | DOUBLE3
  345              | DOUBLE4
  346              | DOUBLE2X2
  347              | DOUBLE2X3
  348              | DOUBLE2X4
  349              | DOUBLE3X2
  350              | DOUBLE3X3
  351              | DOUBLE3X4
  352              | DOUBLE4X2
  353              | DOUBLE4X3
  354              | DOUBLE4X4
  355              | COLOR
  356              | STRING
  357              | SDF
  358              | EDF
  359              | VDF
  360              | LIGHT_PROFILE
  361              | MATERIAL
  362              | MATERIAL_EMISSION
  363              | MATERIAL_GEOMETRY
  364              | MATERIAL_SURFACE
  365              | MATERIAL_VOLUME
  366              | TEXTURE_2D
  367              | TEXTURE_3D
  368              | TEXTURE_CUBE
  369              | TEXTURE_PTEX
  370              | BSDF_MEASUREMENT
  371              | INTENSITY_MODE
  372              | INTENSITY_RADIANT_EXITANCE
  373              | INTENSITY_POWER
  374              | HAIR_BSDF
  375              | relative_type_qualified_name

  376 relative_type_qualified_name: relative_type_qualified_name SCOPE IDENT
  377                             | IDENT

  378 simple_name: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING_LITERAL (258) 310 311
SEMICOLON (259) 9 16 17 43 44 45 62 63 64 74 75 76 77 78 81 82 83 84
    85 86 87 88 95 96 97 98 99 100 101 102 103 104 105 106 119 120
    121 122 123 124 125 126 127 128 129 130 131 132 133 134 153 154
    172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187
    188 189 190 191 192 193 194 195 196 197 198 199 200
COMMA (260) 18 34 46 65 89 203 210 216 220 222 226
MDL (261) 9
IMPORT (262) 16 17
USING (263) 17
MODULE (264) 43 44
EXPORT (265) 17 54 55 56 57
UNIFORM (266) 95 98 101 104 107 110 113 116 119 122 125 128 313
VARYING (267) 96 99 102 105 108 111 114 117 120 123 126 129 312
BOOL (268) 321
BOOL2 (269) 322
BOOL3 (270) 323
BOOL4 (271) 324
INT (272) 325
INT2 (273) 326
INT3 (274) 327
INT4 (275) 328
FLOAT (276) 329
FLOAT2 (277) 330
FLOAT3 (278) 331
FLOAT4 (279) 332
FLOAT2X2 (280) 333
FLOAT2X3 (281) 334
FLOAT2X4 (282) 335
FLOAT3X2 (283) 336
FLOAT3X3 (284) 337
FLOAT3X4 (285) 338
FLOAT4X2 (286) 339
FLOAT4X3 (287) 340
FLOAT4X4 (288) 341
DOUBLE (289) 342
DOUBLE2 (290) 343
DOUBLE3 (291) 344
DOUBLE4 (292) 345
DOUBLE2X2 (293) 346
DOUBLE2X3 (294) 347
DOUBLE2X4 (295) 348
DOUBLE3X2 (296) 349
DOUBLE3X3 (297) 350
DOUBLE3X4 (298) 351
DOUBLE4X2 (299) 352
DOUBLE4X3 (300) 353
DOUBLE4X4 (301) 354
COLOR (302) 355
STRING (303) 356
SDF (304) 357
EDF (305) 358
VDF (306) 359
LIGHT_PROFILE (307) 360
MATERIAL (308) 361
MATERIAL_EMISSION (309) 362
MATERIAL_GEOMETRY (310) 363
MATERIAL_SURFACE (311) 364
MATERIAL_VOLUME (312) 365
TEXTURE_2D (313) 366
TEXTURE_3D (314) 367
TEXTURE_CUBE (315) 368
TEXTURE_PTEX (316) 369
BSDF_MEASUREMENT (317) 370
INTENSITY_MODE (318) 371
INTENSITY_RADIANT_EXITANCE (319) 372
INTENSITY_POWER (320) 373
HAIR_BSDF (321) 374
TRUE (322) 306
FALSE (323) 307
LET (324) 300 301
IN (325) 300 301
ANNOTATION (326) 62 63
CONST (327) 64
TYPEDEF (328) 74
STRUCT (329) 75 76 77 78
ENUM (330) 85 86 87 88
IF (331) 159 160 161
ELSE (332) 159 161
SWITCH (333) 162 163
CASE (334) 166 167
DEFAULT (335) 168 169
WHILE (336) 170 171 172 173
DO (337) 172 173
FOR (338) 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188
    189 190 191 192 193 194 195 196 197
BREAK (339) 198
CONTINUE (340) 199
RETURN (341) 200
CAST (342) 299
ASSIGN_OP (343) 50 51 69 70 81 82 91 92 119 120 121 122 123 124 125
    126 127 128 129 130 131 132 133 134 205 206 228
BITWISE_OR_ASSIGN_OP (344) 229
BITWISE_AND_ASSIGN_OP (345) 230
BITWISE_XOR_ASSIGN_OP (346) 231
SHIFT_LEFT_ASSIGN_OP (347) 232
SHIFT_RIGHT_ASSIGN_OP (348) 233
UNSIGNED_SHIFT_RIGHT_ASSIGN_OP (349) 234
MULTIPLY_ASSIGN_OP (350) 235
DIVIDE_ASSIGN_OP (351) 236
MODULO_ASSIGN_OP (352) 237
PLUS_ASSIGN_OP (353) 238
MINUS_ASSIGN_OP (354) 239
CONDITIONAL_OP (355) 241
LOGICAL_OR_OP (356) 243
LOGICAL_AND_OP (357) 245
BITWISE_OR_OP (358) 247
BITWISE_XOR_OP (359) 249
BITWISE_AND_OP (360) 251
EQUAL_OP (361) 253
NOT_EQUAL_OP (362) 254
LESS_OR_EQUAL_OP (363) 257
GREATER_OR_EQUAL_OP (364) 258
SHIFT_LEFT_OP (365) 261
SHIFT_RIGHT_OP (366) 262
UNSIGNED_SHIFT_RIGHT_OP (367) 263
DIVIDE_OP (368) 269
MODULO_OP (369) 270
BITWISE_COMPLEMENT_OP (370) 272
LOGICAL_NOT_OP (371) 273
POSITIVE_OP (372) 265 274
NEGATIVE_OP (373) 266 275
INCREMENT_OP (374) 276 282 293
DECREMENT_OP (375) 277 283 294
DOT (376) 36 284 295
DOTDOT (377) 37 38
SCOPE (378) 36 37 38 39 40 42 212 214 319 376
STAR (379) 25 42 131 132 133 134 268
COLON (380) 166 167 168 169 224 241
ANNOTATION_BLOCK_BEGIN (381) 209
ANNOTATION_BLOCK_END (382) 209
LEFT_PARENTHESIS (383) 131 132 133 134 159 160 161 162 163 170 171
    172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187
    188 189 190 191 192 193 194 195 196 197 201 202 216 217 218 219
    292 299
RIGHT_PARENTHESIS (384) 131 132 133 134 159 160 161 162 163 170 171
    172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187
    188 189 190 191 192 193 194 195 196 197 201 202 216 217 218 219
    292 299
LEFT_SQUARE_BRACKET (385) 286 289 290 315 316 317
RIGHT_SQUARE_BRACKET (386) 286 289 290 315 316 317
LEFT_ANGLE_BRACKET (387) 256 299 315
RIGHT_ANGLE_BRACKET (388) 259 299 315
LEFT_CURLY_BRACE (389) 75 76 77 78 85 86 87 88 135 136 162 163 301
RIGHT_CURLY_BRACE (390) 75 76 77 78 85 86 87 88 135 136 162 163 301
IDENT (391) 214 215 376 377 378
INTEGER_LITERAL (392) 308
FLOATING_LITERAL (393) 9 309


Nonterminals, with rules where they appear

$accept (139)
    on left: 0
mdl (140)
    on left: 1 2 3 4 5 6 7 8, on right: 0
mdl_version (141)
    on left: 9, on right: 1 2 3 4 5 6 7 8
import_declarations (142)
    on left: 10 11, on right: 1 2 4 5 10
global_declarations (143)
    on left: 12 13, on right: 1 2 3 7 12
variable_declarations (144)
    on left: 14 15, on right: 14 301
import_declaration (145)
    on left: 16 17, on right: 10 11
qualified_imports (146)
    on left: 18 19, on right: 16 18
qualified_import_prefix (147)
    on left: 20 21 22 23, on right: 17
unqualified_import (148)
    on left: 24 25, on right: 17
qualified_import (149)
    on left: 26 27 28 29 30 31 32 33, on right: 18 19
unqualified_import_simple_names (150)
    on left: 34 35, on right: 24 34
qualified_import_prefix_relative_current (151)
    on left: 36, on right: 20 26 30
qualified_import_prefix_relative_parent (152)
    on left: 37 38, on right: 21 27 31 37
qualified_import_prefix_absolute (153)
    on left: 39, on right: 22 28 32
qualified_name_infix (154)
    on left: 40 41, on right: 20 21 22 23 26 27 28 29 30 31 32 33 40
qualified_import_suffix (155)
    on left: 42, on right: 26 27 28 29
module_declaration (156)
    on left: 43 44, on right: 1 3 4 6
variable_declaration (157)
    on left: 45, on right: 14 15 152 174 175 176 177 186 187 188 189
    300
variable_declarators (158)
    on left: 46 47, on right: 45 46
variable_declarator (159)
    on left: 48 49 50 51 52 53, on right: 46 47
global_declaration (160)
    on left: 54 55 56 57 58 59 60 61, on right: 12 13
annotation_declaration (161)
    on left: 62 63, on right: 54 58
constant_declaration (162)
    on left: 64, on right: 55 59 143
constant_declarators (163)
    on left: 65 66, on right: 64 65
constant_declarator (164)
    on left: 67 68 69 70, on right: 65 66
type_declaration (165)
    on left: 71 72 73, on right: 56 60 142
alias_type_declaration (166)
    on left: 74, on right: 71
struct_type_declaration (167)
    on left: 75 76 77 78, on right: 72
struct_field_declarators (168)
    on left: 79 80, on right: 75 76 79
struct_field_declarator (169)
    on left: 81 82 83 84, on right: 79 80
enum_type_declaration (170)
    on left: 85 86 87 88, on right: 73
enum_value_declarators (171)
    on left: 89 90, on right: 85 86 89
enum_value_declarator (172)
    on left: 91 92 93 94, on right: 89 90
function_declaration (173)
    on left: 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109
    110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
    126 127 128 129 130 131 132 133 134, on right: 57 61
compound_statement (174)
    on left: 135 136, on right: 107 108 109 110 111 112 113 114 115
    116 117 118 141
statements (175)
    on left: 137 138, on right: 135 137
statement (176)
    on left: 139 140, on right: 137 138 160 166 168
matched_statement (177)
    on left: 141 142 143 144 145 146 147 148 149 150 151 152 153 154,
    on right: 139 159 161 170 172 174 175 176 177 178 179 180 181 182
    183 184 185
unmatched_statement (178)
    on left: 155 156 157 158, on right: 140 161 171 173 186 187 188
    189 190 191 192 193 194 195 196 197
matched_if_statement (179)
    on left: 159, on right: 144
unmatched_if_statement (180)
    on left: 160 161, on right: 155
switch_statement (181)
    on left: 162 163, on right: 145
switch_cases (182)
    on left: 164 165, on right: 162 164
switch_case (183)
    on left: 166 167 168 169, on right: 164 165
matched_while_statement (184)
    on left: 170, on right: 146
unmatched_while_statement (185)
    on left: 171, on right: 156
matched_do_statement (186)
    on left: 172, on right: 147
unmatched_do_statement (187)
    on left: 173, on right: 157
matched_for_statement (188)
    on left: 174 175 176 177 178 179 180 181 182 183 184 185, on right:
    148
unmatched_for_statement (189)
    on left: 186 187 188 189 190 191 192 193 194 195 196 197, on right:
    158
break_statement (190)
    on left: 198, on right: 149
continue_statement (191)
    on left: 199, on right: 150
return_statement (192)
    on left: 200, on right: 151
parameter_list (193)
    on left: 201 202, on right: 62 63 95 96 97 98 99 100 101 102 103
    104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
    120 121 122 123 124 125 126 127 128 129 130
parameters (194)
    on left: 203 204, on right: 201 203
parameter (195)
    on left: 205 206 207 208, on right: 203 204
annotation_block (196)
    on left: 209, on right: 43 48 50 52 62 67 69 75 77 81 83 85 87
    91 93 95 96 97 98 99 100 101 102 103 107 108 109 110 111 112 113
    114 115 119 120 121 122 123 124 125 126 127 131 132 133 205 207
annotations (197)
    on left: 210 211, on right: 209 210
annotation (198)
    on left: 212 213, on right: 210 211
annotation_qualified_name (199)
    on left: 214 215, on right: 212 213 214
argument_list (200)
    on left: 216 217 218 219, on right: 48 49 67 68 212 213 285 296
named_arguments (201)
    on left: 220 221, on right: 216 217 220
positional_arguments (202)
    on left: 222 223, on right: 216 218 222
named_argument (203)
    on left: 224, on right: 220 221
positional_argument (204)
    on left: 225, on right: 222 223
comma_expression (205)
    on left: 226 227, on right: 81 82 119 120 121 122 123 124 125 126
    127 128 129 130 131 132 133 134 153 159 160 161 162 163 166 167
    170 171 172 173 174 175 176 178 179 180 181 182 183 184 186 187
    188 190 191 192 193 194 195 196 200 226 241 286 289 292 316
assignment_expression (206)
    on left: 228 229 230 231 232 233 234 235 236 237 238 239 240, on right:
    50 51 91 92 205 206 224 225 226 227 228 229 230 231 232 233 234
    235 236 237 238 239 241
conditional_expression (207)
    on left: 241 242, on right: 69 70 240
logical_or_expression (208)
    on left: 243 244, on right: 228 229 230 231 232 233 234 235 236
    237 238 239 241 242 243
logical_and_expression (209)
    on left: 245 246, on right: 243 244 245
inclusive_or_expression (210)
    on left: 247 248, on right: 245 246 247
exclusive_or_expression (211)
    on left: 249 250, on right: 247 248 249
and_expression (212)
    on left: 251 252, on right: 249 250 251
equality_expression (213)
    on left: 253 254 255, on right: 251 252 253 254
relational_expression (214)
    on left: 256 257 258 259 260, on right: 253 254 255 256 257 258
    259
shift_expression (215)
    on left: 261 262 263 264, on right: 256 257 258 259 260 261 262
    263
additive_expression (216)
    on left: 265 266 267, on right: 261 262 263 264 265 266
multiplicative_expression (217)
    on left: 268 269 270 271, on right: 265 266 267 268 269 270
unary_expression (218)
    on left: 272 273 274 275 276 277 278 279, on right: 268 269 270
    271 272 273 274 275 276 277 299 300 301
postfix_expression (219)
    on left: 280 281, on right: 278
matched_postfix_expression (220)
    on left: 282 283 284 285 286 287 288, on right: 280 282 283 284
    285 286
matched_primary_expression (221)
    on left: 289 290 291 292, on right: 287
unmatched_postfix_expression (222)
    on left: 293 294 295 296 297, on right: 281 293 294 295 296
unmatched_primary_expression (223)
    on left: 298, on right: 297
cast_expression (224)
    on left: 299, on right: 288
let_expression (225)
    on left: 300 301, on right: 279
literal_expression (226)
    on left: 302 303 304 305, on right: 291
boolean_literal (227)
    on left: 306 307, on right: 302
integer_literal (228)
    on left: 308, on right: 303
floating_literal (229)
    on left: 309, on right: 304
string_literal (230)
    on left: 310 311, on right: 305 310
type (231)
    on left: 312 313 314, on right: 45 64 74 81 82 83 84 95 96 97 98
    99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
    115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130
    131 132 133 134 205 206 207 208 299
array_type (232)
    on left: 315 316 317 318, on right: 312 313 314
simple_type (233)
    on left: 319 320, on right: 289 290 298 315 316 317 318
relative_type (234)
    on left: 321 322 323 324 325 326 327 328 329 330 331 332 333 334
    335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350
    351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366
    367 368 369 370 371 372 373 374 375, on right: 319 320
relative_type_qualified_name (235)
    on left: 376 377, on right: 375 376
simple_name (236)
    on left: 378, on right: 34 35 40 41 48 49 50 51 52 53 62 63 67
    68 69 70 74 75 76 77 78 81 82 83 84 85 86 87 88 91 92 93 94 95
    96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
    113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128
    129 130 131 132 133 134 205 206 207 208 224 284 295 315


State 0

    0 $accept: . mdl $end
    1 mdl: . mdl_version import_declarations module_declaration global_declarations
    2    | . mdl_version import_declarations global_declarations
    3    | . mdl_version module_declaration global_declarations
    4    | . mdl_version import_declarations module_declaration
    5    | . mdl_version import_declarations
    6    | . mdl_version module_declaration
    7    | . mdl_version global_declarations
    8    | . mdl_version
    9 mdl_version: . MDL FLOATING_LITERAL SEMICOLON

    MDL  shift, and go to state 1

    mdl          go to state 2
    mdl_version  go to state 3


State 1

    9 mdl_version: MDL . FLOATING_LITERAL SEMICOLON

    FLOATING_LITERAL  shift, and go to state 4


State 2

    0 $accept: mdl . $end

    $end  shift, and go to state 5


State 3

    1 mdl: mdl_version . import_declarations module_declaration global_declarations
    2    | mdl_version . import_declarations global_declarations
    3    | mdl_version . module_declaration global_declarations
    4    | mdl_version . import_declarations module_declaration
    5    | mdl_version . import_declarations
    6    | mdl_version . module_declaration
    7    | mdl_version . global_declarations
    8    | mdl_version .  [$end]
   10 import_declarations: . import_declarations import_declaration
   11                    | . import_declaration
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   16 import_declaration: . IMPORT qualified_imports SEMICOLON
   17                   | . EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON
   43 module_declaration: . MODULE annotation_block SEMICOLON
   44                   | . MODULE SEMICOLON
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    IMPORT                      shift, and go to state 6
    MODULE                      shift, and go to state 7
    EXPORT                      shift, and go to state 8
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 8 (mdl)

    import_declarations           go to state 72
    global_declarations           go to state 73
    import_declaration            go to state 74
    module_declaration            go to state 75
    global_declaration            go to state 76
    annotation_declaration        go to state 77
    constant_declaration          go to state 78
    type_declaration              go to state 79
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    function_declaration          go to state 83
    type                          go to state 84
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 4

    9 mdl_version: MDL FLOATING_LITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 5

    0 $accept: mdl $end .

    $default  accept


State 6

   16 import_declaration: IMPORT . qualified_imports SEMICOLON
   18 qualified_imports: . qualified_imports COMMA qualified_import
   19                  | . qualified_import
   26 qualified_import: . qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | . qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | . qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | . qualified_name_infix qualified_import_suffix
   30                 | . qualified_import_prefix_relative_current qualified_name_infix
   31                 | . qualified_import_prefix_relative_parent qualified_name_infix
   32                 | . qualified_import_prefix_absolute qualified_name_infix
   33                 | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  378 simple_name: . IDENT

    DOT     shift, and go to state 90
    DOTDOT  shift, and go to state 91
    SCOPE   shift, and go to state 92
    IDENT   shift, and go to state 93

    qualified_imports                         go to state 94
    qualified_import                          go to state 95
    qualified_import_prefix_relative_current  go to state 96
    qualified_import_prefix_relative_parent   go to state 97
    qualified_import_prefix_absolute          go to state 98
    qualified_name_infix                      go to state 99
    simple_name                               go to state 100


State 7

   43 module_declaration: MODULE . annotation_block SEMICOLON
   44                   | MODULE . SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 101
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    annotation_block  go to state 103


State 8

   17 import_declaration: EXPORT . USING qualified_import_prefix IMPORT unqualified_import SEMICOLON
   54 global_declaration: EXPORT . annotation_declaration
   55                   | EXPORT . constant_declaration
   56                   | EXPORT . type_declaration
   57                   | EXPORT . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    USING                       shift, and go to state 104
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    annotation_declaration        go to state 105
    constant_declaration          go to state 106
    type_declaration              go to state 107
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    function_declaration          go to state 108
    type                          go to state 84
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 9

  313 type: UNIFORM . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    array_type                    go to state 109
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 10

  312 type: VARYING . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    array_type                    go to state 110
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 11

  321 relative_type: BOOL .

    $default  reduce using rule 321 (relative_type)


State 12

  322 relative_type: BOOL2 .

    $default  reduce using rule 322 (relative_type)


State 13

  323 relative_type: BOOL3 .

    $default  reduce using rule 323 (relative_type)


State 14

  324 relative_type: BOOL4 .

    $default  reduce using rule 324 (relative_type)


State 15

  325 relative_type: INT .

    $default  reduce using rule 325 (relative_type)


State 16

  326 relative_type: INT2 .

    $default  reduce using rule 326 (relative_type)


State 17

  327 relative_type: INT3 .

    $default  reduce using rule 327 (relative_type)


State 18

  328 relative_type: INT4 .

    $default  reduce using rule 328 (relative_type)


State 19

  329 relative_type: FLOAT .

    $default  reduce using rule 329 (relative_type)


State 20

  330 relative_type: FLOAT2 .

    $default  reduce using rule 330 (relative_type)


State 21

  331 relative_type: FLOAT3 .

    $default  reduce using rule 331 (relative_type)


State 22

  332 relative_type: FLOAT4 .

    $default  reduce using rule 332 (relative_type)


State 23

  333 relative_type: FLOAT2X2 .

    $default  reduce using rule 333 (relative_type)


State 24

  334 relative_type: FLOAT2X3 .

    $default  reduce using rule 334 (relative_type)


State 25

  335 relative_type: FLOAT2X4 .

    $default  reduce using rule 335 (relative_type)


State 26

  336 relative_type: FLOAT3X2 .

    $default  reduce using rule 336 (relative_type)


State 27

  337 relative_type: FLOAT3X3 .

    $default  reduce using rule 337 (relative_type)


State 28

  338 relative_type: FLOAT3X4 .

    $default  reduce using rule 338 (relative_type)


State 29

  339 relative_type: FLOAT4X2 .

    $default  reduce using rule 339 (relative_type)


State 30

  340 relative_type: FLOAT4X3 .

    $default  reduce using rule 340 (relative_type)


State 31

  341 relative_type: FLOAT4X4 .

    $default  reduce using rule 341 (relative_type)


State 32

  342 relative_type: DOUBLE .

    $default  reduce using rule 342 (relative_type)


State 33

  343 relative_type: DOUBLE2 .

    $default  reduce using rule 343 (relative_type)


State 34

  344 relative_type: DOUBLE3 .

    $default  reduce using rule 344 (relative_type)


State 35

  345 relative_type: DOUBLE4 .

    $default  reduce using rule 345 (relative_type)


State 36

  346 relative_type: DOUBLE2X2 .

    $default  reduce using rule 346 (relative_type)


State 37

  347 relative_type: DOUBLE2X3 .

    $default  reduce using rule 347 (relative_type)


State 38

  348 relative_type: DOUBLE2X4 .

    $default  reduce using rule 348 (relative_type)


State 39

  349 relative_type: DOUBLE3X2 .

    $default  reduce using rule 349 (relative_type)


State 40

  350 relative_type: DOUBLE3X3 .

    $default  reduce using rule 350 (relative_type)


State 41

  351 relative_type: DOUBLE3X4 .

    $default  reduce using rule 351 (relative_type)


State 42

  352 relative_type: DOUBLE4X2 .

    $default  reduce using rule 352 (relative_type)


State 43

  353 relative_type: DOUBLE4X3 .

    $default  reduce using rule 353 (relative_type)


State 44

  354 relative_type: DOUBLE4X4 .

    $default  reduce using rule 354 (relative_type)


State 45

  355 relative_type: COLOR .

    $default  reduce using rule 355 (relative_type)


State 46

  356 relative_type: STRING .

    $default  reduce using rule 356 (relative_type)


State 47

  357 relative_type: SDF .

    $default  reduce using rule 357 (relative_type)


State 48

  358 relative_type: EDF .

    $default  reduce using rule 358 (relative_type)


State 49

  359 relative_type: VDF .

    $default  reduce using rule 359 (relative_type)


State 50

  360 relative_type: LIGHT_PROFILE .

    $default  reduce using rule 360 (relative_type)


State 51

  361 relative_type: MATERIAL .

    $default  reduce using rule 361 (relative_type)


State 52

  362 relative_type: MATERIAL_EMISSION .

    $default  reduce using rule 362 (relative_type)


State 53

  363 relative_type: MATERIAL_GEOMETRY .

    $default  reduce using rule 363 (relative_type)


State 54

  364 relative_type: MATERIAL_SURFACE .

    $default  reduce using rule 364 (relative_type)


State 55

  365 relative_type: MATERIAL_VOLUME .

    $default  reduce using rule 365 (relative_type)


State 56

  366 relative_type: TEXTURE_2D .

    $default  reduce using rule 366 (relative_type)


State 57

  367 relative_type: TEXTURE_3D .

    $default  reduce using rule 367 (relative_type)


State 58

  368 relative_type: TEXTURE_CUBE .

    $default  reduce using rule 368 (relative_type)


State 59

  369 relative_type: TEXTURE_PTEX .

    $default  reduce using rule 369 (relative_type)


State 60

  370 relative_type: BSDF_MEASUREMENT .

    $default  reduce using rule 370 (relative_type)


State 61

  371 relative_type: INTENSITY_MODE .

    $default  reduce using rule 371 (relative_type)


State 62

  372 relative_type: INTENSITY_RADIANT_EXITANCE .

    $default  reduce using rule 372 (relative_type)


State 63

  373 relative_type: INTENSITY_POWER .

    $default  reduce using rule 373 (relative_type)


State 64

  374 relative_type: HAIR_BSDF .

    $default  reduce using rule 374 (relative_type)


State 65

   62 annotation_declaration: ANNOTATION . simple_name parameter_list annotation_block SEMICOLON
   63                       | ANNOTATION . simple_name parameter_list SEMICOLON
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 111


State 66

   64 constant_declaration: CONST . type constant_declarators SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    type                          go to state 112
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 67

   74 alias_type_declaration: TYPEDEF . type simple_name SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    type                          go to state 113
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 68

   75 struct_type_declaration: STRUCT . simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | STRUCT . simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT . simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT . simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 114


State 69

   85 enum_type_declaration: ENUM . simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | ENUM . simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM . simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM . simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 115


State 70

  319 simple_type: SCOPE . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    IDENT                       shift, and go to state 71

    relative_type                 go to state 116
    relative_type_qualified_name  go to state 88


State 71

  377 relative_type_qualified_name: IDENT .

    $default  reduce using rule 377 (relative_type_qualified_name)


State 72

    1 mdl: mdl_version import_declarations . module_declaration global_declarations
    2    | mdl_version import_declarations . global_declarations
    4    | mdl_version import_declarations . module_declaration
    5    | mdl_version import_declarations .  [$end]
   10 import_declarations: import_declarations . import_declaration
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   16 import_declaration: . IMPORT qualified_imports SEMICOLON
   17                   | . EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON
   43 module_declaration: . MODULE annotation_block SEMICOLON
   44                   | . MODULE SEMICOLON
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    IMPORT                      shift, and go to state 6
    MODULE                      shift, and go to state 7
    EXPORT                      shift, and go to state 8
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 5 (mdl)

    global_declarations           go to state 117
    import_declaration            go to state 118
    module_declaration            go to state 119
    global_declaration            go to state 76
    annotation_declaration        go to state 77
    constant_declaration          go to state 78
    type_declaration              go to state 79
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    function_declaration          go to state 83
    type                          go to state 84
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 73

    7 mdl: mdl_version global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    EXPORT                      shift, and go to state 120
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 7 (mdl)

    global_declaration            go to state 121
    annotation_declaration        go to state 77
    constant_declaration          go to state 78
    type_declaration              go to state 79
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    function_declaration          go to state 83
    type                          go to state 84
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 74

   11 import_declarations: import_declaration .

    $default  reduce using rule 11 (import_declarations)


State 75

    3 mdl: mdl_version module_declaration . global_declarations
    6    | mdl_version module_declaration .  [$end]
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    EXPORT                      shift, and go to state 120
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 6 (mdl)

    global_declarations           go to state 122
    global_declaration            go to state 76
    annotation_declaration        go to state 77
    constant_declaration          go to state 78
    type_declaration              go to state 79
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    function_declaration          go to state 83
    type                          go to state 84
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 76

   13 global_declarations: global_declaration .

    $default  reduce using rule 13 (global_declarations)


State 77

   58 global_declaration: annotation_declaration .

    $default  reduce using rule 58 (global_declaration)


State 78

   59 global_declaration: constant_declaration .

    $default  reduce using rule 59 (global_declaration)


State 79

   60 global_declaration: type_declaration .

    $default  reduce using rule 60 (global_declaration)


State 80

   71 type_declaration: alias_type_declaration .

    $default  reduce using rule 71 (type_declaration)


State 81

   72 type_declaration: struct_type_declaration .

    $default  reduce using rule 72 (type_declaration)


State 82

   73 type_declaration: enum_type_declaration .

    $default  reduce using rule 73 (type_declaration)


State 83

   61 global_declaration: function_declaration .

    $default  reduce using rule 61 (global_declaration)


State 84

   95 function_declaration: type . annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | type . annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | type . annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | type . annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | type . annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | type . annotation_block simple_name parameter_list SEMICOLON
  101                     | type . simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | type . simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | type . simple_name parameter_list annotation_block SEMICOLON
  104                     | type . simple_name parameter_list UNIFORM SEMICOLON
  105                     | type . simple_name parameter_list VARYING SEMICOLON
  106                     | type . simple_name parameter_list SEMICOLON
  107                     | type . annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | type . annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | type . annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | type . annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | type . annotation_block simple_name parameter_list VARYING compound_statement
  112                     | type . annotation_block simple_name parameter_list compound_statement
  113                     | type . simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | type . simple_name parameter_list VARYING annotation_block compound_statement
  115                     | type . simple_name parameter_list annotation_block compound_statement
  116                     | type . simple_name parameter_list UNIFORM compound_statement
  117                     | type . simple_name parameter_list VARYING compound_statement
  118                     | type . simple_name parameter_list compound_statement
  119                     | type . annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | type . annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type . annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type . annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | type . annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | type . annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | type . simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | type . simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type . simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type . simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | type . simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | type . simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | type . annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type . annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | type . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END
  378 simple_name: . IDENT

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102
    IDENT                   shift, and go to state 93

    annotation_block  go to state 123
    simple_name       go to state 124


State 85

  314 type: array_type .

    $default  reduce using rule 314 (type)


State 86

  315 array_type: simple_type . LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | simple_type . LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | simple_type .  [ANNOTATION_BLOCK_BEGIN, RIGHT_ANGLE_BRACKET, IDENT]

    LEFT_SQUARE_BRACKET  shift, and go to state 125

    $default  reduce using rule 318 (array_type)


State 87

  320 simple_type: relative_type .

    $default  reduce using rule 320 (simple_type)


State 88

  375 relative_type: relative_type_qualified_name .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, COLON, ANNOTATION_BLOCK_BEGIN, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE, IDENT]
  376 relative_type_qualified_name: relative_type_qualified_name . SCOPE IDENT

    SCOPE  shift, and go to state 126

    $default  reduce using rule 375 (relative_type)


State 89

    9 mdl_version: MDL FLOATING_LITERAL SEMICOLON .

    $default  reduce using rule 9 (mdl_version)


State 90

   36 qualified_import_prefix_relative_current: DOT . SCOPE

    SCOPE  shift, and go to state 127


State 91

   38 qualified_import_prefix_relative_parent: DOTDOT . SCOPE

    SCOPE  shift, and go to state 128


State 92

   39 qualified_import_prefix_absolute: SCOPE .

    $default  reduce using rule 39 (qualified_import_prefix_absolute)


State 93

  378 simple_name: IDENT .

    $default  reduce using rule 378 (simple_name)


State 94

   16 import_declaration: IMPORT qualified_imports . SEMICOLON
   18 qualified_imports: qualified_imports . COMMA qualified_import

    SEMICOLON  shift, and go to state 129
    COMMA      shift, and go to state 130


State 95

   19 qualified_imports: qualified_import .

    $default  reduce using rule 19 (qualified_imports)


State 96

   26 qualified_import: qualified_import_prefix_relative_current . qualified_name_infix qualified_import_suffix
   30                 | qualified_import_prefix_relative_current . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    qualified_name_infix  go to state 131
    simple_name           go to state 100


State 97

   27 qualified_import: qualified_import_prefix_relative_parent . qualified_name_infix qualified_import_suffix
   31                 | qualified_import_prefix_relative_parent . qualified_name_infix
   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent . DOTDOT SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  378 simple_name: . IDENT

    DOTDOT  shift, and go to state 132
    IDENT   shift, and go to state 93

    qualified_name_infix  go to state 133
    simple_name           go to state 100


State 98

   28 qualified_import: qualified_import_prefix_absolute . qualified_name_infix qualified_import_suffix
   32                 | qualified_import_prefix_absolute . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    qualified_name_infix  go to state 134
    simple_name           go to state 100


State 99

   29 qualified_import: qualified_name_infix . qualified_import_suffix
   33                 | qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 135

    $default  reduce using rule 33 (qualified_import)

    qualified_import_suffix  go to state 136


State 100

   41 qualified_name_infix: simple_name .

    $default  reduce using rule 41 (qualified_name_infix)


State 101

   44 module_declaration: MODULE SEMICOLON .

    $default  reduce using rule 44 (module_declaration)


State 102

  209 annotation_block: ANNOTATION_BLOCK_BEGIN . annotations ANNOTATION_BLOCK_END
  210 annotations: . annotations COMMA annotation
  211            | . annotation
  212 annotation: . SCOPE annotation_qualified_name argument_list
  213           | . annotation_qualified_name argument_list
  214 annotation_qualified_name: . annotation_qualified_name SCOPE IDENT
  215                          | . IDENT

    SCOPE  shift, and go to state 137
    IDENT  shift, and go to state 138

    annotations                go to state 139
    annotation                 go to state 140
    annotation_qualified_name  go to state 141


State 103

   43 module_declaration: MODULE annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 104

   17 import_declaration: EXPORT USING . qualified_import_prefix IMPORT unqualified_import SEMICOLON
   20 qualified_import_prefix: . qualified_import_prefix_relative_current qualified_name_infix
   21                        | . qualified_import_prefix_relative_parent qualified_name_infix
   22                        | . qualified_import_prefix_absolute qualified_name_infix
   23                        | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  378 simple_name: . IDENT

    DOT     shift, and go to state 90
    DOTDOT  shift, and go to state 91
    SCOPE   shift, and go to state 92
    IDENT   shift, and go to state 93

    qualified_import_prefix                   go to state 143
    qualified_import_prefix_relative_current  go to state 144
    qualified_import_prefix_relative_parent   go to state 145
    qualified_import_prefix_absolute          go to state 146
    qualified_name_infix                      go to state 147
    simple_name                               go to state 100


State 105

   54 global_declaration: EXPORT annotation_declaration .

    $default  reduce using rule 54 (global_declaration)


State 106

   55 global_declaration: EXPORT constant_declaration .

    $default  reduce using rule 55 (global_declaration)


State 107

   56 global_declaration: EXPORT type_declaration .

    $default  reduce using rule 56 (global_declaration)


State 108

   57 global_declaration: EXPORT function_declaration .

    $default  reduce using rule 57 (global_declaration)


State 109

  313 type: UNIFORM array_type .

    $default  reduce using rule 313 (type)


State 110

  312 type: VARYING array_type .

    $default  reduce using rule 312 (type)


State 111

   62 annotation_declaration: ANNOTATION simple_name . parameter_list annotation_block SEMICOLON
   63                       | ANNOTATION simple_name . parameter_list SEMICOLON
  201 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  202               | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 148

    parameter_list  go to state 149


State 112

   64 constant_declaration: CONST type . constant_declarators SEMICOLON
   65 constant_declarators: . constant_declarators COMMA constant_declarator
   66                     | . constant_declarator
   67 constant_declarator: . simple_name argument_list annotation_block
   68                    | . simple_name argument_list
   69                    | . simple_name ASSIGN_OP conditional_expression annotation_block
   70                    | . simple_name ASSIGN_OP conditional_expression
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    constant_declarators  go to state 150
    constant_declarator   go to state 151
    simple_name           go to state 152


State 113

   74 alias_type_declaration: TYPEDEF type . simple_name SEMICOLON
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 153


State 114

   75 struct_type_declaration: STRUCT simple_name . annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | STRUCT simple_name . LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT simple_name . annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT simple_name . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102
    LEFT_CURLY_BRACE        shift, and go to state 154

    annotation_block  go to state 155


State 115

   85 enum_type_declaration: ENUM simple_name . annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | ENUM simple_name . LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM simple_name . annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM simple_name . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102
    LEFT_CURLY_BRACE        shift, and go to state 156

    annotation_block  go to state 157


State 116

  319 simple_type: SCOPE relative_type .

    $default  reduce using rule 319 (simple_type)


State 117

    2 mdl: mdl_version import_declarations global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    EXPORT                      shift, and go to state 120
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 2 (mdl)

    global_declaration            go to state 121
    annotation_declaration        go to state 77
    constant_declaration          go to state 78
    type_declaration              go to state 79
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    function_declaration          go to state 83
    type                          go to state 84
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 118

   10 import_declarations: import_declarations import_declaration .

    $default  reduce using rule 10 (import_declarations)


State 119

    1 mdl: mdl_version import_declarations module_declaration . global_declarations
    4    | mdl_version import_declarations module_declaration .  [$end]
   12 global_declarations: . global_declarations global_declaration
   13                    | . global_declaration
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    EXPORT                      shift, and go to state 120
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 4 (mdl)

    global_declarations           go to state 158
    global_declaration            go to state 76
    annotation_declaration        go to state 77
    constant_declaration          go to state 78
    type_declaration              go to state 79
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    function_declaration          go to state 83
    type                          go to state 84
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 120

   54 global_declaration: EXPORT . annotation_declaration
   55                   | EXPORT . constant_declaration
   56                   | EXPORT . type_declaration
   57                   | EXPORT . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    annotation_declaration        go to state 105
    constant_declaration          go to state 106
    type_declaration              go to state 107
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    function_declaration          go to state 108
    type                          go to state 84
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 121

   12 global_declarations: global_declarations global_declaration .

    $default  reduce using rule 12 (global_declarations)


State 122

    3 mdl: mdl_version module_declaration global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    EXPORT                      shift, and go to state 120
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 3 (mdl)

    global_declaration            go to state 121
    annotation_declaration        go to state 77
    constant_declaration          go to state 78
    type_declaration              go to state 79
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    function_declaration          go to state 83
    type                          go to state 84
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 123

   95 function_declaration: type annotation_block . simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | type annotation_block . simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | type annotation_block . simple_name parameter_list annotation_block SEMICOLON
   98                     | type annotation_block . simple_name parameter_list UNIFORM SEMICOLON
   99                     | type annotation_block . simple_name parameter_list VARYING SEMICOLON
  100                     | type annotation_block . simple_name parameter_list SEMICOLON
  107                     | type annotation_block . simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | type annotation_block . simple_name parameter_list VARYING annotation_block compound_statement
  109                     | type annotation_block . simple_name parameter_list annotation_block compound_statement
  110                     | type annotation_block . simple_name parameter_list UNIFORM compound_statement
  111                     | type annotation_block . simple_name parameter_list VARYING compound_statement
  112                     | type annotation_block . simple_name parameter_list compound_statement
  119                     | type annotation_block . simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block . simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block . simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block . simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block . simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block . simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | type annotation_block . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block . simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 159


State 124

  101 function_declaration: type simple_name . parameter_list UNIFORM annotation_block SEMICOLON
  102                     | type simple_name . parameter_list VARYING annotation_block SEMICOLON
  103                     | type simple_name . parameter_list annotation_block SEMICOLON
  104                     | type simple_name . parameter_list UNIFORM SEMICOLON
  105                     | type simple_name . parameter_list VARYING SEMICOLON
  106                     | type simple_name . parameter_list SEMICOLON
  113                     | type simple_name . parameter_list UNIFORM annotation_block compound_statement
  114                     | type simple_name . parameter_list VARYING annotation_block compound_statement
  115                     | type simple_name . parameter_list annotation_block compound_statement
  116                     | type simple_name . parameter_list UNIFORM compound_statement
  117                     | type simple_name . parameter_list VARYING compound_statement
  118                     | type simple_name . parameter_list compound_statement
  125                     | type simple_name . parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | type simple_name . parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name . parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type simple_name . parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name . parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name . parameter_list ASSIGN_OP comma_expression SEMICOLON
  133                     | type simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  201 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  202               | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 160

    parameter_list  go to state 161


State 125

  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  315 array_type: simple_type LEFT_SQUARE_BRACKET . LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | simple_type LEFT_SQUARE_BRACKET . comma_expression RIGHT_SQUARE_BRACKET
  317           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_SQUARE_BRACKET        shift, and go to state 174
    LEFT_ANGLE_BRACKET          shift, and go to state 175
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 178
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 126

  376 relative_type_qualified_name: relative_type_qualified_name SCOPE . IDENT

    IDENT  shift, and go to state 205


State 127

   36 qualified_import_prefix_relative_current: DOT SCOPE .

    $default  reduce using rule 36 (qualified_import_prefix_relative_current)


State 128

   38 qualified_import_prefix_relative_parent: DOTDOT SCOPE .

    $default  reduce using rule 38 (qualified_import_prefix_relative_parent)


State 129

   16 import_declaration: IMPORT qualified_imports SEMICOLON .

    $default  reduce using rule 16 (import_declaration)


State 130

   18 qualified_imports: qualified_imports COMMA . qualified_import
   26 qualified_import: . qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix
   27                 | . qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix
   28                 | . qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix
   29                 | . qualified_name_infix qualified_import_suffix
   30                 | . qualified_import_prefix_relative_current qualified_name_infix
   31                 | . qualified_import_prefix_relative_parent qualified_name_infix
   32                 | . qualified_import_prefix_absolute qualified_name_infix
   33                 | . qualified_name_infix
   36 qualified_import_prefix_relative_current: . DOT SCOPE
   37 qualified_import_prefix_relative_parent: . qualified_import_prefix_relative_parent DOTDOT SCOPE
   38                                        | . DOTDOT SCOPE
   39 qualified_import_prefix_absolute: . SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  378 simple_name: . IDENT

    DOT     shift, and go to state 90
    DOTDOT  shift, and go to state 91
    SCOPE   shift, and go to state 92
    IDENT   shift, and go to state 93

    qualified_import                          go to state 206
    qualified_import_prefix_relative_current  go to state 96
    qualified_import_prefix_relative_parent   go to state 97
    qualified_import_prefix_absolute          go to state 98
    qualified_name_infix                      go to state 99
    simple_name                               go to state 100


State 131

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix . qualified_import_suffix
   30                 | qualified_import_prefix_relative_current qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 135

    $default  reduce using rule 30 (qualified_import)

    qualified_import_suffix  go to state 207


State 132

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT . SCOPE

    SCOPE  shift, and go to state 208


State 133

   27 qualified_import: qualified_import_prefix_relative_parent qualified_name_infix . qualified_import_suffix
   31                 | qualified_import_prefix_relative_parent qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 135

    $default  reduce using rule 31 (qualified_import)

    qualified_import_suffix  go to state 209


State 134

   28 qualified_import: qualified_import_prefix_absolute qualified_name_infix . qualified_import_suffix
   32                 | qualified_import_prefix_absolute qualified_name_infix .  [SEMICOLON, COMMA]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name
   42 qualified_import_suffix: . SCOPE STAR

    SCOPE  shift, and go to state 135

    $default  reduce using rule 32 (qualified_import)

    qualified_import_suffix  go to state 210


State 135

   40 qualified_name_infix: qualified_name_infix SCOPE . simple_name
   42 qualified_import_suffix: SCOPE . STAR
  378 simple_name: . IDENT

    STAR   shift, and go to state 211
    IDENT  shift, and go to state 93

    simple_name  go to state 212


State 136

   29 qualified_import: qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 29 (qualified_import)


State 137

  212 annotation: SCOPE . annotation_qualified_name argument_list
  214 annotation_qualified_name: . annotation_qualified_name SCOPE IDENT
  215                          | . IDENT

    IDENT  shift, and go to state 138

    annotation_qualified_name  go to state 213


State 138

  215 annotation_qualified_name: IDENT .

    $default  reduce using rule 215 (annotation_qualified_name)


State 139

  209 annotation_block: ANNOTATION_BLOCK_BEGIN annotations . ANNOTATION_BLOCK_END
  210 annotations: annotations . COMMA annotation

    COMMA                 shift, and go to state 214
    ANNOTATION_BLOCK_END  shift, and go to state 215


State 140

  211 annotations: annotation .

    $default  reduce using rule 211 (annotations)


State 141

  213 annotation: annotation_qualified_name . argument_list
  214 annotation_qualified_name: annotation_qualified_name . SCOPE IDENT
  216 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    SCOPE             shift, and go to state 216
    LEFT_PARENTHESIS  shift, and go to state 217

    argument_list  go to state 218


State 142

   43 module_declaration: MODULE annotation_block SEMICOLON .

    $default  reduce using rule 43 (module_declaration)


State 143

   17 import_declaration: EXPORT USING qualified_import_prefix . IMPORT unqualified_import SEMICOLON

    IMPORT  shift, and go to state 219


State 144

   20 qualified_import_prefix: qualified_import_prefix_relative_current . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    qualified_name_infix  go to state 220
    simple_name           go to state 100


State 145

   21 qualified_import_prefix: qualified_import_prefix_relative_parent . qualified_name_infix
   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent . DOTDOT SCOPE
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  378 simple_name: . IDENT

    DOTDOT  shift, and go to state 132
    IDENT   shift, and go to state 93

    qualified_name_infix  go to state 221
    simple_name           go to state 100


State 146

   22 qualified_import_prefix: qualified_import_prefix_absolute . qualified_name_infix
   40 qualified_name_infix: . qualified_name_infix SCOPE simple_name
   41                     | . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    qualified_name_infix  go to state 222
    simple_name           go to state 100


State 147

   23 qualified_import_prefix: qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 223

    $default  reduce using rule 23 (qualified_import_prefix)


State 148

  201 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  202               | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  203 parameters: . parameters COMMA parameter
  204           | . parameter
  205 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  206          | . type simple_name ASSIGN_OP assignment_expression
  207          | . type simple_name annotation_block
  208          | . type simple_name
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_PARENTHESIS           shift, and go to state 224
    IDENT                       shift, and go to state 71

    parameters                    go to state 225
    parameter                     go to state 226
    type                          go to state 227
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 149

   62 annotation_declaration: ANNOTATION simple_name parameter_list . annotation_block SEMICOLON
   63                       | ANNOTATION simple_name parameter_list . SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 228
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    annotation_block  go to state 229


State 150

   64 constant_declaration: CONST type constant_declarators . SEMICOLON
   65 constant_declarators: constant_declarators . COMMA constant_declarator

    SEMICOLON  shift, and go to state 230
    COMMA      shift, and go to state 231


State 151

   66 constant_declarators: constant_declarator .

    $default  reduce using rule 66 (constant_declarators)


State 152

   67 constant_declarator: simple_name . argument_list annotation_block
   68                    | simple_name . argument_list
   69                    | simple_name . ASSIGN_OP conditional_expression annotation_block
   70                    | simple_name . ASSIGN_OP conditional_expression
  216 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    ASSIGN_OP         shift, and go to state 232
    LEFT_PARENTHESIS  shift, and go to state 217

    argument_list  go to state 233


State 153

   74 alias_type_declaration: TYPEDEF type simple_name . SEMICOLON

    SEMICOLON  shift, and go to state 234


State 154

   76 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE . struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   78                        | STRUCT simple_name LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   79 struct_field_declarators: . struct_field_declarators struct_field_declarator
   80                         | . struct_field_declarator
   81 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | . type simple_name annotation_block SEMICOLON
   84                        | . type simple_name SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 235
    IDENT                       shift, and go to state 71

    struct_field_declarators      go to state 236
    struct_field_declarator       go to state 237
    type                          go to state 238
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 155

   75 struct_type_declaration: STRUCT simple_name annotation_block . LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT simple_name annotation_block . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    LEFT_CURLY_BRACE  shift, and go to state 239


State 156

   86 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE . enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   88                      | ENUM simple_name LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   89 enum_value_declarators: . enum_value_declarators COMMA enum_value_declarator
   90                       | . enum_value_declarator
   91 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   92                      | . simple_name ASSIGN_OP assignment_expression
   93                      | . simple_name annotation_block
   94                      | . simple_name
  378 simple_name: . IDENT

    RIGHT_CURLY_BRACE  shift, and go to state 240
    IDENT              shift, and go to state 93

    enum_value_declarators  go to state 241
    enum_value_declarator   go to state 242
    simple_name             go to state 243


State 157

   85 enum_type_declaration: ENUM simple_name annotation_block . LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM simple_name annotation_block . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON

    LEFT_CURLY_BRACE  shift, and go to state 244


State 158

    1 mdl: mdl_version import_declarations module_declaration global_declarations .  [$end]
   12 global_declarations: global_declarations . global_declaration
   54 global_declaration: . EXPORT annotation_declaration
   55                   | . EXPORT constant_declaration
   56                   | . EXPORT type_declaration
   57                   | . EXPORT function_declaration
   58                   | . annotation_declaration
   59                   | . constant_declaration
   60                   | . type_declaration
   61                   | . function_declaration
   62 annotation_declaration: . ANNOTATION simple_name parameter_list annotation_block SEMICOLON
   63                       | . ANNOTATION simple_name parameter_list SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   95 function_declaration: . type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON
   96                     | . type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON
   97                     | . type annotation_block simple_name parameter_list annotation_block SEMICOLON
   98                     | . type annotation_block simple_name parameter_list UNIFORM SEMICOLON
   99                     | . type annotation_block simple_name parameter_list VARYING SEMICOLON
  100                     | . type annotation_block simple_name parameter_list SEMICOLON
  101                     | . type simple_name parameter_list UNIFORM annotation_block SEMICOLON
  102                     | . type simple_name parameter_list VARYING annotation_block SEMICOLON
  103                     | . type simple_name parameter_list annotation_block SEMICOLON
  104                     | . type simple_name parameter_list UNIFORM SEMICOLON
  105                     | . type simple_name parameter_list VARYING SEMICOLON
  106                     | . type simple_name parameter_list SEMICOLON
  107                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement
  108                     | . type annotation_block simple_name parameter_list VARYING annotation_block compound_statement
  109                     | . type annotation_block simple_name parameter_list annotation_block compound_statement
  110                     | . type annotation_block simple_name parameter_list UNIFORM compound_statement
  111                     | . type annotation_block simple_name parameter_list VARYING compound_statement
  112                     | . type annotation_block simple_name parameter_list compound_statement
  113                     | . type simple_name parameter_list UNIFORM annotation_block compound_statement
  114                     | . type simple_name parameter_list VARYING annotation_block compound_statement
  115                     | . type simple_name parameter_list annotation_block compound_statement
  116                     | . type simple_name parameter_list UNIFORM compound_statement
  117                     | . type simple_name parameter_list VARYING compound_statement
  118                     | . type simple_name parameter_list compound_statement
  119                     | . type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | . type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | . type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | . type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | . type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | . type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  125                     | . type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | . type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | . type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | . type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | . type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | . type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | . type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  133                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | . type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    EXPORT                      shift, and go to state 120
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    ANNOTATION                  shift, and go to state 65
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    $default  reduce using rule 1 (mdl)

    global_declaration            go to state 121
    annotation_declaration        go to state 77
    constant_declaration          go to state 78
    type_declaration              go to state 79
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    function_declaration          go to state 83
    type                          go to state 84
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 159

   95 function_declaration: type annotation_block simple_name . parameter_list UNIFORM annotation_block SEMICOLON
   96                     | type annotation_block simple_name . parameter_list VARYING annotation_block SEMICOLON
   97                     | type annotation_block simple_name . parameter_list annotation_block SEMICOLON
   98                     | type annotation_block simple_name . parameter_list UNIFORM SEMICOLON
   99                     | type annotation_block simple_name . parameter_list VARYING SEMICOLON
  100                     | type annotation_block simple_name . parameter_list SEMICOLON
  107                     | type annotation_block simple_name . parameter_list UNIFORM annotation_block compound_statement
  108                     | type annotation_block simple_name . parameter_list VARYING annotation_block compound_statement
  109                     | type annotation_block simple_name . parameter_list annotation_block compound_statement
  110                     | type annotation_block simple_name . parameter_list UNIFORM compound_statement
  111                     | type annotation_block simple_name . parameter_list VARYING compound_statement
  112                     | type annotation_block simple_name . parameter_list compound_statement
  119                     | type annotation_block simple_name . parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block simple_name . parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name . parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block simple_name . parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name . parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block simple_name . parameter_list ASSIGN_OP comma_expression SEMICOLON
  131                     | type annotation_block simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name . LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  201 parameter_list: . LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS
  202               | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 245

    parameter_list  go to state 246


State 160

  133 function_declaration: type simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  201 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  202               | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  203 parameters: . parameters COMMA parameter
  204           | . parameter
  205 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  206          | . type simple_name ASSIGN_OP assignment_expression
  207          | . type simple_name annotation_block
  208          | . type simple_name
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    STAR                        shift, and go to state 247
    RIGHT_PARENTHESIS           shift, and go to state 224
    IDENT                       shift, and go to state 71

    parameters                    go to state 225
    parameter                     go to state 226
    type                          go to state 227
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 161

  101 function_declaration: type simple_name parameter_list . UNIFORM annotation_block SEMICOLON
  102                     | type simple_name parameter_list . VARYING annotation_block SEMICOLON
  103                     | type simple_name parameter_list . annotation_block SEMICOLON
  104                     | type simple_name parameter_list . UNIFORM SEMICOLON
  105                     | type simple_name parameter_list . VARYING SEMICOLON
  106                     | type simple_name parameter_list . SEMICOLON
  113                     | type simple_name parameter_list . UNIFORM annotation_block compound_statement
  114                     | type simple_name parameter_list . VARYING annotation_block compound_statement
  115                     | type simple_name parameter_list . annotation_block compound_statement
  116                     | type simple_name parameter_list . UNIFORM compound_statement
  117                     | type simple_name parameter_list . VARYING compound_statement
  118                     | type simple_name parameter_list . compound_statement
  125                     | type simple_name parameter_list . UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  126                     | type simple_name parameter_list . VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  127                     | type simple_name parameter_list . annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type simple_name parameter_list . UNIFORM ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name parameter_list . VARYING ASSIGN_OP comma_expression SEMICOLON
  130                     | type simple_name parameter_list . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 248
    UNIFORM                 shift, and go to state 249
    VARYING                 shift, and go to state 250
    ASSIGN_OP               shift, and go to state 251
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102
    LEFT_CURLY_BRACE        shift, and go to state 252

    compound_statement  go to state 253
    annotation_block    go to state 254


State 162

  311 string_literal: STRING_LITERAL .

    $default  reduce using rule 311 (string_literal)


State 163

  306 boolean_literal: TRUE .

    $default  reduce using rule 306 (boolean_literal)


State 164

  307 boolean_literal: FALSE .

    $default  reduce using rule 307 (boolean_literal)


State 165

   45 variable_declaration: . type variable_declarators SEMICOLON
  300 let_expression: LET . variable_declaration IN unary_expression
  301               | LET . LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    LEFT_CURLY_BRACE            shift, and go to state 255
    IDENT                       shift, and go to state 71

    variable_declaration          go to state 256
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 166

  299 cast_expression: CAST . LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

    LEFT_ANGLE_BRACKET  shift, and go to state 258


State 167

  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  272                 | BITWISE_COMPLEMENT_OP . unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 259
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 168

  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  273                 | LOGICAL_NOT_OP . unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 260
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 169

  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  274                 | POSITIVE_OP . unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 261
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 170

  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  275                 | NEGATIVE_OP . unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 262
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 171

  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  276                 | INCREMENT_OP . unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 263
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 172

  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  277                 | DECREMENT_OP . unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 264
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 173

  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  292                           | LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 265
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 174

  317 array_type: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 317 (array_type)


State 175

  315 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET . simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 266


State 176

  308 integer_literal: INTEGER_LITERAL .

    $default  reduce using rule 308 (integer_literal)


State 177

  309 floating_literal: FLOATING_LITERAL .

    $default  reduce using rule 309 (floating_literal)


State 178

  316 array_type: simple_type LEFT_SQUARE_BRACKET comma_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 267


State 179

  226 comma_expression: assignment_expression . COMMA comma_expression
  227                 | assignment_expression .  [SEMICOLON, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET]

    COMMA  shift, and go to state 268

    $default  reduce using rule 227 (comma_expression)


State 180

  240 assignment_expression: conditional_expression .

    $default  reduce using rule 240 (assignment_expression)


State 181

  228 assignment_expression: logical_or_expression . ASSIGN_OP assignment_expression
  229                      | logical_or_expression . BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | logical_or_expression . BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | logical_or_expression . BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | logical_or_expression . SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | logical_or_expression . SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | logical_or_expression . UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | logical_or_expression . MULTIPLY_ASSIGN_OP assignment_expression
  236                      | logical_or_expression . DIVIDE_ASSIGN_OP assignment_expression
  237                      | logical_or_expression . MODULO_ASSIGN_OP assignment_expression
  238                      | logical_or_expression . PLUS_ASSIGN_OP assignment_expression
  239                      | logical_or_expression . MINUS_ASSIGN_OP assignment_expression
  241 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | logical_or_expression .  [SEMICOLON, COMMA, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  243 logical_or_expression: logical_or_expression . LOGICAL_OR_OP logical_and_expression

    ASSIGN_OP                       shift, and go to state 269
    BITWISE_OR_ASSIGN_OP            shift, and go to state 270
    BITWISE_AND_ASSIGN_OP           shift, and go to state 271
    BITWISE_XOR_ASSIGN_OP           shift, and go to state 272
    SHIFT_LEFT_ASSIGN_OP            shift, and go to state 273
    SHIFT_RIGHT_ASSIGN_OP           shift, and go to state 274
    UNSIGNED_SHIFT_RIGHT_ASSIGN_OP  shift, and go to state 275
    MULTIPLY_ASSIGN_OP              shift, and go to state 276
    DIVIDE_ASSIGN_OP                shift, and go to state 277
    MODULO_ASSIGN_OP                shift, and go to state 278
    PLUS_ASSIGN_OP                  shift, and go to state 279
    MINUS_ASSIGN_OP                 shift, and go to state 280
    CONDITIONAL_OP                  shift, and go to state 281
    LOGICAL_OR_OP                   shift, and go to state 282

    $default  reduce using rule 242 (conditional_expression)


State 182

  244 logical_or_expression: logical_and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  245 logical_and_expression: logical_and_expression . LOGICAL_AND_OP inclusive_or_expression

    LOGICAL_AND_OP  shift, and go to state 283

    $default  reduce using rule 244 (logical_or_expression)


State 183

  246 logical_and_expression: inclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  247 inclusive_or_expression: inclusive_or_expression . BITWISE_OR_OP exclusive_or_expression

    BITWISE_OR_OP  shift, and go to state 284

    $default  reduce using rule 246 (logical_and_expression)


State 184

  248 inclusive_or_expression: exclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  249 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR_OP and_expression

    BITWISE_XOR_OP  shift, and go to state 285

    $default  reduce using rule 248 (inclusive_or_expression)


State 185

  250 exclusive_or_expression: and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  251 and_expression: and_expression . BITWISE_AND_OP equality_expression

    BITWISE_AND_OP  shift, and go to state 286

    $default  reduce using rule 250 (exclusive_or_expression)


State 186

  252 and_expression: equality_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  253 equality_expression: equality_expression . EQUAL_OP relational_expression
  254                    | equality_expression . NOT_EQUAL_OP relational_expression

    EQUAL_OP      shift, and go to state 287
    NOT_EQUAL_OP  shift, and go to state 288

    $default  reduce using rule 252 (and_expression)


State 187

  255 equality_expression: relational_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  256 relational_expression: relational_expression . LEFT_ANGLE_BRACKET shift_expression
  257                      | relational_expression . LESS_OR_EQUAL_OP shift_expression
  258                      | relational_expression . GREATER_OR_EQUAL_OP shift_expression
  259                      | relational_expression . RIGHT_ANGLE_BRACKET shift_expression

    LESS_OR_EQUAL_OP     shift, and go to state 289
    GREATER_OR_EQUAL_OP  shift, and go to state 290
    LEFT_ANGLE_BRACKET   shift, and go to state 291
    RIGHT_ANGLE_BRACKET  shift, and go to state 292

    $default  reduce using rule 255 (equality_expression)


State 188

  260 relational_expression: shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  261 shift_expression: shift_expression . SHIFT_LEFT_OP additive_expression
  262                 | shift_expression . SHIFT_RIGHT_OP additive_expression
  263                 | shift_expression . UNSIGNED_SHIFT_RIGHT_OP additive_expression

    SHIFT_LEFT_OP            shift, and go to state 293
    SHIFT_RIGHT_OP           shift, and go to state 294
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 295

    $default  reduce using rule 260 (relational_expression)


State 189

  264 shift_expression: additive_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  265 additive_expression: additive_expression . POSITIVE_OP multiplicative_expression
  266                    | additive_expression . NEGATIVE_OP multiplicative_expression

    POSITIVE_OP  shift, and go to state 296
    NEGATIVE_OP  shift, and go to state 297

    $default  reduce using rule 264 (shift_expression)


State 190

  267 additive_expression: multiplicative_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, POSITIVE_OP, NEGATIVE_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  268 multiplicative_expression: multiplicative_expression . STAR unary_expression
  269                          | multiplicative_expression . DIVIDE_OP unary_expression
  270                          | multiplicative_expression . MODULO_OP unary_expression

    DIVIDE_OP  shift, and go to state 298
    MODULO_OP  shift, and go to state 299
    STAR       shift, and go to state 300

    $default  reduce using rule 267 (additive_expression)


State 191

  271 multiplicative_expression: unary_expression .

    $default  reduce using rule 271 (multiplicative_expression)


State 192

  278 unary_expression: postfix_expression .

    $default  reduce using rule 278 (unary_expression)


State 193

  216 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS
  280 postfix_expression: matched_postfix_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, STAR, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  282 matched_postfix_expression: matched_postfix_expression . INCREMENT_OP
  283                           | matched_postfix_expression . DECREMENT_OP
  284                           | matched_postfix_expression . DOT simple_name
  285                           | matched_postfix_expression . argument_list
  286                           | matched_postfix_expression . LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET

    INCREMENT_OP         shift, and go to state 301
    DECREMENT_OP         shift, and go to state 302
    DOT                  shift, and go to state 303
    LEFT_PARENTHESIS     shift, and go to state 217
    LEFT_SQUARE_BRACKET  shift, and go to state 304

    $default  reduce using rule 280 (postfix_expression)

    argument_list  go to state 305


State 194

  287 matched_postfix_expression: matched_primary_expression .

    $default  reduce using rule 287 (matched_postfix_expression)


State 195

  216 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS
  281 postfix_expression: unmatched_postfix_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, STAR, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  293 unmatched_postfix_expression: unmatched_postfix_expression . INCREMENT_OP
  294                             | unmatched_postfix_expression . DECREMENT_OP
  295                             | unmatched_postfix_expression . DOT simple_name
  296                             | unmatched_postfix_expression . argument_list

    INCREMENT_OP      shift, and go to state 306
    DECREMENT_OP      shift, and go to state 307
    DOT               shift, and go to state 308
    LEFT_PARENTHESIS  shift, and go to state 217

    $default  reduce using rule 281 (postfix_expression)

    argument_list  go to state 309


State 196

  297 unmatched_postfix_expression: unmatched_primary_expression .

    $default  reduce using rule 297 (unmatched_postfix_expression)


State 197

  288 matched_postfix_expression: cast_expression .

    $default  reduce using rule 288 (matched_postfix_expression)


State 198

  279 unary_expression: let_expression .

    $default  reduce using rule 279 (unary_expression)


State 199

  291 matched_primary_expression: literal_expression .

    $default  reduce using rule 291 (matched_primary_expression)


State 200

  302 literal_expression: boolean_literal .

    $default  reduce using rule 302 (literal_expression)


State 201

  303 literal_expression: integer_literal .

    $default  reduce using rule 303 (literal_expression)


State 202

  304 literal_expression: floating_literal .

    $default  reduce using rule 304 (literal_expression)


State 203

  305 literal_expression: string_literal .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, COLON, ANNOTATION_BLOCK_BEGIN, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  310 string_literal: string_literal . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 310

    $default  reduce using rule 305 (literal_expression)


State 204

  289 matched_primary_expression: simple_type . LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  298 unmatched_primary_expression: simple_type .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, COLON, ANNOTATION_BLOCK_BEGIN, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]

    LEFT_SQUARE_BRACKET  shift, and go to state 311

    $default  reduce using rule 298 (unmatched_primary_expression)


State 205

  376 relative_type_qualified_name: relative_type_qualified_name SCOPE IDENT .

    $default  reduce using rule 376 (relative_type_qualified_name)


State 206

   18 qualified_imports: qualified_imports COMMA qualified_import .

    $default  reduce using rule 18 (qualified_imports)


State 207

   26 qualified_import: qualified_import_prefix_relative_current qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 26 (qualified_import)


State 208

   37 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE .

    $default  reduce using rule 37 (qualified_import_prefix_relative_parent)


State 209

   27 qualified_import: qualified_import_prefix_relative_parent qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 27 (qualified_import)


State 210

   28 qualified_import: qualified_import_prefix_absolute qualified_name_infix qualified_import_suffix .

    $default  reduce using rule 28 (qualified_import)


State 211

   42 qualified_import_suffix: SCOPE STAR .

    $default  reduce using rule 42 (qualified_import_suffix)


State 212

   40 qualified_name_infix: qualified_name_infix SCOPE simple_name .

    $default  reduce using rule 40 (qualified_name_infix)


State 213

  212 annotation: SCOPE annotation_qualified_name . argument_list
  214 annotation_qualified_name: annotation_qualified_name . SCOPE IDENT
  216 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    SCOPE             shift, and go to state 216
    LEFT_PARENTHESIS  shift, and go to state 217

    argument_list  go to state 312


State 214

  210 annotations: annotations COMMA . annotation
  212 annotation: . SCOPE annotation_qualified_name argument_list
  213           | . annotation_qualified_name argument_list
  214 annotation_qualified_name: . annotation_qualified_name SCOPE IDENT
  215                          | . IDENT

    SCOPE  shift, and go to state 137
    IDENT  shift, and go to state 138

    annotation                 go to state 313
    annotation_qualified_name  go to state 141


State 215

  209 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END .

    $default  reduce using rule 209 (annotation_block)


State 216

  214 annotation_qualified_name: annotation_qualified_name SCOPE . IDENT

    IDENT  shift, and go to state 314


State 217

  216 argument_list: LEFT_PARENTHESIS . positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | LEFT_PARENTHESIS . named_arguments RIGHT_PARENTHESIS
  218              | LEFT_PARENTHESIS . positional_arguments RIGHT_PARENTHESIS
  219              | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  220 named_arguments: . named_arguments COMMA named_argument
  221                | . named_argument
  222 positional_arguments: . positional_arguments COMMA positional_argument
  223                     | . positional_argument
  224 named_argument: . simple_name COLON assignment_expression
  225 positional_argument: . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT
  378 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 315
    IDENT                       shift, and go to state 316
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    named_arguments               go to state 317
    positional_arguments          go to state 318
    named_argument                go to state 319
    positional_argument           go to state 320
    assignment_expression         go to state 321
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88
    simple_name                   go to state 322


State 218

  213 annotation: annotation_qualified_name argument_list .

    $default  reduce using rule 213 (annotation)


State 219

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT . unqualified_import SEMICOLON
   24 unqualified_import: . unqualified_import_simple_names
   25                   | . STAR
   34 unqualified_import_simple_names: . unqualified_import_simple_names COMMA simple_name
   35                                | . simple_name
  378 simple_name: . IDENT

    STAR   shift, and go to state 323
    IDENT  shift, and go to state 93

    unqualified_import               go to state 324
    unqualified_import_simple_names  go to state 325
    simple_name                      go to state 326


State 220

   20 qualified_import_prefix: qualified_import_prefix_relative_current qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 223

    $default  reduce using rule 20 (qualified_import_prefix)


State 221

   21 qualified_import_prefix: qualified_import_prefix_relative_parent qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 223

    $default  reduce using rule 21 (qualified_import_prefix)


State 222

   22 qualified_import_prefix: qualified_import_prefix_absolute qualified_name_infix .  [IMPORT]
   40 qualified_name_infix: qualified_name_infix . SCOPE simple_name

    SCOPE  shift, and go to state 223

    $default  reduce using rule 22 (qualified_import_prefix)


State 223

   40 qualified_name_infix: qualified_name_infix SCOPE . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 212


State 224

  202 parameter_list: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 202 (parameter_list)


State 225

  201 parameter_list: LEFT_PARENTHESIS parameters . RIGHT_PARENTHESIS
  203 parameters: parameters . COMMA parameter

    COMMA              shift, and go to state 327
    RIGHT_PARENTHESIS  shift, and go to state 328


State 226

  204 parameters: parameter .

    $default  reduce using rule 204 (parameters)


State 227

  205 parameter: type . simple_name ASSIGN_OP assignment_expression annotation_block
  206          | type . simple_name ASSIGN_OP assignment_expression
  207          | type . simple_name annotation_block
  208          | type . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 329


State 228

   63 annotation_declaration: ANNOTATION simple_name parameter_list SEMICOLON .

    $default  reduce using rule 63 (annotation_declaration)


State 229

   62 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 330


State 230

   64 constant_declaration: CONST type constant_declarators SEMICOLON .

    $default  reduce using rule 64 (constant_declaration)


State 231

   65 constant_declarators: constant_declarators COMMA . constant_declarator
   67 constant_declarator: . simple_name argument_list annotation_block
   68                    | . simple_name argument_list
   69                    | . simple_name ASSIGN_OP conditional_expression annotation_block
   70                    | . simple_name ASSIGN_OP conditional_expression
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    constant_declarator  go to state 331
    simple_name          go to state 152


State 232

   69 constant_declarator: simple_name ASSIGN_OP . conditional_expression annotation_block
   70                    | simple_name ASSIGN_OP . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    conditional_expression        go to state 332
    logical_or_expression         go to state 333
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 233

   67 constant_declarator: simple_name argument_list . annotation_block
   68                    | simple_name argument_list .  [SEMICOLON, COMMA]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    $default  reduce using rule 68 (constant_declarator)

    annotation_block  go to state 334


State 234

   74 alias_type_declaration: TYPEDEF type simple_name SEMICOLON .

    $default  reduce using rule 74 (alias_type_declaration)


State 235

   78 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 335


State 236

   76 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators . RIGHT_CURLY_BRACE SEMICOLON
   79 struct_field_declarators: struct_field_declarators . struct_field_declarator
   81 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | . type simple_name annotation_block SEMICOLON
   84                        | . type simple_name SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 336
    IDENT                       shift, and go to state 71

    struct_field_declarator       go to state 337
    type                          go to state 238
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 237

   80 struct_field_declarators: struct_field_declarator .

    $default  reduce using rule 80 (struct_field_declarators)


State 238

   81 struct_field_declarator: type . simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | type . simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | type . simple_name annotation_block SEMICOLON
   84                        | type . simple_name SEMICOLON
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 338


State 239

   75 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE . struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | STRUCT simple_name annotation_block LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   79 struct_field_declarators: . struct_field_declarators struct_field_declarator
   80                         | . struct_field_declarator
   81 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | . type simple_name annotation_block SEMICOLON
   84                        | . type simple_name SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 339
    IDENT                       shift, and go to state 71

    struct_field_declarators      go to state 340
    struct_field_declarator       go to state 237
    type                          go to state 238
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 240

   88 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 341


State 241

   86 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators . RIGHT_CURLY_BRACE SEMICOLON
   89 enum_value_declarators: enum_value_declarators . COMMA enum_value_declarator

    COMMA              shift, and go to state 342
    RIGHT_CURLY_BRACE  shift, and go to state 343


State 242

   90 enum_value_declarators: enum_value_declarator .

    $default  reduce using rule 90 (enum_value_declarators)


State 243

   91 enum_value_declarator: simple_name . ASSIGN_OP assignment_expression annotation_block
   92                      | simple_name . ASSIGN_OP assignment_expression
   93                      | simple_name . annotation_block
   94                      | simple_name .  [COMMA, RIGHT_CURLY_BRACE]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 344
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    $default  reduce using rule 94 (enum_value_declarator)

    annotation_block  go to state 345


State 244

   85 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE . enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | ENUM simple_name annotation_block LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE SEMICOLON
   89 enum_value_declarators: . enum_value_declarators COMMA enum_value_declarator
   90                       | . enum_value_declarator
   91 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   92                      | . simple_name ASSIGN_OP assignment_expression
   93                      | . simple_name annotation_block
   94                      | . simple_name
  378 simple_name: . IDENT

    RIGHT_CURLY_BRACE  shift, and go to state 346
    IDENT              shift, and go to state 93

    enum_value_declarators  go to state 347
    enum_value_declarator   go to state 242
    simple_name             go to state 243


State 245

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name LEFT_PARENTHESIS . STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON
  201 parameter_list: LEFT_PARENTHESIS . parameters RIGHT_PARENTHESIS
  202               | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  203 parameters: . parameters COMMA parameter
  204           | . parameter
  205 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  206          | . type simple_name ASSIGN_OP assignment_expression
  207          | . type simple_name annotation_block
  208          | . type simple_name
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    STAR                        shift, and go to state 348
    RIGHT_PARENTHESIS           shift, and go to state 224
    IDENT                       shift, and go to state 71

    parameters                    go to state 225
    parameter                     go to state 226
    type                          go to state 227
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 246

   95 function_declaration: type annotation_block simple_name parameter_list . UNIFORM annotation_block SEMICOLON
   96                     | type annotation_block simple_name parameter_list . VARYING annotation_block SEMICOLON
   97                     | type annotation_block simple_name parameter_list . annotation_block SEMICOLON
   98                     | type annotation_block simple_name parameter_list . UNIFORM SEMICOLON
   99                     | type annotation_block simple_name parameter_list . VARYING SEMICOLON
  100                     | type annotation_block simple_name parameter_list . SEMICOLON
  107                     | type annotation_block simple_name parameter_list . UNIFORM annotation_block compound_statement
  108                     | type annotation_block simple_name parameter_list . VARYING annotation_block compound_statement
  109                     | type annotation_block simple_name parameter_list . annotation_block compound_statement
  110                     | type annotation_block simple_name parameter_list . UNIFORM compound_statement
  111                     | type annotation_block simple_name parameter_list . VARYING compound_statement
  112                     | type annotation_block simple_name parameter_list . compound_statement
  119                     | type annotation_block simple_name parameter_list . UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON
  120                     | type annotation_block simple_name parameter_list . VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON
  121                     | type annotation_block simple_name parameter_list . annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block simple_name parameter_list . UNIFORM ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name parameter_list . VARYING ASSIGN_OP comma_expression SEMICOLON
  124                     | type annotation_block simple_name parameter_list . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 349
    UNIFORM                 shift, and go to state 350
    VARYING                 shift, and go to state 351
    ASSIGN_OP               shift, and go to state 352
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102
    LEFT_CURLY_BRACE        shift, and go to state 252

    compound_statement  go to state 353
    annotation_block    go to state 354


State 247

  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 355


State 248

  106 function_declaration: type simple_name parameter_list SEMICOLON .

    $default  reduce using rule 106 (function_declaration)


State 249

  101 function_declaration: type simple_name parameter_list UNIFORM . annotation_block SEMICOLON
  104                     | type simple_name parameter_list UNIFORM . SEMICOLON
  113                     | type simple_name parameter_list UNIFORM . annotation_block compound_statement
  116                     | type simple_name parameter_list UNIFORM . compound_statement
  125                     | type simple_name parameter_list UNIFORM . annotation_block ASSIGN_OP comma_expression SEMICOLON
  128                     | type simple_name parameter_list UNIFORM . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 356
    ASSIGN_OP               shift, and go to state 357
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102
    LEFT_CURLY_BRACE        shift, and go to state 252

    compound_statement  go to state 358
    annotation_block    go to state 359


State 250

  102 function_declaration: type simple_name parameter_list VARYING . annotation_block SEMICOLON
  105                     | type simple_name parameter_list VARYING . SEMICOLON
  114                     | type simple_name parameter_list VARYING . annotation_block compound_statement
  117                     | type simple_name parameter_list VARYING . compound_statement
  126                     | type simple_name parameter_list VARYING . annotation_block ASSIGN_OP comma_expression SEMICOLON
  129                     | type simple_name parameter_list VARYING . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 360
    ASSIGN_OP               shift, and go to state 361
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102
    LEFT_CURLY_BRACE        shift, and go to state 252

    compound_statement  go to state 362
    annotation_block    go to state 363


State 251

  130 function_declaration: type simple_name parameter_list ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 364
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 252

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  135                   | LEFT_CURLY_BRACE . statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  136                   | LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
  137 statements: . statements statement
  138           | . statement
  139 statement: . matched_statement
  140          | . unmatched_statement
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    RIGHT_CURLY_BRACE           shift, and go to state 374
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    statements                    go to state 379
    statement                     go to state 380
    matched_statement             go to state 381
    unmatched_statement           go to state 382
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 253

  118 function_declaration: type simple_name parameter_list compound_statement .

    $default  reduce using rule 118 (function_declaration)


State 254

  103 function_declaration: type simple_name parameter_list annotation_block . SEMICOLON
  115                     | type simple_name parameter_list annotation_block . compound_statement
  127                     | type simple_name parameter_list annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 397
    ASSIGN_OP         shift, and go to state 398
    LEFT_CURLY_BRACE  shift, and go to state 252

    compound_statement  go to state 399


State 255

   14 variable_declarations: . variable_declarations variable_declaration
   15                      | . variable_declaration
   45 variable_declaration: . type variable_declarators SEMICOLON
  301 let_expression: LET LEFT_CURLY_BRACE . variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    variable_declarations         go to state 400
    variable_declaration          go to state 401
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 256

  300 let_expression: LET variable_declaration . IN unary_expression

    IN  shift, and go to state 402


State 257

   45 variable_declaration: type . variable_declarators SEMICOLON
   46 variable_declarators: . variable_declarators COMMA variable_declarator
   47                     | . variable_declarator
   48 variable_declarator: . simple_name argument_list annotation_block
   49                    | . simple_name argument_list
   50                    | . simple_name ASSIGN_OP assignment_expression annotation_block
   51                    | . simple_name ASSIGN_OP assignment_expression
   52                    | . simple_name annotation_block
   53                    | . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    variable_declarators  go to state 403
    variable_declarator   go to state 404
    simple_name           go to state 405


State 258

  299 cast_expression: CAST LEFT_ANGLE_BRACKET . type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    type                          go to state 406
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 259

  272 unary_expression: BITWISE_COMPLEMENT_OP unary_expression .

    $default  reduce using rule 272 (unary_expression)


State 260

  273 unary_expression: LOGICAL_NOT_OP unary_expression .

    $default  reduce using rule 273 (unary_expression)


State 261

  274 unary_expression: POSITIVE_OP unary_expression .

    $default  reduce using rule 274 (unary_expression)


State 262

  275 unary_expression: NEGATIVE_OP unary_expression .

    $default  reduce using rule 275 (unary_expression)


State 263

  276 unary_expression: INCREMENT_OP unary_expression .

    $default  reduce using rule 276 (unary_expression)


State 264

  277 unary_expression: DECREMENT_OP unary_expression .

    $default  reduce using rule 277 (unary_expression)


State 265

  292 matched_primary_expression: LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 407


State 266

  315 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name . RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 408


State 267

  316 array_type: simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 316 (array_type)


State 268

  226 comma_expression: . assignment_expression COMMA comma_expression
  226                 | assignment_expression COMMA . comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 409
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 269

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  228                      | logical_or_expression ASSIGN_OP . assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 410
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 270

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  229                      | logical_or_expression BITWISE_OR_ASSIGN_OP . assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 411
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 271

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  230                      | logical_or_expression BITWISE_AND_ASSIGN_OP . assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 412
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 272

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  231                      | logical_or_expression BITWISE_XOR_ASSIGN_OP . assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 413
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 273

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  232                      | logical_or_expression SHIFT_LEFT_ASSIGN_OP . assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 414
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 274

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  233                      | logical_or_expression SHIFT_RIGHT_ASSIGN_OP . assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 415
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 275

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP . assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 416
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 276

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  235                      | logical_or_expression MULTIPLY_ASSIGN_OP . assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 417
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 277

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  236                      | logical_or_expression DIVIDE_ASSIGN_OP . assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 418
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 278

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  237                      | logical_or_expression MODULO_ASSIGN_OP . assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 419
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 279

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  238                      | logical_or_expression PLUS_ASSIGN_OP . assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 420
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 280

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  239                      | logical_or_expression MINUS_ASSIGN_OP . assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 421
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 281

  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | logical_or_expression CONDITIONAL_OP . comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 422
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 282

  243 logical_or_expression: logical_or_expression LOGICAL_OR_OP . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    logical_and_expression        go to state 423
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 283

  245 logical_and_expression: logical_and_expression LOGICAL_AND_OP . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    inclusive_or_expression       go to state 424
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 284

  247 inclusive_or_expression: inclusive_or_expression BITWISE_OR_OP . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    exclusive_or_expression       go to state 425
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 285

  249 exclusive_or_expression: exclusive_or_expression BITWISE_XOR_OP . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    and_expression                go to state 426
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 286

  251 and_expression: and_expression BITWISE_AND_OP . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    equality_expression           go to state 427
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 287

  253 equality_expression: equality_expression EQUAL_OP . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    relational_expression         go to state 428
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 288

  254 equality_expression: equality_expression NOT_EQUAL_OP . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    relational_expression         go to state 429
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 289

  257 relational_expression: relational_expression LESS_OR_EQUAL_OP . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    shift_expression              go to state 430
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 290

  258 relational_expression: relational_expression GREATER_OR_EQUAL_OP . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    shift_expression              go to state 431
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 291

  256 relational_expression: relational_expression LEFT_ANGLE_BRACKET . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    shift_expression              go to state 432
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 292

  259 relational_expression: relational_expression RIGHT_ANGLE_BRACKET . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    shift_expression              go to state 433
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 293

  261 shift_expression: shift_expression SHIFT_LEFT_OP . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    additive_expression           go to state 434
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 294

  262 shift_expression: shift_expression SHIFT_RIGHT_OP . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    additive_expression           go to state 435
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 295

  263 shift_expression: shift_expression UNSIGNED_SHIFT_RIGHT_OP . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    additive_expression           go to state 436
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 296

  265 additive_expression: additive_expression POSITIVE_OP . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    multiplicative_expression     go to state 437
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 297

  266 additive_expression: additive_expression NEGATIVE_OP . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    multiplicative_expression     go to state 438
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 298

  269 multiplicative_expression: multiplicative_expression DIVIDE_OP . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 439
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 299

  270 multiplicative_expression: multiplicative_expression MODULO_OP . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 440
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 300

  268 multiplicative_expression: multiplicative_expression STAR . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 441
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 301

  282 matched_postfix_expression: matched_postfix_expression INCREMENT_OP .

    $default  reduce using rule 282 (matched_postfix_expression)


State 302

  283 matched_postfix_expression: matched_postfix_expression DECREMENT_OP .

    $default  reduce using rule 283 (matched_postfix_expression)


State 303

  284 matched_postfix_expression: matched_postfix_expression DOT . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 442


State 304

  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  286                           | matched_postfix_expression LEFT_SQUARE_BRACKET . comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 443
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 305

  285 matched_postfix_expression: matched_postfix_expression argument_list .

    $default  reduce using rule 285 (matched_postfix_expression)


State 306

  293 unmatched_postfix_expression: unmatched_postfix_expression INCREMENT_OP .

    $default  reduce using rule 293 (unmatched_postfix_expression)


State 307

  294 unmatched_postfix_expression: unmatched_postfix_expression DECREMENT_OP .

    $default  reduce using rule 294 (unmatched_postfix_expression)


State 308

  295 unmatched_postfix_expression: unmatched_postfix_expression DOT . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 444


State 309

  296 unmatched_postfix_expression: unmatched_postfix_expression argument_list .

    $default  reduce using rule 296 (unmatched_postfix_expression)


State 310

  310 string_literal: string_literal STRING_LITERAL .

    $default  reduce using rule 310 (string_literal)


State 311

  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | simple_type LEFT_SQUARE_BRACKET . comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_SQUARE_BRACKET        shift, and go to state 445
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 446
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 312

  212 annotation: SCOPE annotation_qualified_name argument_list .

    $default  reduce using rule 212 (annotation)


State 313

  210 annotations: annotations COMMA annotation .

    $default  reduce using rule 210 (annotations)


State 314

  214 annotation_qualified_name: annotation_qualified_name SCOPE IDENT .

    $default  reduce using rule 214 (annotation_qualified_name)


State 315

  219 argument_list: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 219 (argument_list)


State 316

  377 relative_type_qualified_name: IDENT .  [COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, SCOPE, STAR, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  378 simple_name: IDENT .  [COLON]

    COLON     reduce using rule 378 (simple_name)
    $default  reduce using rule 377 (relative_type_qualified_name)


State 317

  217 argument_list: LEFT_PARENTHESIS named_arguments . RIGHT_PARENTHESIS
  220 named_arguments: named_arguments . COMMA named_argument

    COMMA              shift, and go to state 447
    RIGHT_PARENTHESIS  shift, and go to state 448


State 318

  216 argument_list: LEFT_PARENTHESIS positional_arguments . COMMA named_arguments RIGHT_PARENTHESIS
  218              | LEFT_PARENTHESIS positional_arguments . RIGHT_PARENTHESIS
  222 positional_arguments: positional_arguments . COMMA positional_argument

    COMMA              shift, and go to state 449
    RIGHT_PARENTHESIS  shift, and go to state 450


State 319

  221 named_arguments: named_argument .

    $default  reduce using rule 221 (named_arguments)


State 320

  223 positional_arguments: positional_argument .

    $default  reduce using rule 223 (positional_arguments)


State 321

  225 positional_argument: assignment_expression .

    $default  reduce using rule 225 (positional_argument)


State 322

  224 named_argument: simple_name . COLON assignment_expression

    COLON  shift, and go to state 451


State 323

   25 unqualified_import: STAR .

    $default  reduce using rule 25 (unqualified_import)


State 324

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import . SEMICOLON

    SEMICOLON  shift, and go to state 452


State 325

   24 unqualified_import: unqualified_import_simple_names .  [SEMICOLON]
   34 unqualified_import_simple_names: unqualified_import_simple_names . COMMA simple_name

    COMMA  shift, and go to state 453

    $default  reduce using rule 24 (unqualified_import)


State 326

   35 unqualified_import_simple_names: simple_name .

    $default  reduce using rule 35 (unqualified_import_simple_names)


State 327

  203 parameters: parameters COMMA . parameter
  205 parameter: . type simple_name ASSIGN_OP assignment_expression annotation_block
  206          | . type simple_name ASSIGN_OP assignment_expression
  207          | . type simple_name annotation_block
  208          | . type simple_name
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    IDENT                       shift, and go to state 71

    parameter                     go to state 454
    type                          go to state 227
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 328

  201 parameter_list: LEFT_PARENTHESIS parameters RIGHT_PARENTHESIS .

    $default  reduce using rule 201 (parameter_list)


State 329

  205 parameter: type simple_name . ASSIGN_OP assignment_expression annotation_block
  206          | type simple_name . ASSIGN_OP assignment_expression
  207          | type simple_name . annotation_block
  208          | type simple_name .  [COMMA, RIGHT_PARENTHESIS]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 455
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    $default  reduce using rule 208 (parameter)

    annotation_block  go to state 456


State 330

   62 annotation_declaration: ANNOTATION simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 62 (annotation_declaration)


State 331

   65 constant_declarators: constant_declarators COMMA constant_declarator .

    $default  reduce using rule 65 (constant_declarators)


State 332

   69 constant_declarator: simple_name ASSIGN_OP conditional_expression . annotation_block
   70                    | simple_name ASSIGN_OP conditional_expression .  [SEMICOLON, COMMA]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    $default  reduce using rule 70 (constant_declarator)

    annotation_block  go to state 457


State 333

  241 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | logical_or_expression .  [SEMICOLON, COMMA, ANNOTATION_BLOCK_BEGIN]
  243 logical_or_expression: logical_or_expression . LOGICAL_OR_OP logical_and_expression

    CONDITIONAL_OP  shift, and go to state 281
    LOGICAL_OR_OP   shift, and go to state 282

    $default  reduce using rule 242 (conditional_expression)


State 334

   67 constant_declarator: simple_name argument_list annotation_block .

    $default  reduce using rule 67 (constant_declarator)


State 335

   78 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 78 (struct_type_declaration)


State 336

   76 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 458


State 337

   79 struct_field_declarators: struct_field_declarators struct_field_declarator .

    $default  reduce using rule 79 (struct_field_declarators)


State 338

   81 struct_field_declarator: type simple_name . ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | type simple_name . ASSIGN_OP comma_expression SEMICOLON
   83                        | type simple_name . annotation_block SEMICOLON
   84                        | type simple_name . SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 459
    ASSIGN_OP               shift, and go to state 460
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    annotation_block  go to state 461


State 339

   77 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 462


State 340

   75 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators . RIGHT_CURLY_BRACE SEMICOLON
   79 struct_field_declarators: struct_field_declarators . struct_field_declarator
   81 struct_field_declarator: . type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON
   82                        | . type simple_name ASSIGN_OP comma_expression SEMICOLON
   83                        | . type simple_name annotation_block SEMICOLON
   84                        | . type simple_name SEMICOLON
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 463
    IDENT                       shift, and go to state 71

    struct_field_declarator       go to state 337
    type                          go to state 238
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 341

   88 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 88 (enum_type_declaration)


State 342

   89 enum_value_declarators: enum_value_declarators COMMA . enum_value_declarator
   91 enum_value_declarator: . simple_name ASSIGN_OP assignment_expression annotation_block
   92                      | . simple_name ASSIGN_OP assignment_expression
   93                      | . simple_name annotation_block
   94                      | . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    enum_value_declarator  go to state 464
    simple_name            go to state 243


State 343

   86 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 465


State 344

   91 enum_value_declarator: simple_name ASSIGN_OP . assignment_expression annotation_block
   92                      | simple_name ASSIGN_OP . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 466
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 345

   93 enum_value_declarator: simple_name annotation_block .

    $default  reduce using rule 93 (enum_value_declarator)


State 346

   87 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 467


State 347

   85 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators . RIGHT_CURLY_BRACE SEMICOLON
   89 enum_value_declarators: enum_value_declarators . COMMA enum_value_declarator

    COMMA              shift, and go to state 342
    RIGHT_CURLY_BRACE  shift, and go to state 468


State 348

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name LEFT_PARENTHESIS STAR . RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 469


State 349

  100 function_declaration: type annotation_block simple_name parameter_list SEMICOLON .

    $default  reduce using rule 100 (function_declaration)


State 350

   95 function_declaration: type annotation_block simple_name parameter_list UNIFORM . annotation_block SEMICOLON
   98                     | type annotation_block simple_name parameter_list UNIFORM . SEMICOLON
  107                     | type annotation_block simple_name parameter_list UNIFORM . annotation_block compound_statement
  110                     | type annotation_block simple_name parameter_list UNIFORM . compound_statement
  119                     | type annotation_block simple_name parameter_list UNIFORM . annotation_block ASSIGN_OP comma_expression SEMICOLON
  122                     | type annotation_block simple_name parameter_list UNIFORM . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 470
    ASSIGN_OP               shift, and go to state 471
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102
    LEFT_CURLY_BRACE        shift, and go to state 252

    compound_statement  go to state 472
    annotation_block    go to state 473


State 351

   96 function_declaration: type annotation_block simple_name parameter_list VARYING . annotation_block SEMICOLON
   99                     | type annotation_block simple_name parameter_list VARYING . SEMICOLON
  108                     | type annotation_block simple_name parameter_list VARYING . annotation_block compound_statement
  111                     | type annotation_block simple_name parameter_list VARYING . compound_statement
  120                     | type annotation_block simple_name parameter_list VARYING . annotation_block ASSIGN_OP comma_expression SEMICOLON
  123                     | type annotation_block simple_name parameter_list VARYING . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 474
    ASSIGN_OP               shift, and go to state 475
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102
    LEFT_CURLY_BRACE        shift, and go to state 252

    compound_statement  go to state 476
    annotation_block    go to state 477


State 352

  124 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 478
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 353

  112 function_declaration: type annotation_block simple_name parameter_list compound_statement .

    $default  reduce using rule 112 (function_declaration)


State 354

   97 function_declaration: type annotation_block simple_name parameter_list annotation_block . SEMICOLON
  109                     | type annotation_block simple_name parameter_list annotation_block . compound_statement
  121                     | type annotation_block simple_name parameter_list annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 479
    ASSIGN_OP         shift, and go to state 480
    LEFT_CURLY_BRACE  shift, and go to state 252

    compound_statement  go to state 481


State 355

  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . annotation_block ASSIGN_OP comma_expression SEMICOLON
  134                     | type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . ASSIGN_OP comma_expression SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 482
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    annotation_block  go to state 483


State 356

  104 function_declaration: type simple_name parameter_list UNIFORM SEMICOLON .

    $default  reduce using rule 104 (function_declaration)


State 357

  128 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 484
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 358

  116 function_declaration: type simple_name parameter_list UNIFORM compound_statement .

    $default  reduce using rule 116 (function_declaration)


State 359

  101 function_declaration: type simple_name parameter_list UNIFORM annotation_block . SEMICOLON
  113                     | type simple_name parameter_list UNIFORM annotation_block . compound_statement
  125                     | type simple_name parameter_list UNIFORM annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 485
    ASSIGN_OP         shift, and go to state 486
    LEFT_CURLY_BRACE  shift, and go to state 252

    compound_statement  go to state 487


State 360

  105 function_declaration: type simple_name parameter_list VARYING SEMICOLON .

    $default  reduce using rule 105 (function_declaration)


State 361

  129 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 488
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 362

  117 function_declaration: type simple_name parameter_list VARYING compound_statement .

    $default  reduce using rule 117 (function_declaration)


State 363

  102 function_declaration: type simple_name parameter_list VARYING annotation_block . SEMICOLON
  114                     | type simple_name parameter_list VARYING annotation_block . compound_statement
  126                     | type simple_name parameter_list VARYING annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 489
    ASSIGN_OP         shift, and go to state 490
    LEFT_CURLY_BRACE  shift, and go to state 252

    compound_statement  go to state 491


State 364

  130 function_declaration: type simple_name parameter_list ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 492


State 365

  154 matched_statement: SEMICOLON .

    $default  reduce using rule 154 (matched_statement)


State 366

  159 matched_if_statement: IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | IF . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 493


State 367

  162 switch_statement: SWITCH . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 494


State 368

  170 matched_while_statement: WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 495


State 369

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  172                     | DO . matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173                       | DO . unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 496
    unmatched_statement           go to state 497
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 370

  174 matched_for_statement: FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR . LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR . LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR . LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR . LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR . LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    LEFT_PARENTHESIS  shift, and go to state 498


State 371

  198 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 499


State 372

  199 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 500


State 373

  200 return_statement: RETURN . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 501
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 374

  136 compound_statement: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 136 (compound_statement)


State 375

  152 matched_statement: variable_declaration .

    $default  reduce using rule 152 (matched_statement)


State 376

  143 matched_statement: constant_declaration .

    $default  reduce using rule 143 (matched_statement)


State 377

  142 matched_statement: type_declaration .

    $default  reduce using rule 142 (matched_statement)


State 378

  141 matched_statement: compound_statement .

    $default  reduce using rule 141 (matched_statement)


State 379

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  135                   | LEFT_CURLY_BRACE statements . RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  137 statements: statements . statement
  139 statement: . matched_statement
  140          | . unmatched_statement
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    RIGHT_CURLY_BRACE           shift, and go to state 502
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    statement                     go to state 503
    matched_statement             go to state 381
    unmatched_statement           go to state 382
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 380

  138 statements: statement .

    $default  reduce using rule 138 (statements)


State 381

  139 statement: matched_statement .

    $default  reduce using rule 139 (statement)


State 382

  140 statement: unmatched_statement .

    $default  reduce using rule 140 (statement)


State 383

  144 matched_statement: matched_if_statement .

    $default  reduce using rule 144 (matched_statement)


State 384

  155 unmatched_statement: unmatched_if_statement .

    $default  reduce using rule 155 (unmatched_statement)


State 385

  145 matched_statement: switch_statement .

    $default  reduce using rule 145 (matched_statement)


State 386

  146 matched_statement: matched_while_statement .

    $default  reduce using rule 146 (matched_statement)


State 387

  156 unmatched_statement: unmatched_while_statement .

    $default  reduce using rule 156 (unmatched_statement)


State 388

  147 matched_statement: matched_do_statement .

    $default  reduce using rule 147 (matched_statement)


State 389

  157 unmatched_statement: unmatched_do_statement .

    $default  reduce using rule 157 (unmatched_statement)


State 390

  148 matched_statement: matched_for_statement .

    $default  reduce using rule 148 (matched_statement)


State 391

  158 unmatched_statement: unmatched_for_statement .

    $default  reduce using rule 158 (unmatched_statement)


State 392

  149 matched_statement: break_statement .

    $default  reduce using rule 149 (matched_statement)


State 393

  150 matched_statement: continue_statement .

    $default  reduce using rule 150 (matched_statement)


State 394

  151 matched_statement: return_statement .

    $default  reduce using rule 151 (matched_statement)


State 395

  153 matched_statement: comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 504


State 396

  289 matched_primary_expression: simple_type . LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  298 unmatched_primary_expression: simple_type .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, LEFT_PARENTHESIS, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  315 array_type: simple_type . LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | simple_type . LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | simple_type . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | simple_type .  [IDENT]

    LEFT_SQUARE_BRACKET  shift, and go to state 505

    IDENT     reduce using rule 318 (array_type)
    $default  reduce using rule 298 (unmatched_primary_expression)


State 397

  103 function_declaration: type simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 103 (function_declaration)


State 398

  127 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 506
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 399

  115 function_declaration: type simple_name parameter_list annotation_block compound_statement .

    $default  reduce using rule 115 (function_declaration)


State 400

   14 variable_declarations: variable_declarations . variable_declaration
   45 variable_declaration: . type variable_declarators SEMICOLON
  301 let_expression: LET LEFT_CURLY_BRACE variable_declarations . RIGHT_CURLY_BRACE IN unary_expression
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    SCOPE                       shift, and go to state 70
    RIGHT_CURLY_BRACE           shift, and go to state 507
    IDENT                       shift, and go to state 71

    variable_declaration          go to state 508
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 86
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 401

   15 variable_declarations: variable_declaration .

    $default  reduce using rule 15 (variable_declarations)


State 402

  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  300               | LET variable_declaration IN . unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 509
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 403

   45 variable_declaration: type variable_declarators . SEMICOLON
   46 variable_declarators: variable_declarators . COMMA variable_declarator

    SEMICOLON  shift, and go to state 510
    COMMA      shift, and go to state 511


State 404

   47 variable_declarators: variable_declarator .

    $default  reduce using rule 47 (variable_declarators)


State 405

   48 variable_declarator: simple_name . argument_list annotation_block
   49                    | simple_name . argument_list
   50                    | simple_name . ASSIGN_OP assignment_expression annotation_block
   51                    | simple_name . ASSIGN_OP assignment_expression
   52                    | simple_name . annotation_block
   53                    | simple_name .  [SEMICOLON, COMMA]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END
  216 argument_list: . LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS
  217              | . LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS
  218              | . LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS
  219              | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    ASSIGN_OP               shift, and go to state 512
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102
    LEFT_PARENTHESIS        shift, and go to state 217

    $default  reduce using rule 53 (variable_declarator)

    annotation_block  go to state 513
    argument_list     go to state 514


State 406

  299 cast_expression: CAST LEFT_ANGLE_BRACKET type . RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

    RIGHT_ANGLE_BRACKET  shift, and go to state 515


State 407

  292 matched_primary_expression: LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS .

    $default  reduce using rule 292 (matched_primary_expression)


State 408

  315 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 516


State 409

  226 comma_expression: assignment_expression COMMA comma_expression .

    $default  reduce using rule 226 (comma_expression)


State 410

  228 assignment_expression: logical_or_expression ASSIGN_OP assignment_expression .

    $default  reduce using rule 228 (assignment_expression)


State 411

  229 assignment_expression: logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 229 (assignment_expression)


State 412

  230 assignment_expression: logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression .

    $default  reduce using rule 230 (assignment_expression)


State 413

  231 assignment_expression: logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 231 (assignment_expression)


State 414

  232 assignment_expression: logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 232 (assignment_expression)


State 415

  233 assignment_expression: logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 233 (assignment_expression)


State 416

  234 assignment_expression: logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 234 (assignment_expression)


State 417

  235 assignment_expression: logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression .

    $default  reduce using rule 235 (assignment_expression)


State 418

  236 assignment_expression: logical_or_expression DIVIDE_ASSIGN_OP assignment_expression .

    $default  reduce using rule 236 (assignment_expression)


State 419

  237 assignment_expression: logical_or_expression MODULO_ASSIGN_OP assignment_expression .

    $default  reduce using rule 237 (assignment_expression)


State 420

  238 assignment_expression: logical_or_expression PLUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 238 (assignment_expression)


State 421

  239 assignment_expression: logical_or_expression MINUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 239 (assignment_expression)


State 422

  241 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression . COLON assignment_expression

    COLON  shift, and go to state 517


State 423

  243 logical_or_expression: logical_or_expression LOGICAL_OR_OP logical_and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  245 logical_and_expression: logical_and_expression . LOGICAL_AND_OP inclusive_or_expression

    LOGICAL_AND_OP  shift, and go to state 283

    $default  reduce using rule 243 (logical_or_expression)


State 424

  245 logical_and_expression: logical_and_expression LOGICAL_AND_OP inclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  247 inclusive_or_expression: inclusive_or_expression . BITWISE_OR_OP exclusive_or_expression

    BITWISE_OR_OP  shift, and go to state 284

    $default  reduce using rule 245 (logical_and_expression)


State 425

  247 inclusive_or_expression: inclusive_or_expression BITWISE_OR_OP exclusive_or_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  249 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR_OP and_expression

    BITWISE_XOR_OP  shift, and go to state 285

    $default  reduce using rule 247 (inclusive_or_expression)


State 426

  249 exclusive_or_expression: exclusive_or_expression BITWISE_XOR_OP and_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  251 and_expression: and_expression . BITWISE_AND_OP equality_expression

    BITWISE_AND_OP  shift, and go to state 286

    $default  reduce using rule 249 (exclusive_or_expression)


State 427

  251 and_expression: and_expression BITWISE_AND_OP equality_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  253 equality_expression: equality_expression . EQUAL_OP relational_expression
  254                    | equality_expression . NOT_EQUAL_OP relational_expression

    EQUAL_OP      shift, and go to state 287
    NOT_EQUAL_OP  shift, and go to state 288

    $default  reduce using rule 251 (and_expression)


State 428

  253 equality_expression: equality_expression EQUAL_OP relational_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  256 relational_expression: relational_expression . LEFT_ANGLE_BRACKET shift_expression
  257                      | relational_expression . LESS_OR_EQUAL_OP shift_expression
  258                      | relational_expression . GREATER_OR_EQUAL_OP shift_expression
  259                      | relational_expression . RIGHT_ANGLE_BRACKET shift_expression

    LESS_OR_EQUAL_OP     shift, and go to state 289
    GREATER_OR_EQUAL_OP  shift, and go to state 290
    LEFT_ANGLE_BRACKET   shift, and go to state 291
    RIGHT_ANGLE_BRACKET  shift, and go to state 292

    $default  reduce using rule 253 (equality_expression)


State 429

  254 equality_expression: equality_expression NOT_EQUAL_OP relational_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, RIGHT_CURLY_BRACE]
  256 relational_expression: relational_expression . LEFT_ANGLE_BRACKET shift_expression
  257                      | relational_expression . LESS_OR_EQUAL_OP shift_expression
  258                      | relational_expression . GREATER_OR_EQUAL_OP shift_expression
  259                      | relational_expression . RIGHT_ANGLE_BRACKET shift_expression

    LESS_OR_EQUAL_OP     shift, and go to state 289
    GREATER_OR_EQUAL_OP  shift, and go to state 290
    LEFT_ANGLE_BRACKET   shift, and go to state 291
    RIGHT_ANGLE_BRACKET  shift, and go to state 292

    $default  reduce using rule 254 (equality_expression)


State 430

  257 relational_expression: relational_expression LESS_OR_EQUAL_OP shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  261 shift_expression: shift_expression . SHIFT_LEFT_OP additive_expression
  262                 | shift_expression . SHIFT_RIGHT_OP additive_expression
  263                 | shift_expression . UNSIGNED_SHIFT_RIGHT_OP additive_expression

    SHIFT_LEFT_OP            shift, and go to state 293
    SHIFT_RIGHT_OP           shift, and go to state 294
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 295

    $default  reduce using rule 257 (relational_expression)


State 431

  258 relational_expression: relational_expression GREATER_OR_EQUAL_OP shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  261 shift_expression: shift_expression . SHIFT_LEFT_OP additive_expression
  262                 | shift_expression . SHIFT_RIGHT_OP additive_expression
  263                 | shift_expression . UNSIGNED_SHIFT_RIGHT_OP additive_expression

    SHIFT_LEFT_OP            shift, and go to state 293
    SHIFT_RIGHT_OP           shift, and go to state 294
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 295

    $default  reduce using rule 258 (relational_expression)


State 432

  256 relational_expression: relational_expression LEFT_ANGLE_BRACKET shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  261 shift_expression: shift_expression . SHIFT_LEFT_OP additive_expression
  262                 | shift_expression . SHIFT_RIGHT_OP additive_expression
  263                 | shift_expression . UNSIGNED_SHIFT_RIGHT_OP additive_expression

    SHIFT_LEFT_OP            shift, and go to state 293
    SHIFT_RIGHT_OP           shift, and go to state 294
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 295

    $default  reduce using rule 256 (relational_expression)


State 433

  259 relational_expression: relational_expression RIGHT_ANGLE_BRACKET shift_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  261 shift_expression: shift_expression . SHIFT_LEFT_OP additive_expression
  262                 | shift_expression . SHIFT_RIGHT_OP additive_expression
  263                 | shift_expression . UNSIGNED_SHIFT_RIGHT_OP additive_expression

    SHIFT_LEFT_OP            shift, and go to state 293
    SHIFT_RIGHT_OP           shift, and go to state 294
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 295

    $default  reduce using rule 259 (relational_expression)


State 434

  261 shift_expression: shift_expression SHIFT_LEFT_OP additive_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  265 additive_expression: additive_expression . POSITIVE_OP multiplicative_expression
  266                    | additive_expression . NEGATIVE_OP multiplicative_expression

    POSITIVE_OP  shift, and go to state 296
    NEGATIVE_OP  shift, and go to state 297

    $default  reduce using rule 261 (shift_expression)


State 435

  262 shift_expression: shift_expression SHIFT_RIGHT_OP additive_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  265 additive_expression: additive_expression . POSITIVE_OP multiplicative_expression
  266                    | additive_expression . NEGATIVE_OP multiplicative_expression

    POSITIVE_OP  shift, and go to state 296
    NEGATIVE_OP  shift, and go to state 297

    $default  reduce using rule 262 (shift_expression)


State 436

  263 shift_expression: shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  265 additive_expression: additive_expression . POSITIVE_OP multiplicative_expression
  266                    | additive_expression . NEGATIVE_OP multiplicative_expression

    POSITIVE_OP  shift, and go to state 296
    NEGATIVE_OP  shift, and go to state 297

    $default  reduce using rule 263 (shift_expression)


State 437

  265 additive_expression: additive_expression POSITIVE_OP multiplicative_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, POSITIVE_OP, NEGATIVE_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  268 multiplicative_expression: multiplicative_expression . STAR unary_expression
  269                          | multiplicative_expression . DIVIDE_OP unary_expression
  270                          | multiplicative_expression . MODULO_OP unary_expression

    DIVIDE_OP  shift, and go to state 298
    MODULO_OP  shift, and go to state 299
    STAR       shift, and go to state 300

    $default  reduce using rule 265 (additive_expression)


State 438

  266 additive_expression: additive_expression NEGATIVE_OP multiplicative_expression .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, POSITIVE_OP, NEGATIVE_OP, COLON, ANNOTATION_BLOCK_BEGIN, RIGHT_PARENTHESIS, RIGHT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET, RIGHT_CURLY_BRACE]
  268 multiplicative_expression: multiplicative_expression . STAR unary_expression
  269                          | multiplicative_expression . DIVIDE_OP unary_expression
  270                          | multiplicative_expression . MODULO_OP unary_expression

    DIVIDE_OP  shift, and go to state 298
    MODULO_OP  shift, and go to state 299
    STAR       shift, and go to state 300

    $default  reduce using rule 266 (additive_expression)


State 439

  269 multiplicative_expression: multiplicative_expression DIVIDE_OP unary_expression .

    $default  reduce using rule 269 (multiplicative_expression)


State 440

  270 multiplicative_expression: multiplicative_expression MODULO_OP unary_expression .

    $default  reduce using rule 270 (multiplicative_expression)


State 441

  268 multiplicative_expression: multiplicative_expression STAR unary_expression .

    $default  reduce using rule 268 (multiplicative_expression)


State 442

  284 matched_postfix_expression: matched_postfix_expression DOT simple_name .

    $default  reduce using rule 284 (matched_postfix_expression)


State 443

  286 matched_postfix_expression: matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 518


State 444

  295 unmatched_postfix_expression: unmatched_postfix_expression DOT simple_name .

    $default  reduce using rule 295 (unmatched_postfix_expression)


State 445

  290 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 290 (matched_primary_expression)


State 446

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET comma_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 519


State 447

  220 named_arguments: named_arguments COMMA . named_argument
  224 named_argument: . simple_name COLON assignment_expression
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    named_argument  go to state 520
    simple_name     go to state 322


State 448

  217 argument_list: LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 217 (argument_list)


State 449

  216 argument_list: LEFT_PARENTHESIS positional_arguments COMMA . named_arguments RIGHT_PARENTHESIS
  220 named_arguments: . named_arguments COMMA named_argument
  221                | . named_argument
  222 positional_arguments: positional_arguments COMMA . positional_argument
  224 named_argument: . simple_name COLON assignment_expression
  225 positional_argument: . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT
  378 simple_name: . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 316
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    named_arguments               go to state 521
    named_argument                go to state 319
    positional_argument           go to state 522
    assignment_expression         go to state 321
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88
    simple_name                   go to state 322


State 450

  218 argument_list: LEFT_PARENTHESIS positional_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 218 (argument_list)


State 451

  224 named_argument: simple_name COLON . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 523
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 452

   17 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON .

    $default  reduce using rule 17 (import_declaration)


State 453

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    simple_name  go to state 524


State 454

  203 parameters: parameters COMMA parameter .

    $default  reduce using rule 203 (parameters)


State 455

  205 parameter: type simple_name ASSIGN_OP . assignment_expression annotation_block
  206          | type simple_name ASSIGN_OP . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 525
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 456

  207 parameter: type simple_name annotation_block .

    $default  reduce using rule 207 (parameter)


State 457

   69 constant_declarator: simple_name ASSIGN_OP conditional_expression annotation_block .

    $default  reduce using rule 69 (constant_declarator)


State 458

   76 struct_type_declaration: STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 76 (struct_type_declaration)


State 459

   84 struct_field_declarator: type simple_name SEMICOLON .

    $default  reduce using rule 84 (struct_field_declarator)


State 460

   81 struct_field_declarator: type simple_name ASSIGN_OP . comma_expression annotation_block SEMICOLON
   82                        | type simple_name ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 526
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 461

   83 struct_field_declarator: type simple_name annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 527


State 462

   77 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 77 (struct_type_declaration)


State 463

   75 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 528


State 464

   89 enum_value_declarators: enum_value_declarators COMMA enum_value_declarator .

    $default  reduce using rule 89 (enum_value_declarators)


State 465

   86 enum_type_declaration: ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 86 (enum_type_declaration)


State 466

   91 enum_value_declarator: simple_name ASSIGN_OP assignment_expression . annotation_block
   92                      | simple_name ASSIGN_OP assignment_expression .  [COMMA, RIGHT_CURLY_BRACE]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    $default  reduce using rule 92 (enum_value_declarator)

    annotation_block  go to state 529


State 467

   87 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 87 (enum_type_declaration)


State 468

   85 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 530


State 469

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . annotation_block ASSIGN_OP comma_expression SEMICOLON
  132                     | type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS . ASSIGN_OP comma_expression SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ASSIGN_OP               shift, and go to state 531
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    annotation_block  go to state 532


State 470

   98 function_declaration: type annotation_block simple_name parameter_list UNIFORM SEMICOLON .

    $default  reduce using rule 98 (function_declaration)


State 471

  122 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 533
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 472

  110 function_declaration: type annotation_block simple_name parameter_list UNIFORM compound_statement .

    $default  reduce using rule 110 (function_declaration)


State 473

   95 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block . SEMICOLON
  107                     | type annotation_block simple_name parameter_list UNIFORM annotation_block . compound_statement
  119                     | type annotation_block simple_name parameter_list UNIFORM annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 534
    ASSIGN_OP         shift, and go to state 535
    LEFT_CURLY_BRACE  shift, and go to state 252

    compound_statement  go to state 536


State 474

   99 function_declaration: type annotation_block simple_name parameter_list VARYING SEMICOLON .

    $default  reduce using rule 99 (function_declaration)


State 475

  123 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 537
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 476

  111 function_declaration: type annotation_block simple_name parameter_list VARYING compound_statement .

    $default  reduce using rule 111 (function_declaration)


State 477

   96 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block . SEMICOLON
  108                     | type annotation_block simple_name parameter_list VARYING annotation_block . compound_statement
  120                     | type annotation_block simple_name parameter_list VARYING annotation_block . ASSIGN_OP comma_expression SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    SEMICOLON         shift, and go to state 538
    ASSIGN_OP         shift, and go to state 539
    LEFT_CURLY_BRACE  shift, and go to state 252

    compound_statement  go to state 540


State 478

  124 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 541


State 479

   97 function_declaration: type annotation_block simple_name parameter_list annotation_block SEMICOLON .

    $default  reduce using rule 97 (function_declaration)


State 480

  121 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 542
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 481

  109 function_declaration: type annotation_block simple_name parameter_list annotation_block compound_statement .

    $default  reduce using rule 109 (function_declaration)


State 482

  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 543
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 483

  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block . ASSIGN_OP comma_expression SEMICOLON

    ASSIGN_OP  shift, and go to state 544


State 484

  128 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 545


State 485

  101 function_declaration: type simple_name parameter_list UNIFORM annotation_block SEMICOLON .

    $default  reduce using rule 101 (function_declaration)


State 486

  125 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 546
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 487

  113 function_declaration: type simple_name parameter_list UNIFORM annotation_block compound_statement .

    $default  reduce using rule 113 (function_declaration)


State 488

  129 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 547


State 489

  102 function_declaration: type simple_name parameter_list VARYING annotation_block SEMICOLON .

    $default  reduce using rule 102 (function_declaration)


State 490

  126 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 548
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 491

  114 function_declaration: type simple_name parameter_list VARYING annotation_block compound_statement .

    $default  reduce using rule 114 (function_declaration)


State 492

  130 function_declaration: type simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 130 (function_declaration)


State 493

  159 matched_if_statement: IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS statement
  161                       | IF LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 549
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 494

  162 switch_statement: SWITCH LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 550
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 495

  170 matched_while_statement: WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 551
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 496

  172 matched_do_statement: DO matched_statement . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 552


State 497

  173 unmatched_do_statement: DO unmatched_statement . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    WHILE  shift, and go to state 553


State 498

   45 variable_declaration: . type variable_declarators SEMICOLON
  174 matched_for_statement: FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS . variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS . variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS . comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS . SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 554
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 555
    comma_expression              go to state 556
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 499

  198 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 198 (break_statement)


State 500

  199 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 199 (continue_statement)


State 501

  200 return_statement: RETURN comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 557


State 502

  135 compound_statement: LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE .

    $default  reduce using rule 135 (compound_statement)


State 503

  137 statements: statements statement .

    $default  reduce using rule 137 (statements)


State 504

  153 matched_statement: comma_expression SEMICOLON .

    $default  reduce using rule 153 (matched_statement)


State 505

  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  289                           | simple_type LEFT_SQUARE_BRACKET . comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  290                           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  315 array_type: simple_type LEFT_SQUARE_BRACKET . LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | simple_type LEFT_SQUARE_BRACKET . comma_expression RIGHT_SQUARE_BRACKET
  317           | simple_type LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_SQUARE_BRACKET        shift, and go to state 558
    LEFT_ANGLE_BRACKET          shift, and go to state 175
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 559
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 506

  127 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 560


State 507

  301 let_expression: LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE . IN unary_expression

    IN  shift, and go to state 561


State 508

   14 variable_declarations: variable_declarations variable_declaration .

    $default  reduce using rule 14 (variable_declarations)


State 509

  300 let_expression: LET variable_declaration IN unary_expression .

    $default  reduce using rule 300 (let_expression)


State 510

   45 variable_declaration: type variable_declarators SEMICOLON .

    $default  reduce using rule 45 (variable_declaration)


State 511

   46 variable_declarators: variable_declarators COMMA . variable_declarator
   48 variable_declarator: . simple_name argument_list annotation_block
   49                    | . simple_name argument_list
   50                    | . simple_name ASSIGN_OP assignment_expression annotation_block
   51                    | . simple_name ASSIGN_OP assignment_expression
   52                    | . simple_name annotation_block
   53                    | . simple_name
  378 simple_name: . IDENT

    IDENT  shift, and go to state 93

    variable_declarator  go to state 562
    simple_name          go to state 405


State 512

   50 variable_declarator: simple_name ASSIGN_OP . assignment_expression annotation_block
   51                    | simple_name ASSIGN_OP . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 563
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 513

   52 variable_declarator: simple_name annotation_block .

    $default  reduce using rule 52 (variable_declarator)


State 514

   48 variable_declarator: simple_name argument_list . annotation_block
   49                    | simple_name argument_list .  [SEMICOLON, COMMA]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    $default  reduce using rule 49 (variable_declarator)

    annotation_block  go to state 564


State 515

  299 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET . LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 565


State 516

  315 array_type: simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 315 (array_type)


State 517

  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  241                       | logical_or_expression CONDITIONAL_OP comma_expression COLON . assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    assignment_expression         go to state 566
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 518

  286 matched_postfix_expression: matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 286 (matched_postfix_expression)


State 519

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 289 (matched_primary_expression)


State 520

  220 named_arguments: named_arguments COMMA named_argument .

    $default  reduce using rule 220 (named_arguments)


State 521

  216 argument_list: LEFT_PARENTHESIS positional_arguments COMMA named_arguments . RIGHT_PARENTHESIS
  220 named_arguments: named_arguments . COMMA named_argument

    COMMA              shift, and go to state 447
    RIGHT_PARENTHESIS  shift, and go to state 567


State 522

  222 positional_arguments: positional_arguments COMMA positional_argument .

    $default  reduce using rule 222 (positional_arguments)


State 523

  224 named_argument: simple_name COLON assignment_expression .

    $default  reduce using rule 224 (named_argument)


State 524

   34 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name .

    $default  reduce using rule 34 (unqualified_import_simple_names)


State 525

  205 parameter: type simple_name ASSIGN_OP assignment_expression . annotation_block
  206          | type simple_name ASSIGN_OP assignment_expression .  [COMMA, RIGHT_PARENTHESIS]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    $default  reduce using rule 206 (parameter)

    annotation_block  go to state 568


State 526

   81 struct_field_declarator: type simple_name ASSIGN_OP comma_expression . annotation_block SEMICOLON
   82                        | type simple_name ASSIGN_OP comma_expression . SEMICOLON
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    SEMICOLON               shift, and go to state 569
    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    annotation_block  go to state 570


State 527

   83 struct_field_declarator: type simple_name annotation_block SEMICOLON .

    $default  reduce using rule 83 (struct_field_declarator)


State 528

   75 struct_type_declaration: STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 75 (struct_type_declaration)


State 529

   91 enum_value_declarator: simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 91 (enum_value_declarator)


State 530

   85 enum_type_declaration: ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON .

    $default  reduce using rule 85 (enum_type_declaration)


State 531

  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 571
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 532

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block . ASSIGN_OP comma_expression SEMICOLON

    ASSIGN_OP  shift, and go to state 572


State 533

  122 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 573


State 534

   95 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block SEMICOLON .

    $default  reduce using rule 95 (function_declaration)


State 535

  119 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 574
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 536

  107 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block compound_statement .

    $default  reduce using rule 107 (function_declaration)


State 537

  123 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 575


State 538

   96 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block SEMICOLON .

    $default  reduce using rule 96 (function_declaration)


State 539

  120 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 576
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 540

  108 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block compound_statement .

    $default  reduce using rule 108 (function_declaration)


State 541

  124 function_declaration: type annotation_block simple_name parameter_list ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 124 (function_declaration)


State 542

  121 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 577


State 543

  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 578


State 544

  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 579
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 545

  128 function_declaration: type simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 128 (function_declaration)


State 546

  125 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 580


State 547

  129 function_declaration: type simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 129 (function_declaration)


State 548

  126 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 581


State 549

  159 matched_if_statement: IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS statement
  161                       | IF LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 582


State 550

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 583


State 551

  170 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 584


State 552

  172 matched_do_statement: DO matched_statement WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 585


State 553

  173 unmatched_do_statement: DO unmatched_statement WHILE . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 586


State 554

  182 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON RIGHT_PARENTHESIS matched_statement
  194 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS SEMICOLON . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 587
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 588
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 555

  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS variable_declaration . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS variable_declaration . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 589
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 590
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 556

  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression . SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 591


State 557

  200 return_statement: RETURN comma_expression SEMICOLON .

    $default  reduce using rule 200 (return_statement)


State 558

  290 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, LEFT_PARENTHESIS, LEFT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  317 array_type: simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .  [IDENT]

    IDENT     reduce using rule 317 (array_type)
    $default  reduce using rule 290 (matched_primary_expression)


State 559

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET comma_expression . RIGHT_SQUARE_BRACKET
  316 array_type: simple_type LEFT_SQUARE_BRACKET comma_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 592


State 560

  127 function_declaration: type simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 127 (function_declaration)


State 561

  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  301               | LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN . unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 593
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 562

   46 variable_declarators: variable_declarators COMMA variable_declarator .

    $default  reduce using rule 46 (variable_declarators)


State 563

   50 variable_declarator: simple_name ASSIGN_OP assignment_expression . annotation_block
   51                    | simple_name ASSIGN_OP assignment_expression .  [SEMICOLON, COMMA]
  209 annotation_block: . ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 102

    $default  reduce using rule 51 (variable_declarator)

    annotation_block  go to state 594


State 564

   48 variable_declarator: simple_name argument_list annotation_block .

    $default  reduce using rule 48 (variable_declarator)


State 565

  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  299                | CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS . unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    unary_expression              go to state 595
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 566

  241 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression .

    $default  reduce using rule 241 (conditional_expression)


State 567

  216 argument_list: LEFT_PARENTHESIS positional_arguments COMMA named_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 216 (argument_list)


State 568

  205 parameter: type simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 205 (parameter)


State 569

   82 struct_field_declarator: type simple_name ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 82 (struct_field_declarator)


State 570

   81 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block . SEMICOLON

    SEMICOLON  shift, and go to state 596


State 571

  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 597


State 572

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP . comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 598
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 573

  122 function_declaration: type annotation_block simple_name parameter_list UNIFORM ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 122 (function_declaration)


State 574

  119 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 599


State 575

  123 function_declaration: type annotation_block simple_name parameter_list VARYING ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 123 (function_declaration)


State 576

  120 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 600


State 577

  121 function_declaration: type annotation_block simple_name parameter_list annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 121 (function_declaration)


State 578

  134 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 134 (function_declaration)


State 579

  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 601


State 580

  125 function_declaration: type simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 125 (function_declaration)


State 581

  126 function_declaration: type simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 126 (function_declaration)


State 582

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  139 statement: . matched_statement
  140          | . unmatched_statement
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  159                     | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  160                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  161                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    statement                     go to state 602
    matched_statement             go to state 603
    unmatched_statement           go to state 382
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 583

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 604


State 584

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  170                        | WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  171                          | WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 605
    unmatched_statement           go to state 606
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 585

  172 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 607
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 586

  173 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS . comma_expression RIGHT_PARENTHESIS SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 608
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 587

  184 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . RIGHT_PARENTHESIS matched_statement
  196 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 609
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 610
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 588

  182 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  194 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 611


State 589

  176 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . RIGHT_PARENTHESIS matched_statement
  188 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 612
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 613
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 590

  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 614


State 591

  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON RIGHT_PARENTHESIS matched_statement
  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON . SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 615
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 616
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 592

  289 matched_primary_expression: simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET .  [SEMICOLON, COMMA, ASSIGN_OP, BITWISE_OR_ASSIGN_OP, BITWISE_AND_ASSIGN_OP, BITWISE_XOR_ASSIGN_OP, SHIFT_LEFT_ASSIGN_OP, SHIFT_RIGHT_ASSIGN_OP, UNSIGNED_SHIFT_RIGHT_ASSIGN_OP, MULTIPLY_ASSIGN_OP, DIVIDE_ASSIGN_OP, MODULO_ASSIGN_OP, PLUS_ASSIGN_OP, MINUS_ASSIGN_OP, CONDITIONAL_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, BITWISE_OR_OP, BITWISE_XOR_OP, BITWISE_AND_OP, EQUAL_OP, NOT_EQUAL_OP, LESS_OR_EQUAL_OP, GREATER_OR_EQUAL_OP, SHIFT_LEFT_OP, SHIFT_RIGHT_OP, UNSIGNED_SHIFT_RIGHT_OP, DIVIDE_OP, MODULO_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, DOT, STAR, LEFT_PARENTHESIS, LEFT_SQUARE_BRACKET, LEFT_ANGLE_BRACKET, RIGHT_ANGLE_BRACKET]
  316 array_type: simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET .  [IDENT]

    IDENT     reduce using rule 316 (array_type)
    $default  reduce using rule 289 (matched_primary_expression)


State 593

  301 let_expression: LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression .

    $default  reduce using rule 301 (let_expression)


State 594

   50 variable_declarator: simple_name ASSIGN_OP assignment_expression annotation_block .

    $default  reduce using rule 50 (variable_declarator)


State 595

  299 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 617


State 596

   81 struct_field_declarator: type simple_name ASSIGN_OP comma_expression annotation_block SEMICOLON .

    $default  reduce using rule 81 (struct_field_declarator)


State 597

  132 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 132 (function_declaration)


State 598

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression . SEMICOLON

    SEMICOLON  shift, and go to state 618


State 599

  119 function_declaration: type annotation_block simple_name parameter_list UNIFORM annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 119 (function_declaration)


State 600

  120 function_declaration: type annotation_block simple_name parameter_list VARYING annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 120 (function_declaration)


State 601

  133 function_declaration: type simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 133 (function_declaration)


State 602

  160 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement .

    $default  reduce using rule 160 (unmatched_if_statement)


State 603

  139 statement: matched_statement .  [STRING_LITERAL, SEMICOLON, UNIFORM, VARYING, BOOL, BOOL2, BOOL3, BOOL4, INT, INT2, INT3, INT4, FLOAT, FLOAT2, FLOAT3, FLOAT4, FLOAT2X2, FLOAT2X3, FLOAT2X4, FLOAT3X2, FLOAT3X3, FLOAT3X4, FLOAT4X2, FLOAT4X3, FLOAT4X4, DOUBLE, DOUBLE2, DOUBLE3, DOUBLE4, DOUBLE2X2, DOUBLE2X3, DOUBLE2X4, DOUBLE3X2, DOUBLE3X3, DOUBLE3X4, DOUBLE4X2, DOUBLE4X3, DOUBLE4X4, COLOR, STRING, SDF, EDF, VDF, LIGHT_PROFILE, MATERIAL, MATERIAL_EMISSION, MATERIAL_GEOMETRY, MATERIAL_SURFACE, MATERIAL_VOLUME, TEXTURE_2D, TEXTURE_3D, TEXTURE_CUBE, TEXTURE_PTEX, BSDF_MEASUREMENT, INTENSITY_MODE, INTENSITY_RADIANT_EXITANCE, INTENSITY_POWER, HAIR_BSDF, TRUE, FALSE, LET, CONST, TYPEDEF, STRUCT, ENUM, IF, SWITCH, CASE, DEFAULT, WHILE, DO, FOR, BREAK, CONTINUE, RETURN, CAST, BITWISE_COMPLEMENT_OP, LOGICAL_NOT_OP, POSITIVE_OP, NEGATIVE_OP, INCREMENT_OP, DECREMENT_OP, SCOPE, LEFT_PARENTHESIS, LEFT_CURLY_BRACE, RIGHT_CURLY_BRACE, IDENT, INTEGER_LITERAL, FLOATING_LITERAL]
  159 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement . ELSE matched_statement
  161 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement . ELSE unmatched_statement

    ELSE  shift, and go to state 619

    $default  reduce using rule 139 (statement)


State 604

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . switch_cases RIGHT_CURLY_BRACE
  163                 | SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
  164 switch_cases: . switch_cases switch_case
  165             | . switch_case
  166 switch_case: . CASE comma_expression COLON statement
  167            | . CASE comma_expression COLON
  168            | . DEFAULT COLON statement
  169            | . DEFAULT COLON

    CASE               shift, and go to state 620
    DEFAULT            shift, and go to state 621
    RIGHT_CURLY_BRACE  shift, and go to state 622

    switch_cases  go to state 623
    switch_case   go to state 624


State 605

  170 matched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 170 (matched_while_statement)


State 606

  171 unmatched_while_statement: WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 171 (unmatched_while_statement)


State 607

  172 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 625


State 608

  173 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS  shift, and go to state 626


State 609

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  185                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS . matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  197                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 627
    unmatched_statement           go to state 628
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 610

  184 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  196 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 629


State 611

  182 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  194 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 630
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 631
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 612

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  177                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS . matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  189                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 632
    unmatched_statement           go to state 633
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 613

  176 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  188 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 634


State 614

  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 635
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 636
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 615

  180 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . RIGHT_PARENTHESIS matched_statement
  192 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 637
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 638
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 616

  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS matched_statement
  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression . SEMICOLON RIGHT_PARENTHESIS unmatched_statement

    SEMICOLON  shift, and go to state 639


State 617

  299 cast_expression: CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS .

    $default  reduce using rule 299 (cast_expression)


State 618

  131 function_declaration: type annotation_block simple_name LEFT_PARENTHESIS STAR RIGHT_PARENTHESIS annotation_block ASSIGN_OP comma_expression SEMICOLON .

    $default  reduce using rule 131 (function_declaration)


State 619

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  159                     | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE . matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  161                       | IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE . unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 640
    unmatched_statement           go to state 641
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 620

  166 switch_case: CASE . comma_expression COLON statement
  167            | CASE . comma_expression COLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 642
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 621

  168 switch_case: DEFAULT . COLON statement
  169            | DEFAULT . COLON

    COLON  shift, and go to state 643


State 622

  163 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 163 (switch_statement)


State 623

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases . RIGHT_CURLY_BRACE
  164 switch_cases: switch_cases . switch_case
  166 switch_case: . CASE comma_expression COLON statement
  167            | . CASE comma_expression COLON
  168            | . DEFAULT COLON statement
  169            | . DEFAULT COLON

    CASE               shift, and go to state 620
    DEFAULT            shift, and go to state 621
    RIGHT_CURLY_BRACE  shift, and go to state 644

    switch_case  go to state 645


State 624

  165 switch_cases: switch_case .

    $default  reduce using rule 165 (switch_cases)


State 625

  172 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 646


State 626

  173 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 647


State 627

  185 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 185 (matched_for_statement)


State 628

  197 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 197 (unmatched_for_statement)


State 629

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  184                      | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  196                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 648
    unmatched_statement           go to state 649
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 630

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  183                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  195                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 650
    unmatched_statement           go to state 651
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 631

  182 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  194 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 652


State 632

  177 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 177 (matched_for_statement)


State 633

  189 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 189 (unmatched_for_statement)


State 634

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  176                      | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  188                        | FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 653
    unmatched_statement           go to state 654
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 635

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  175                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  187                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 655
    unmatched_statement           go to state 656
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 636

  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 657


State 637

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  181                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS . matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  193                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 658
    unmatched_statement           go to state 659
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 638

  180 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  192 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 660


State 639

  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS matched_statement
  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON . RIGHT_PARENTHESIS unmatched_statement
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    RIGHT_PARENTHESIS           shift, and go to state 661
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    comma_expression              go to state 662
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    simple_type                   go to state 204
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 640

  159 matched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement .

    $default  reduce using rule 159 (matched_if_statement)


State 641

  161 unmatched_if_statement: IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement .

    $default  reduce using rule 161 (unmatched_if_statement)


State 642

  166 switch_case: CASE comma_expression . COLON statement
  167            | CASE comma_expression . COLON

    COLON  shift, and go to state 663


State 643

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  139 statement: . matched_statement
  140          | . unmatched_statement
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  168 switch_case: DEFAULT COLON . statement
  169            | DEFAULT COLON .  [CASE, DEFAULT, RIGHT_CURLY_BRACE]
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    $default  reduce using rule 169 (switch_case)

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    statement                     go to state 664
    matched_statement             go to state 381
    unmatched_statement           go to state 382
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 644

  162 switch_statement: SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE .

    $default  reduce using rule 162 (switch_statement)


State 645

  164 switch_cases: switch_cases switch_case .

    $default  reduce using rule 164 (switch_cases)


State 646

  172 matched_do_statement: DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON .

    $default  reduce using rule 172 (matched_do_statement)


State 647

  173 unmatched_do_statement: DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON .

    $default  reduce using rule 173 (unmatched_do_statement)


State 648

  184 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 184 (matched_for_statement)


State 649

  196 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 196 (unmatched_for_statement)


State 650

  183 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 183 (matched_for_statement)


State 651

  195 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 195 (unmatched_for_statement)


State 652

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  182                      | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  194                        | FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 665
    unmatched_statement           go to state 666
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 653

  176 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 176 (matched_for_statement)


State 654

  188 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 188 (unmatched_for_statement)


State 655

  175 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 175 (matched_for_statement)


State 656

  187 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 187 (unmatched_for_statement)


State 657

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  174                      | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  186                        | FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 667
    unmatched_statement           go to state 668
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 658

  181 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 181 (matched_for_statement)


State 659

  193 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 193 (unmatched_for_statement)


State 660

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  180                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  192                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 669
    unmatched_statement           go to state 670
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 661

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  179                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  191                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS . unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 671
    unmatched_statement           go to state 672
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 662

  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS matched_statement
  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression . RIGHT_PARENTHESIS unmatched_statement

    RIGHT_PARENTHESIS  shift, and go to state 673


State 663

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  139 statement: . matched_statement
  140          | . unmatched_statement
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  166 switch_case: CASE comma_expression COLON . statement
  167            | CASE comma_expression COLON .  [CASE, DEFAULT, RIGHT_CURLY_BRACE]
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    $default  reduce using rule 167 (switch_case)

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    statement                     go to state 674
    matched_statement             go to state 381
    unmatched_statement           go to state 382
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 664

  168 switch_case: DEFAULT COLON statement .

    $default  reduce using rule 168 (switch_case)


State 665

  182 matched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 182 (matched_for_statement)


State 666

  194 unmatched_for_statement: FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 194 (unmatched_for_statement)


State 667

  174 matched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 174 (matched_for_statement)


State 668

  186 unmatched_for_statement: FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 186 (unmatched_for_statement)


State 669

  180 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 180 (matched_for_statement)


State 670

  192 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 192 (unmatched_for_statement)


State 671

  179 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 179 (matched_for_statement)


State 672

  191 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 191 (unmatched_for_statement)


State 673

   45 variable_declaration: . type variable_declarators SEMICOLON
   64 constant_declaration: . CONST type constant_declarators SEMICOLON
   71 type_declaration: . alias_type_declaration
   72                 | . struct_type_declaration
   73                 | . enum_type_declaration
   74 alias_type_declaration: . TYPEDEF type simple_name SEMICOLON
   75 struct_type_declaration: . STRUCT simple_name annotation_block LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   76                        | . STRUCT simple_name LEFT_CURLY_BRACE struct_field_declarators RIGHT_CURLY_BRACE SEMICOLON
   77                        | . STRUCT simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   78                        | . STRUCT simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   85 enum_type_declaration: . ENUM simple_name annotation_block LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   86                      | . ENUM simple_name LEFT_CURLY_BRACE enum_value_declarators RIGHT_CURLY_BRACE SEMICOLON
   87                      | . ENUM simple_name annotation_block LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
   88                      | . ENUM simple_name LEFT_CURLY_BRACE RIGHT_CURLY_BRACE SEMICOLON
  135 compound_statement: . LEFT_CURLY_BRACE statements RIGHT_CURLY_BRACE
  136                   | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  141 matched_statement: . compound_statement
  142                  | . type_declaration
  143                  | . constant_declaration
  144                  | . matched_if_statement
  145                  | . switch_statement
  146                  | . matched_while_statement
  147                  | . matched_do_statement
  148                  | . matched_for_statement
  149                  | . break_statement
  150                  | . continue_statement
  151                  | . return_statement
  152                  | . variable_declaration
  153                  | . comma_expression SEMICOLON
  154                  | . SEMICOLON
  155 unmatched_statement: . unmatched_if_statement
  156                    | . unmatched_while_statement
  157                    | . unmatched_do_statement
  158                    | . unmatched_for_statement
  159 matched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE matched_statement
  160 unmatched_if_statement: . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS statement
  161                       | . IF LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement ELSE unmatched_statement
  162 switch_statement: . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE switch_cases RIGHT_CURLY_BRACE
  163                 | . SWITCH LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
  170 matched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS matched_statement
  171 unmatched_while_statement: . WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS unmatched_statement
  172 matched_do_statement: . DO matched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  173 unmatched_do_statement: . DO unmatched_statement WHILE LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS SEMICOLON
  174 matched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  175                      | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  176                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  177                      | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS matched_statement
  178                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  178                      | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . matched_statement
  179                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  180                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  181                      | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  182                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  183                      | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS matched_statement
  184                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement
  185                      | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS matched_statement
  186 unmatched_for_statement: . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  187                        | . FOR LEFT_PARENTHESIS variable_declaration comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  188                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  189                        | . FOR LEFT_PARENTHESIS variable_declaration SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  190                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  190                        | FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS . unmatched_statement
  191                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  192                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  193                        | . FOR LEFT_PARENTHESIS comma_expression SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  194                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  195                        | . FOR LEFT_PARENTHESIS SEMICOLON comma_expression SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  196                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement
  197                        | . FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS unmatched_statement
  198 break_statement: . BREAK SEMICOLON
  199 continue_statement: . CONTINUE SEMICOLON
  200 return_statement: . RETURN comma_expression SEMICOLON
  226 comma_expression: . assignment_expression COMMA comma_expression
  227                 | . assignment_expression
  228 assignment_expression: . logical_or_expression ASSIGN_OP assignment_expression
  229                      | . logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
  230                      | . logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
  231                      | . logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
  232                      | . logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
  233                      | . logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
  234                      | . logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
  235                      | . logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
  236                      | . logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
  237                      | . logical_or_expression MODULO_ASSIGN_OP assignment_expression
  238                      | . logical_or_expression PLUS_ASSIGN_OP assignment_expression
  239                      | . logical_or_expression MINUS_ASSIGN_OP assignment_expression
  240                      | . conditional_expression
  241 conditional_expression: . logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression
  242                       | . logical_or_expression
  243 logical_or_expression: . logical_or_expression LOGICAL_OR_OP logical_and_expression
  244                      | . logical_and_expression
  245 logical_and_expression: . logical_and_expression LOGICAL_AND_OP inclusive_or_expression
  246                       | . inclusive_or_expression
  247 inclusive_or_expression: . inclusive_or_expression BITWISE_OR_OP exclusive_or_expression
  248                        | . exclusive_or_expression
  249 exclusive_or_expression: . exclusive_or_expression BITWISE_XOR_OP and_expression
  250                        | . and_expression
  251 and_expression: . and_expression BITWISE_AND_OP equality_expression
  252               | . equality_expression
  253 equality_expression: . equality_expression EQUAL_OP relational_expression
  254                    | . equality_expression NOT_EQUAL_OP relational_expression
  255                    | . relational_expression
  256 relational_expression: . relational_expression LEFT_ANGLE_BRACKET shift_expression
  257                      | . relational_expression LESS_OR_EQUAL_OP shift_expression
  258                      | . relational_expression GREATER_OR_EQUAL_OP shift_expression
  259                      | . relational_expression RIGHT_ANGLE_BRACKET shift_expression
  260                      | . shift_expression
  261 shift_expression: . shift_expression SHIFT_LEFT_OP additive_expression
  262                 | . shift_expression SHIFT_RIGHT_OP additive_expression
  263                 | . shift_expression UNSIGNED_SHIFT_RIGHT_OP additive_expression
  264                 | . additive_expression
  265 additive_expression: . additive_expression POSITIVE_OP multiplicative_expression
  266                    | . additive_expression NEGATIVE_OP multiplicative_expression
  267                    | . multiplicative_expression
  268 multiplicative_expression: . multiplicative_expression STAR unary_expression
  269                          | . multiplicative_expression DIVIDE_OP unary_expression
  270                          | . multiplicative_expression MODULO_OP unary_expression
  271                          | . unary_expression
  272 unary_expression: . BITWISE_COMPLEMENT_OP unary_expression
  273                 | . LOGICAL_NOT_OP unary_expression
  274                 | . POSITIVE_OP unary_expression
  275                 | . NEGATIVE_OP unary_expression
  276                 | . INCREMENT_OP unary_expression
  277                 | . DECREMENT_OP unary_expression
  278                 | . postfix_expression
  279                 | . let_expression
  280 postfix_expression: . matched_postfix_expression
  281                   | . unmatched_postfix_expression
  282 matched_postfix_expression: . matched_postfix_expression INCREMENT_OP
  283                           | . matched_postfix_expression DECREMENT_OP
  284                           | . matched_postfix_expression DOT simple_name
  285                           | . matched_postfix_expression argument_list
  286                           | . matched_postfix_expression LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  287                           | . matched_primary_expression
  288                           | . cast_expression
  289 matched_primary_expression: . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  290                           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  291                           | . literal_expression
  292                           | . LEFT_PARENTHESIS comma_expression RIGHT_PARENTHESIS
  293 unmatched_postfix_expression: . unmatched_postfix_expression INCREMENT_OP
  294                             | . unmatched_postfix_expression DECREMENT_OP
  295                             | . unmatched_postfix_expression DOT simple_name
  296                             | . unmatched_postfix_expression argument_list
  297                             | . unmatched_primary_expression
  298 unmatched_primary_expression: . simple_type
  299 cast_expression: . CAST LEFT_ANGLE_BRACKET type RIGHT_ANGLE_BRACKET LEFT_PARENTHESIS unary_expression RIGHT_PARENTHESIS
  300 let_expression: . LET variable_declaration IN unary_expression
  301               | . LET LEFT_CURLY_BRACE variable_declarations RIGHT_CURLY_BRACE IN unary_expression
  302 literal_expression: . boolean_literal
  303                   | . integer_literal
  304                   | . floating_literal
  305                   | . string_literal
  306 boolean_literal: . TRUE
  307                | . FALSE
  308 integer_literal: . INTEGER_LITERAL
  309 floating_literal: . FLOATING_LITERAL
  310 string_literal: . string_literal STRING_LITERAL
  311               | . STRING_LITERAL
  312 type: . VARYING array_type
  313     | . UNIFORM array_type
  314     | . array_type
  315 array_type: . simple_type LEFT_SQUARE_BRACKET LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET RIGHT_SQUARE_BRACKET
  316           | . simple_type LEFT_SQUARE_BRACKET comma_expression RIGHT_SQUARE_BRACKET
  317           | . simple_type LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
  318           | . simple_type
  319 simple_type: . SCOPE relative_type
  320            | . relative_type
  321 relative_type: . BOOL
  322              | . BOOL2
  323              | . BOOL3
  324              | . BOOL4
  325              | . INT
  326              | . INT2
  327              | . INT3
  328              | . INT4
  329              | . FLOAT
  330              | . FLOAT2
  331              | . FLOAT3
  332              | . FLOAT4
  333              | . FLOAT2X2
  334              | . FLOAT2X3
  335              | . FLOAT2X4
  336              | . FLOAT3X2
  337              | . FLOAT3X3
  338              | . FLOAT3X4
  339              | . FLOAT4X2
  340              | . FLOAT4X3
  341              | . FLOAT4X4
  342              | . DOUBLE
  343              | . DOUBLE2
  344              | . DOUBLE3
  345              | . DOUBLE4
  346              | . DOUBLE2X2
  347              | . DOUBLE2X3
  348              | . DOUBLE2X4
  349              | . DOUBLE3X2
  350              | . DOUBLE3X3
  351              | . DOUBLE3X4
  352              | . DOUBLE4X2
  353              | . DOUBLE4X3
  354              | . DOUBLE4X4
  355              | . COLOR
  356              | . STRING
  357              | . SDF
  358              | . EDF
  359              | . VDF
  360              | . LIGHT_PROFILE
  361              | . MATERIAL
  362              | . MATERIAL_EMISSION
  363              | . MATERIAL_GEOMETRY
  364              | . MATERIAL_SURFACE
  365              | . MATERIAL_VOLUME
  366              | . TEXTURE_2D
  367              | . TEXTURE_3D
  368              | . TEXTURE_CUBE
  369              | . TEXTURE_PTEX
  370              | . BSDF_MEASUREMENT
  371              | . INTENSITY_MODE
  372              | . INTENSITY_RADIANT_EXITANCE
  373              | . INTENSITY_POWER
  374              | . HAIR_BSDF
  375              | . relative_type_qualified_name
  376 relative_type_qualified_name: . relative_type_qualified_name SCOPE IDENT
  377                             | . IDENT

    STRING_LITERAL              shift, and go to state 162
    SEMICOLON                   shift, and go to state 365
    UNIFORM                     shift, and go to state 9
    VARYING                     shift, and go to state 10
    BOOL                        shift, and go to state 11
    BOOL2                       shift, and go to state 12
    BOOL3                       shift, and go to state 13
    BOOL4                       shift, and go to state 14
    INT                         shift, and go to state 15
    INT2                        shift, and go to state 16
    INT3                        shift, and go to state 17
    INT4                        shift, and go to state 18
    FLOAT                       shift, and go to state 19
    FLOAT2                      shift, and go to state 20
    FLOAT3                      shift, and go to state 21
    FLOAT4                      shift, and go to state 22
    FLOAT2X2                    shift, and go to state 23
    FLOAT2X3                    shift, and go to state 24
    FLOAT2X4                    shift, and go to state 25
    FLOAT3X2                    shift, and go to state 26
    FLOAT3X3                    shift, and go to state 27
    FLOAT3X4                    shift, and go to state 28
    FLOAT4X2                    shift, and go to state 29
    FLOAT4X3                    shift, and go to state 30
    FLOAT4X4                    shift, and go to state 31
    DOUBLE                      shift, and go to state 32
    DOUBLE2                     shift, and go to state 33
    DOUBLE3                     shift, and go to state 34
    DOUBLE4                     shift, and go to state 35
    DOUBLE2X2                   shift, and go to state 36
    DOUBLE2X3                   shift, and go to state 37
    DOUBLE2X4                   shift, and go to state 38
    DOUBLE3X2                   shift, and go to state 39
    DOUBLE3X3                   shift, and go to state 40
    DOUBLE3X4                   shift, and go to state 41
    DOUBLE4X2                   shift, and go to state 42
    DOUBLE4X3                   shift, and go to state 43
    DOUBLE4X4                   shift, and go to state 44
    COLOR                       shift, and go to state 45
    STRING                      shift, and go to state 46
    SDF                         shift, and go to state 47
    EDF                         shift, and go to state 48
    VDF                         shift, and go to state 49
    LIGHT_PROFILE               shift, and go to state 50
    MATERIAL                    shift, and go to state 51
    MATERIAL_EMISSION           shift, and go to state 52
    MATERIAL_GEOMETRY           shift, and go to state 53
    MATERIAL_SURFACE            shift, and go to state 54
    MATERIAL_VOLUME             shift, and go to state 55
    TEXTURE_2D                  shift, and go to state 56
    TEXTURE_3D                  shift, and go to state 57
    TEXTURE_CUBE                shift, and go to state 58
    TEXTURE_PTEX                shift, and go to state 59
    BSDF_MEASUREMENT            shift, and go to state 60
    INTENSITY_MODE              shift, and go to state 61
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 62
    INTENSITY_POWER             shift, and go to state 63
    HAIR_BSDF                   shift, and go to state 64
    TRUE                        shift, and go to state 163
    FALSE                       shift, and go to state 164
    LET                         shift, and go to state 165
    CONST                       shift, and go to state 66
    TYPEDEF                     shift, and go to state 67
    STRUCT                      shift, and go to state 68
    ENUM                        shift, and go to state 69
    IF                          shift, and go to state 366
    SWITCH                      shift, and go to state 367
    WHILE                       shift, and go to state 368
    DO                          shift, and go to state 369
    FOR                         shift, and go to state 370
    BREAK                       shift, and go to state 371
    CONTINUE                    shift, and go to state 372
    RETURN                      shift, and go to state 373
    CAST                        shift, and go to state 166
    BITWISE_COMPLEMENT_OP       shift, and go to state 167
    LOGICAL_NOT_OP              shift, and go to state 168
    POSITIVE_OP                 shift, and go to state 169
    NEGATIVE_OP                 shift, and go to state 170
    INCREMENT_OP                shift, and go to state 171
    DECREMENT_OP                shift, and go to state 172
    SCOPE                       shift, and go to state 70
    LEFT_PARENTHESIS            shift, and go to state 173
    LEFT_CURLY_BRACE            shift, and go to state 252
    IDENT                       shift, and go to state 71
    INTEGER_LITERAL             shift, and go to state 176
    FLOATING_LITERAL            shift, and go to state 177

    variable_declaration          go to state 375
    constant_declaration          go to state 376
    type_declaration              go to state 377
    alias_type_declaration        go to state 80
    struct_type_declaration       go to state 81
    enum_type_declaration         go to state 82
    compound_statement            go to state 378
    matched_statement             go to state 675
    unmatched_statement           go to state 676
    matched_if_statement          go to state 383
    unmatched_if_statement        go to state 384
    switch_statement              go to state 385
    matched_while_statement       go to state 386
    unmatched_while_statement     go to state 387
    matched_do_statement          go to state 388
    unmatched_do_statement        go to state 389
    matched_for_statement         go to state 390
    unmatched_for_statement       go to state 391
    break_statement               go to state 392
    continue_statement            go to state 393
    return_statement              go to state 394
    comma_expression              go to state 395
    assignment_expression         go to state 179
    conditional_expression        go to state 180
    logical_or_expression         go to state 181
    logical_and_expression        go to state 182
    inclusive_or_expression       go to state 183
    exclusive_or_expression       go to state 184
    and_expression                go to state 185
    equality_expression           go to state 186
    relational_expression         go to state 187
    shift_expression              go to state 188
    additive_expression           go to state 189
    multiplicative_expression     go to state 190
    unary_expression              go to state 191
    postfix_expression            go to state 192
    matched_postfix_expression    go to state 193
    matched_primary_expression    go to state 194
    unmatched_postfix_expression  go to state 195
    unmatched_primary_expression  go to state 196
    cast_expression               go to state 197
    let_expression                go to state 198
    literal_expression            go to state 199
    boolean_literal               go to state 200
    integer_literal               go to state 201
    floating_literal              go to state 202
    string_literal                go to state 203
    type                          go to state 257
    array_type                    go to state 85
    simple_type                   go to state 396
    relative_type                 go to state 87
    relative_type_qualified_name  go to state 88


State 674

  166 switch_case: CASE comma_expression COLON statement .

    $default  reduce using rule 166 (switch_case)


State 675

  178 matched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS matched_statement .

    $default  reduce using rule 178 (matched_for_statement)


State 676

  190 unmatched_for_statement: FOR LEFT_PARENTHESIS comma_expression SEMICOLON comma_expression SEMICOLON comma_expression RIGHT_PARENTHESIS unmatched_statement .

    $default  reduce using rule 190 (unmatched_for_statement)
