Terminals unused in grammar

   INTEGER_LITERAL


Grammar

    0 $accept: mdl $end

    1 mdl: mdl_version import_declarations_opt module_declaration_opt

    2 mdl_version: MDL FLOATING_LITERAL SEMICOLON

    3 import_declarations_opt: import_declarations
    4                        | %empty

    5 module_declaration_opt: module_declaration
    6                       | %empty

    7 import_declarations: import_declarations import_declaration
    8                    | import_declaration

    9 import_declaration: IMPORT qualified_imports SEMICOLON
   10                   | EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON

   11 qualified_imports: qualified_imports COMMA qualified_import
   12                  | qualified_import

   13 qualified_import_prefix: qualified_import_prefix_opt qualified_name

   14 unqualified_import: unqualified_import_simple_names
   15                   | STAR

   16 qualified_import: qualified_import_prefix_opt qualified_name qualified_import_suffix_opt

   17 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name
   18                                | simple_name

   19 qualified_import_prefix_opt: qualified_import_prefix_relative_current
   20                            | qualified_import_prefix_relative_parent
   21                            | qualified_import_prefix_absolute
   22                            | %empty

   23 qualified_import_prefix_relative_current: DOT SCOPE

   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE
   25                                        | DOTDOT SCOPE

   26 qualified_import_prefix_absolute: SCOPE

   27 qualified_name: qualified_name SCOPE simple_name
   28               | simple_name

   29 qualified_import_suffix_opt: qualified_import_suffix
   30                            | %empty

   31 qualified_import_suffix: SCOPE STAR

   32 simple_name: IDENT

   33 module_declaration: MODULE annotation_block_opt SEMICOLON

   34 annotation_block_opt: annotation_block
   35                     | %empty

   36 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

   37 annotations: annotations COMMA annotation
   38            | annotation

   39 annotation: qualified_name argument_list

   40 argument_list: LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS

   41 named_arguments: named_arguments COMMA named_argument
   42                | named_argument

   43 named_argument: simple_name COLON assignment_expression

   44 comma_expression: assignment_expression COMMA comma_expression
   45                 | assignment_expression

   46 assignment_expression: conditional_expression
   47                      | logical_or_expression ASSIGN_OP assignment_expression
   48                      | logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
   49                      | logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
   50                      | logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
   51                      | logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
   52                      | logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
   53                      | logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
   54                      | logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
   55                      | logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
   56                      | logical_or_expression MODULO_ASSIGN_OP assignment_expression
   57                      | logical_or_expression PLUS_ASSIGN_OP assignment_expression
   58                      | logical_or_expression MINUS_ASSIGN_OP assignment_expression
   59                      | logical_or_expression

   60 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression

   61 logical_or_expression: logical_and_expression LOGICAL_OR_OP logical_or_expression
   62                      | logical_and_expression

   63 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP logical_and_expression
   64                       | inclusive_or_expression

   65 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
   66                        | exclusive_or_expression

   67 exclusive_or_expression: and_expression BITWISE_XOR_OP exclusive_or_expression
   68                        | and_expression

   69 and_expression: equality_expression BITWISE_AND_OP and_expression
   70               | equality_expression

   71 equality_expression: relational_expression EQUAL_OP equality_expression
   72                    | relational_expression NOT_EQUAL_OP equality_expression
   73                    | relational_expression

   74 relational_expression: shift_expression LESS_OP relational_expression
   75                      | shift_expression LESS_OR_EQUAL_OP relational_expression
   76                      | shift_expression GREATER_OR_EQUAL_OP relational_expression
   77                      | shift_expression GREATER_OP relational_expression
   78                      | shift_expression

   79 shift_expression: additive_expression SHIFT_LEFT_OP shift_expression
   80                 | additive_expression SHIFT_RIGHT_OP shift_expression
   81                 | additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
   82                 | additive_expression

   83 additive_expression: multiplicative_expression PLUS_OP additive_expression
   84                    | multiplicative_expression MINUS_OP additive_expression
   85                    | multiplicative_expression

   86 multiplicative_expression: unary_expression MULTIPLY_OP multiplicative_expression
   87                          | unary_expression DIVIDE_OP multiplicative_expression
   88                          | unary_expression MODULO_OP multiplicative_expression
   89                          | unary_expression

   90 unary_expression: LEFT_PARENTHESIS type RIGHT_PARENTHESIS unary_expression
   91                 | postfix_expression

   92 type: frequency_qualifier_opt array_type

   93 postfix_expression: primary_expression

   94 frequency_qualifier_opt: frequency_qualifier
   95                        | %empty

   96 frequency_qualifier: VARYING
   97                    | UNIFORM

   98 array_type: simple_type LEFT_SQUARE_BRACKET array_type_size_opt RIGHT_SQUARE_BRACKET

   99 array_type_size_opt: conditional_expression
  100                    | LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET

  101 simple_type: simple_type_absolute_opt relative_type

  102 simple_type_absolute_opt: SCOPE
  103                         | %empty

  104 relative_type: BOOL
  105              | BOOL2
  106              | BOOL3
  107              | BOOL4
  108              | INT
  109              | INT2
  110              | INT3
  111              | INT4
  112              | FLOAT
  113              | FLOAT2
  114              | FLOAT3
  115              | FLOAT4
  116              | FLOAT2X2
  117              | FLOAT2X3
  118              | FLOAT2X4
  119              | FLOAT3X2
  120              | FLOAT3X3
  121              | FLOAT3X4
  122              | FLOAT4X2
  123              | FLOAT4X3
  124              | FLOAT4X4
  125              | DOUBLE
  126              | DOUBLE2
  127              | DOUBLE3
  128              | DOUBLE4
  129              | DOUBLE2X2
  130              | DOUBLE2X3
  131              | DOUBLE2X4
  132              | DOUBLE3X2
  133              | DOUBLE3X3
  134              | DOUBLE3X4
  135              | DOUBLE4X2
  136              | DOUBLE4X3
  137              | DOUBLE4X4
  138              | COLOR
  139              | STRING
  140              | SDF
  141              | EDF
  142              | VDF
  143              | LIGHT_PROFILE
  144              | MATERIAL
  145              | MATERIAL_EMISSION
  146              | MATERIAL_GEOMETRY
  147              | MATERIAL_SURFACE
  148              | MATERIAL_VOLUME
  149              | TEXTURE_2D
  150              | TEXTURE_3D
  151              | TEXTURE_CUBE
  152              | TEXTURE_PTEX
  153              | BSDF_MEASUREMENT
  154              | INTENSITY_MODE
  155              | INTENSITY_RADIANT_EXITANCE
  156              | INTENSITY_POWER
  157              | HAIR_BSDF
  158              | relative_type_ident

  159 relative_type_ident: IDENT SCOPE relative_type_ident
  160                    | IDENT

  161 primary_expression: literal_expression

  162 literal_expression: boolean_literal

  163 boolean_literal: TRUE
  164                | FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 2 9 10 33
COMMA (259) 11 17 37 41 44
MDL (260) 2
IMPORT (261) 9 10
USING (262) 10
MODULE (263) 33
EXPORT (264) 10
UNIFORM (265) 97
VARYING (266) 96
BOOL (267) 104
BOOL2 (268) 105
BOOL3 (269) 106
BOOL4 (270) 107
INT (271) 108
INT2 (272) 109
INT3 (273) 110
INT4 (274) 111
FLOAT (275) 112
FLOAT2 (276) 113
FLOAT3 (277) 114
FLOAT4 (278) 115
FLOAT2X2 (279) 116
FLOAT2X3 (280) 117
FLOAT2X4 (281) 118
FLOAT3X2 (282) 119
FLOAT3X3 (283) 120
FLOAT3X4 (284) 121
FLOAT4X2 (285) 122
FLOAT4X3 (286) 123
FLOAT4X4 (287) 124
DOUBLE (288) 125
DOUBLE2 (289) 126
DOUBLE3 (290) 127
DOUBLE4 (291) 128
DOUBLE2X2 (292) 129
DOUBLE2X3 (293) 130
DOUBLE2X4 (294) 131
DOUBLE3X2 (295) 132
DOUBLE3X3 (296) 133
DOUBLE3X4 (297) 134
DOUBLE4X2 (298) 135
DOUBLE4X3 (299) 136
DOUBLE4X4 (300) 137
COLOR (301) 138
STRING (302) 139
SDF (303) 140
EDF (304) 141
VDF (305) 142
LIGHT_PROFILE (306) 143
MATERIAL (307) 144
MATERIAL_EMISSION (308) 145
MATERIAL_GEOMETRY (309) 146
MATERIAL_SURFACE (310) 147
MATERIAL_VOLUME (311) 148
TEXTURE_2D (312) 149
TEXTURE_3D (313) 150
TEXTURE_CUBE (314) 151
TEXTURE_PTEX (315) 152
BSDF_MEASUREMENT (316) 153
INTENSITY_MODE (317) 154
INTENSITY_RADIANT_EXITANCE (318) 155
INTENSITY_POWER (319) 156
HAIR_BSDF (320) 157
TRUE (321) 163
FALSE (322) 164
ASSIGN_OP (323) 47
BITWISE_OR_ASSIGN_OP (324) 48
BITWISE_AND_ASSIGN_OP (325) 49
BITWISE_XOR_ASSIGN_OP (326) 50
SHIFT_LEFT_ASSIGN_OP (327) 51
SHIFT_RIGHT_ASSIGN_OP (328) 52
UNSIGNED_SHIFT_RIGHT_ASSIGN_OP (329) 53
MULTIPLY_ASSIGN_OP (330) 54
DIVIDE_ASSIGN_OP (331) 55
MODULO_ASSIGN_OP (332) 56
PLUS_ASSIGN_OP (333) 57
MINUS_ASSIGN_OP (334) 58
CONDITIONAL_OP (335) 60
LOGICAL_OR_OP (336) 61
LOGICAL_AND_OP (337) 63
BITWISE_OR_OP (338) 65
BITWISE_XOR_OP (339) 67
BITWISE_AND_OP (340) 69
EQUAL_OP (341) 71
NOT_EQUAL_OP (342) 72
LESS_OP (343) 74
LESS_OR_EQUAL_OP (344) 75
GREATER_OR_EQUAL_OP (345) 76
GREATER_OP (346) 77
SHIFT_LEFT_OP (347) 79
SHIFT_RIGHT_OP (348) 80
UNSIGNED_SHIFT_RIGHT_OP (349) 81
PLUS_OP (350) 83
MINUS_OP (351) 84
MULTIPLY_OP (352) 86
DIVIDE_OP (353) 87
MODULO_OP (354) 88
DOT (355) 23
DOTDOT (356) 24 25
SCOPE (357) 23 24 25 26 27 31 102 159
STAR (358) 15 31
COLON (359) 43 60
ANNOTATION_BLOCK_BEGIN (360) 36
ANNOTATION_BLOCK_END (361) 36
LEFT_PARENTHESIS (362) 40 90
RIGHT_PARENTHESIS (363) 40 90
LEFT_SQUARE_BRACKET (364) 98
RIGHT_SQUARE_BRACKET (365) 98
LEFT_ANGLE_BRACKET (366) 100
RIGHT_ANGLE_BRACKET (367) 100
IDENT (368) 32 159 160
INTEGER_LITERAL (369)
FLOATING_LITERAL (370) 2


Nonterminals, with rules where they appear

$accept (116)
    on left: 0
mdl (117)
    on left: 1, on right: 0
mdl_version (118)
    on left: 2, on right: 1
import_declarations_opt (119)
    on left: 3 4, on right: 1
module_declaration_opt (120)
    on left: 5 6, on right: 1
import_declarations (121)
    on left: 7 8, on right: 3 7
import_declaration (122)
    on left: 9 10, on right: 7 8
qualified_imports (123)
    on left: 11 12, on right: 9 11
qualified_import_prefix (124)
    on left: 13, on right: 10
unqualified_import (125)
    on left: 14 15, on right: 10
qualified_import (126)
    on left: 16, on right: 11 12
unqualified_import_simple_names (127)
    on left: 17 18, on right: 14 17
qualified_import_prefix_opt (128)
    on left: 19 20 21 22, on right: 13 16
qualified_import_prefix_relative_current (129)
    on left: 23, on right: 19
qualified_import_prefix_relative_parent (130)
    on left: 24 25, on right: 20 24
qualified_import_prefix_absolute (131)
    on left: 26, on right: 21
qualified_name (132)
    on left: 27 28, on right: 13 16 27 39
qualified_import_suffix_opt (133)
    on left: 29 30, on right: 16
qualified_import_suffix (134)
    on left: 31, on right: 29
simple_name (135)
    on left: 32, on right: 17 18 27 28 43 100
module_declaration (136)
    on left: 33, on right: 5
annotation_block_opt (137)
    on left: 34 35, on right: 33
annotation_block (138)
    on left: 36, on right: 34
annotations (139)
    on left: 37 38, on right: 36 37
annotation (140)
    on left: 39, on right: 37 38
argument_list (141)
    on left: 40, on right: 39
named_arguments (142)
    on left: 41 42, on right: 40 41
named_argument (143)
    on left: 43, on right: 41 42
comma_expression (144)
    on left: 44 45, on right: 44 60
assignment_expression (145)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59, on right: 43
    44 45 47 48 49 50 51 52 53 54 55 56 57 58 60
conditional_expression (146)
    on left: 60, on right: 46 99
logical_or_expression (147)
    on left: 61 62, on right: 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61
logical_and_expression (148)
    on left: 63 64, on right: 61 62 63
inclusive_or_expression (149)
    on left: 65 66, on right: 63 64 65
exclusive_or_expression (150)
    on left: 67 68, on right: 65 66 67
and_expression (151)
    on left: 69 70, on right: 67 68 69
equality_expression (152)
    on left: 71 72 73, on right: 69 70 71 72
relational_expression (153)
    on left: 74 75 76 77 78, on right: 71 72 73 74 75 76 77
shift_expression (154)
    on left: 79 80 81 82, on right: 74 75 76 77 78 79 80 81
additive_expression (155)
    on left: 83 84 85, on right: 79 80 81 82 83 84
multiplicative_expression (156)
    on left: 86 87 88 89, on right: 83 84 85 86 87 88
unary_expression (157)
    on left: 90 91, on right: 86 87 88 89 90
type (158)
    on left: 92, on right: 90
postfix_expression (159)
    on left: 93, on right: 91
frequency_qualifier_opt (160)
    on left: 94 95, on right: 92
frequency_qualifier (161)
    on left: 96 97, on right: 94
array_type (162)
    on left: 98, on right: 92
array_type_size_opt (163)
    on left: 99 100, on right: 98
simple_type (164)
    on left: 101, on right: 98
simple_type_absolute_opt (165)
    on left: 102 103, on right: 101
relative_type (166)
    on left: 104 105 106 107 108 109 110 111 112 113 114 115 116 117
    118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133
    134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149
    150 151 152 153 154 155 156 157 158, on right: 101
relative_type_ident (167)
    on left: 159 160, on right: 158 159
primary_expression (168)
    on left: 161, on right: 93
literal_expression (169)
    on left: 162, on right: 161
boolean_literal (170)
    on left: 163 164, on right: 162


State 0

    0 $accept: . mdl $end

    MDL  shift, and go to state 1

    mdl          go to state 2
    mdl_version  go to state 3


State 1

    2 mdl_version: MDL . FLOATING_LITERAL SEMICOLON

    FLOATING_LITERAL  shift, and go to state 4


State 2

    0 $accept: mdl . $end

    $end  shift, and go to state 5


State 3

    1 mdl: mdl_version . import_declarations_opt module_declaration_opt

    IMPORT  shift, and go to state 6
    EXPORT  shift, and go to state 7

    $default  reduce using rule 4 (import_declarations_opt)

    import_declarations_opt  go to state 8
    import_declarations      go to state 9
    import_declaration       go to state 10


State 4

    2 mdl_version: MDL FLOATING_LITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 11


State 5

    0 $accept: mdl $end .

    $default  accept


State 6

    9 import_declaration: IMPORT . qualified_imports SEMICOLON

    DOT     shift, and go to state 12
    DOTDOT  shift, and go to state 13
    SCOPE   shift, and go to state 14

    $default  reduce using rule 22 (qualified_import_prefix_opt)

    qualified_imports                         go to state 15
    qualified_import                          go to state 16
    qualified_import_prefix_opt               go to state 17
    qualified_import_prefix_relative_current  go to state 18
    qualified_import_prefix_relative_parent   go to state 19
    qualified_import_prefix_absolute          go to state 20


State 7

   10 import_declaration: EXPORT . USING qualified_import_prefix IMPORT unqualified_import SEMICOLON

    USING  shift, and go to state 21


State 8

    1 mdl: mdl_version import_declarations_opt . module_declaration_opt

    MODULE  shift, and go to state 22

    $default  reduce using rule 6 (module_declaration_opt)

    module_declaration_opt  go to state 23
    module_declaration      go to state 24


State 9

    3 import_declarations_opt: import_declarations .
    7 import_declarations: import_declarations . import_declaration

    IMPORT  shift, and go to state 6
    EXPORT  shift, and go to state 7

    $default  reduce using rule 3 (import_declarations_opt)

    import_declaration  go to state 25


State 10

    8 import_declarations: import_declaration .

    $default  reduce using rule 8 (import_declarations)


State 11

    2 mdl_version: MDL FLOATING_LITERAL SEMICOLON .

    $default  reduce using rule 2 (mdl_version)


State 12

   23 qualified_import_prefix_relative_current: DOT . SCOPE

    SCOPE  shift, and go to state 26


State 13

   25 qualified_import_prefix_relative_parent: DOTDOT . SCOPE

    SCOPE  shift, and go to state 27


State 14

   26 qualified_import_prefix_absolute: SCOPE .

    $default  reduce using rule 26 (qualified_import_prefix_absolute)


State 15

    9 import_declaration: IMPORT qualified_imports . SEMICOLON
   11 qualified_imports: qualified_imports . COMMA qualified_import

    SEMICOLON  shift, and go to state 28
    COMMA      shift, and go to state 29


State 16

   12 qualified_imports: qualified_import .

    $default  reduce using rule 12 (qualified_imports)


State 17

   16 qualified_import: qualified_import_prefix_opt . qualified_name qualified_import_suffix_opt

    IDENT  shift, and go to state 30

    qualified_name  go to state 31
    simple_name     go to state 32


State 18

   19 qualified_import_prefix_opt: qualified_import_prefix_relative_current .

    $default  reduce using rule 19 (qualified_import_prefix_opt)


State 19

   20 qualified_import_prefix_opt: qualified_import_prefix_relative_parent .
   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent . DOTDOT SCOPE

    DOTDOT  shift, and go to state 33

    $default  reduce using rule 20 (qualified_import_prefix_opt)


State 20

   21 qualified_import_prefix_opt: qualified_import_prefix_absolute .

    $default  reduce using rule 21 (qualified_import_prefix_opt)


State 21

   10 import_declaration: EXPORT USING . qualified_import_prefix IMPORT unqualified_import SEMICOLON

    DOT     shift, and go to state 12
    DOTDOT  shift, and go to state 13
    SCOPE   shift, and go to state 14

    $default  reduce using rule 22 (qualified_import_prefix_opt)

    qualified_import_prefix                   go to state 34
    qualified_import_prefix_opt               go to state 35
    qualified_import_prefix_relative_current  go to state 18
    qualified_import_prefix_relative_parent   go to state 19
    qualified_import_prefix_absolute          go to state 20


State 22

   33 module_declaration: MODULE . annotation_block_opt SEMICOLON

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 36

    $default  reduce using rule 35 (annotation_block_opt)

    annotation_block_opt  go to state 37
    annotation_block      go to state 38


State 23

    1 mdl: mdl_version import_declarations_opt module_declaration_opt .

    $default  reduce using rule 1 (mdl)


State 24

    5 module_declaration_opt: module_declaration .

    $default  reduce using rule 5 (module_declaration_opt)


State 25

    7 import_declarations: import_declarations import_declaration .

    $default  reduce using rule 7 (import_declarations)


State 26

   23 qualified_import_prefix_relative_current: DOT SCOPE .

    $default  reduce using rule 23 (qualified_import_prefix_relative_current)


State 27

   25 qualified_import_prefix_relative_parent: DOTDOT SCOPE .

    $default  reduce using rule 25 (qualified_import_prefix_relative_parent)


State 28

    9 import_declaration: IMPORT qualified_imports SEMICOLON .

    $default  reduce using rule 9 (import_declaration)


State 29

   11 qualified_imports: qualified_imports COMMA . qualified_import

    DOT     shift, and go to state 12
    DOTDOT  shift, and go to state 13
    SCOPE   shift, and go to state 14

    $default  reduce using rule 22 (qualified_import_prefix_opt)

    qualified_import                          go to state 39
    qualified_import_prefix_opt               go to state 17
    qualified_import_prefix_relative_current  go to state 18
    qualified_import_prefix_relative_parent   go to state 19
    qualified_import_prefix_absolute          go to state 20


State 30

   32 simple_name: IDENT .

    $default  reduce using rule 32 (simple_name)


State 31

   16 qualified_import: qualified_import_prefix_opt qualified_name . qualified_import_suffix_opt
   27 qualified_name: qualified_name . SCOPE simple_name

    SCOPE  shift, and go to state 40

    $default  reduce using rule 30 (qualified_import_suffix_opt)

    qualified_import_suffix_opt  go to state 41
    qualified_import_suffix      go to state 42


State 32

   28 qualified_name: simple_name .

    $default  reduce using rule 28 (qualified_name)


State 33

   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT . SCOPE

    SCOPE  shift, and go to state 43


State 34

   10 import_declaration: EXPORT USING qualified_import_prefix . IMPORT unqualified_import SEMICOLON

    IMPORT  shift, and go to state 44


State 35

   13 qualified_import_prefix: qualified_import_prefix_opt . qualified_name

    IDENT  shift, and go to state 30

    qualified_name  go to state 45
    simple_name     go to state 32


State 36

   36 annotation_block: ANNOTATION_BLOCK_BEGIN . annotations ANNOTATION_BLOCK_END

    IDENT  shift, and go to state 30

    qualified_name  go to state 46
    simple_name     go to state 32
    annotations     go to state 47
    annotation      go to state 48


State 37

   33 module_declaration: MODULE annotation_block_opt . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 38

   34 annotation_block_opt: annotation_block .

    $default  reduce using rule 34 (annotation_block_opt)


State 39

   11 qualified_imports: qualified_imports COMMA qualified_import .

    $default  reduce using rule 11 (qualified_imports)


State 40

   27 qualified_name: qualified_name SCOPE . simple_name
   31 qualified_import_suffix: SCOPE . STAR

    STAR   shift, and go to state 50
    IDENT  shift, and go to state 30

    simple_name  go to state 51


State 41

   16 qualified_import: qualified_import_prefix_opt qualified_name qualified_import_suffix_opt .

    $default  reduce using rule 16 (qualified_import)


State 42

   29 qualified_import_suffix_opt: qualified_import_suffix .

    $default  reduce using rule 29 (qualified_import_suffix_opt)


State 43

   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE .

    $default  reduce using rule 24 (qualified_import_prefix_relative_parent)


State 44

   10 import_declaration: EXPORT USING qualified_import_prefix IMPORT . unqualified_import SEMICOLON

    STAR   shift, and go to state 52
    IDENT  shift, and go to state 30

    unqualified_import               go to state 53
    unqualified_import_simple_names  go to state 54
    simple_name                      go to state 55


State 45

   13 qualified_import_prefix: qualified_import_prefix_opt qualified_name .
   27 qualified_name: qualified_name . SCOPE simple_name

    SCOPE  shift, and go to state 56

    $default  reduce using rule 13 (qualified_import_prefix)


State 46

   27 qualified_name: qualified_name . SCOPE simple_name
   39 annotation: qualified_name . argument_list

    SCOPE             shift, and go to state 56
    LEFT_PARENTHESIS  shift, and go to state 57

    argument_list  go to state 58


State 47

   36 annotation_block: ANNOTATION_BLOCK_BEGIN annotations . ANNOTATION_BLOCK_END
   37 annotations: annotations . COMMA annotation

    COMMA                 shift, and go to state 59
    ANNOTATION_BLOCK_END  shift, and go to state 60


State 48

   38 annotations: annotation .

    $default  reduce using rule 38 (annotations)


State 49

   33 module_declaration: MODULE annotation_block_opt SEMICOLON .

    $default  reduce using rule 33 (module_declaration)


State 50

   31 qualified_import_suffix: SCOPE STAR .

    $default  reduce using rule 31 (qualified_import_suffix)


State 51

   27 qualified_name: qualified_name SCOPE simple_name .

    $default  reduce using rule 27 (qualified_name)


State 52

   15 unqualified_import: STAR .

    $default  reduce using rule 15 (unqualified_import)


State 53

   10 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 54

   14 unqualified_import: unqualified_import_simple_names .
   17 unqualified_import_simple_names: unqualified_import_simple_names . COMMA simple_name

    COMMA  shift, and go to state 62

    $default  reduce using rule 14 (unqualified_import)


State 55

   18 unqualified_import_simple_names: simple_name .

    $default  reduce using rule 18 (unqualified_import_simple_names)


State 56

   27 qualified_name: qualified_name SCOPE . simple_name

    IDENT  shift, and go to state 30

    simple_name  go to state 51


State 57

   40 argument_list: LEFT_PARENTHESIS . named_arguments RIGHT_PARENTHESIS

    IDENT  shift, and go to state 30

    simple_name      go to state 63
    named_arguments  go to state 64
    named_argument   go to state 65


State 58

   39 annotation: qualified_name argument_list .

    $default  reduce using rule 39 (annotation)


State 59

   37 annotations: annotations COMMA . annotation

    IDENT  shift, and go to state 30

    qualified_name  go to state 46
    simple_name     go to state 32
    annotation      go to state 66


State 60

   36 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END .

    $default  reduce using rule 36 (annotation_block)


State 61

   10 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON .

    $default  reduce using rule 10 (import_declaration)


State 62

   17 unqualified_import_simple_names: unqualified_import_simple_names COMMA . simple_name

    IDENT  shift, and go to state 30

    simple_name  go to state 67


State 63

   43 named_argument: simple_name . COLON assignment_expression

    COLON  shift, and go to state 68


State 64

   40 argument_list: LEFT_PARENTHESIS named_arguments . RIGHT_PARENTHESIS
   41 named_arguments: named_arguments . COMMA named_argument

    COMMA              shift, and go to state 69
    RIGHT_PARENTHESIS  shift, and go to state 70


State 65

   42 named_arguments: named_argument .

    $default  reduce using rule 42 (named_arguments)


State 66

   37 annotations: annotations COMMA annotation .

    $default  reduce using rule 37 (annotations)


State 67

   17 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name .

    $default  reduce using rule 17 (unqualified_import_simple_names)


State 68

   43 named_argument: simple_name COLON . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 74
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 69

   41 named_arguments: named_arguments COMMA . named_argument

    IDENT  shift, and go to state 30

    simple_name     go to state 63
    named_argument  go to state 91


State 70

   40 argument_list: LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 40 (argument_list)


State 71

  163 boolean_literal: TRUE .

    $default  reduce using rule 163 (boolean_literal)


State 72

  164 boolean_literal: FALSE .

    $default  reduce using rule 164 (boolean_literal)


State 73

   90 unary_expression: LEFT_PARENTHESIS . type RIGHT_PARENTHESIS unary_expression

    UNIFORM  shift, and go to state 92
    VARYING  shift, and go to state 93

    $default  reduce using rule 95 (frequency_qualifier_opt)

    type                     go to state 94
    frequency_qualifier_opt  go to state 95
    frequency_qualifier      go to state 96


State 74

   43 named_argument: simple_name COLON assignment_expression .

    $default  reduce using rule 43 (named_argument)


State 75

   46 assignment_expression: conditional_expression .

    $default  reduce using rule 46 (assignment_expression)


State 76

   47 assignment_expression: logical_or_expression . ASSIGN_OP assignment_expression
   48                      | logical_or_expression . BITWISE_OR_ASSIGN_OP assignment_expression
   49                      | logical_or_expression . BITWISE_AND_ASSIGN_OP assignment_expression
   50                      | logical_or_expression . BITWISE_XOR_ASSIGN_OP assignment_expression
   51                      | logical_or_expression . SHIFT_LEFT_ASSIGN_OP assignment_expression
   52                      | logical_or_expression . SHIFT_RIGHT_ASSIGN_OP assignment_expression
   53                      | logical_or_expression . UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
   54                      | logical_or_expression . MULTIPLY_ASSIGN_OP assignment_expression
   55                      | logical_or_expression . DIVIDE_ASSIGN_OP assignment_expression
   56                      | logical_or_expression . MODULO_ASSIGN_OP assignment_expression
   57                      | logical_or_expression . PLUS_ASSIGN_OP assignment_expression
   58                      | logical_or_expression . MINUS_ASSIGN_OP assignment_expression
   59                      | logical_or_expression .
   60 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression

    ASSIGN_OP                       shift, and go to state 97
    BITWISE_OR_ASSIGN_OP            shift, and go to state 98
    BITWISE_AND_ASSIGN_OP           shift, and go to state 99
    BITWISE_XOR_ASSIGN_OP           shift, and go to state 100
    SHIFT_LEFT_ASSIGN_OP            shift, and go to state 101
    SHIFT_RIGHT_ASSIGN_OP           shift, and go to state 102
    UNSIGNED_SHIFT_RIGHT_ASSIGN_OP  shift, and go to state 103
    MULTIPLY_ASSIGN_OP              shift, and go to state 104
    DIVIDE_ASSIGN_OP                shift, and go to state 105
    MODULO_ASSIGN_OP                shift, and go to state 106
    PLUS_ASSIGN_OP                  shift, and go to state 107
    MINUS_ASSIGN_OP                 shift, and go to state 108
    CONDITIONAL_OP                  shift, and go to state 109

    $default  reduce using rule 59 (assignment_expression)


State 77

   61 logical_or_expression: logical_and_expression . LOGICAL_OR_OP logical_or_expression
   62                      | logical_and_expression .

    LOGICAL_OR_OP  shift, and go to state 110

    $default  reduce using rule 62 (logical_or_expression)


State 78

   63 logical_and_expression: inclusive_or_expression . LOGICAL_AND_OP logical_and_expression
   64                       | inclusive_or_expression .

    LOGICAL_AND_OP  shift, and go to state 111

    $default  reduce using rule 64 (logical_and_expression)


State 79

   65 inclusive_or_expression: exclusive_or_expression . BITWISE_OR_OP inclusive_or_expression
   66                        | exclusive_or_expression .

    BITWISE_OR_OP  shift, and go to state 112

    $default  reduce using rule 66 (inclusive_or_expression)


State 80

   67 exclusive_or_expression: and_expression . BITWISE_XOR_OP exclusive_or_expression
   68                        | and_expression .

    BITWISE_XOR_OP  shift, and go to state 113

    $default  reduce using rule 68 (exclusive_or_expression)


State 81

   69 and_expression: equality_expression . BITWISE_AND_OP and_expression
   70               | equality_expression .

    BITWISE_AND_OP  shift, and go to state 114

    $default  reduce using rule 70 (and_expression)


State 82

   71 equality_expression: relational_expression . EQUAL_OP equality_expression
   72                    | relational_expression . NOT_EQUAL_OP equality_expression
   73                    | relational_expression .

    EQUAL_OP      shift, and go to state 115
    NOT_EQUAL_OP  shift, and go to state 116

    $default  reduce using rule 73 (equality_expression)


State 83

   74 relational_expression: shift_expression . LESS_OP relational_expression
   75                      | shift_expression . LESS_OR_EQUAL_OP relational_expression
   76                      | shift_expression . GREATER_OR_EQUAL_OP relational_expression
   77                      | shift_expression . GREATER_OP relational_expression
   78                      | shift_expression .

    LESS_OP              shift, and go to state 117
    LESS_OR_EQUAL_OP     shift, and go to state 118
    GREATER_OR_EQUAL_OP  shift, and go to state 119
    GREATER_OP           shift, and go to state 120

    $default  reduce using rule 78 (relational_expression)


State 84

   79 shift_expression: additive_expression . SHIFT_LEFT_OP shift_expression
   80                 | additive_expression . SHIFT_RIGHT_OP shift_expression
   81                 | additive_expression . UNSIGNED_SHIFT_RIGHT_OP shift_expression
   82                 | additive_expression .

    SHIFT_LEFT_OP            shift, and go to state 121
    SHIFT_RIGHT_OP           shift, and go to state 122
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 123

    $default  reduce using rule 82 (shift_expression)


State 85

   83 additive_expression: multiplicative_expression . PLUS_OP additive_expression
   84                    | multiplicative_expression . MINUS_OP additive_expression
   85                    | multiplicative_expression .

    PLUS_OP   shift, and go to state 124
    MINUS_OP  shift, and go to state 125

    $default  reduce using rule 85 (additive_expression)


State 86

   86 multiplicative_expression: unary_expression . MULTIPLY_OP multiplicative_expression
   87                          | unary_expression . DIVIDE_OP multiplicative_expression
   88                          | unary_expression . MODULO_OP multiplicative_expression
   89                          | unary_expression .

    MULTIPLY_OP  shift, and go to state 126
    DIVIDE_OP    shift, and go to state 127
    MODULO_OP    shift, and go to state 128

    $default  reduce using rule 89 (multiplicative_expression)


State 87

   91 unary_expression: postfix_expression .

    $default  reduce using rule 91 (unary_expression)


State 88

   93 postfix_expression: primary_expression .

    $default  reduce using rule 93 (postfix_expression)


State 89

  161 primary_expression: literal_expression .

    $default  reduce using rule 161 (primary_expression)


State 90

  162 literal_expression: boolean_literal .

    $default  reduce using rule 162 (literal_expression)


State 91

   41 named_arguments: named_arguments COMMA named_argument .

    $default  reduce using rule 41 (named_arguments)


State 92

   97 frequency_qualifier: UNIFORM .

    $default  reduce using rule 97 (frequency_qualifier)


State 93

   96 frequency_qualifier: VARYING .

    $default  reduce using rule 96 (frequency_qualifier)


State 94

   90 unary_expression: LEFT_PARENTHESIS type . RIGHT_PARENTHESIS unary_expression

    RIGHT_PARENTHESIS  shift, and go to state 129


State 95

   92 type: frequency_qualifier_opt . array_type

    SCOPE  shift, and go to state 130

    $default  reduce using rule 103 (simple_type_absolute_opt)

    array_type                go to state 131
    simple_type               go to state 132
    simple_type_absolute_opt  go to state 133


State 96

   94 frequency_qualifier_opt: frequency_qualifier .

    $default  reduce using rule 94 (frequency_qualifier_opt)


State 97

   47 assignment_expression: logical_or_expression ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 134
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 98

   48 assignment_expression: logical_or_expression BITWISE_OR_ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 135
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 99

   49 assignment_expression: logical_or_expression BITWISE_AND_ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 136
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 100

   50 assignment_expression: logical_or_expression BITWISE_XOR_ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 137
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 101

   51 assignment_expression: logical_or_expression SHIFT_LEFT_ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 138
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 102

   52 assignment_expression: logical_or_expression SHIFT_RIGHT_ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 139
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 103

   53 assignment_expression: logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 140
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 104

   54 assignment_expression: logical_or_expression MULTIPLY_ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 141
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 105

   55 assignment_expression: logical_or_expression DIVIDE_ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 142
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 106

   56 assignment_expression: logical_or_expression MODULO_ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 143
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 107

   57 assignment_expression: logical_or_expression PLUS_ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 144
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 108

   58 assignment_expression: logical_or_expression MINUS_ASSIGN_OP . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 145
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 109

   60 conditional_expression: logical_or_expression CONDITIONAL_OP . comma_expression COLON assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    comma_expression           go to state 146
    assignment_expression      go to state 147
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 110

   61 logical_or_expression: logical_and_expression LOGICAL_OR_OP . logical_or_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    logical_or_expression      go to state 148
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 111

   63 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP . logical_and_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    logical_and_expression     go to state 149
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 112

   65 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP . inclusive_or_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    inclusive_or_expression    go to state 150
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 113

   67 exclusive_or_expression: and_expression BITWISE_XOR_OP . exclusive_or_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    exclusive_or_expression    go to state 151
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 114

   69 and_expression: equality_expression BITWISE_AND_OP . and_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    and_expression             go to state 152
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 115

   71 equality_expression: relational_expression EQUAL_OP . equality_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    equality_expression        go to state 153
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 116

   72 equality_expression: relational_expression NOT_EQUAL_OP . equality_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    equality_expression        go to state 154
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 117

   74 relational_expression: shift_expression LESS_OP . relational_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    relational_expression      go to state 155
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 118

   75 relational_expression: shift_expression LESS_OR_EQUAL_OP . relational_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    relational_expression      go to state 156
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 119

   76 relational_expression: shift_expression GREATER_OR_EQUAL_OP . relational_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    relational_expression      go to state 157
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 120

   77 relational_expression: shift_expression GREATER_OP . relational_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    relational_expression      go to state 158
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 121

   79 shift_expression: additive_expression SHIFT_LEFT_OP . shift_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    shift_expression           go to state 159
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 122

   80 shift_expression: additive_expression SHIFT_RIGHT_OP . shift_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    shift_expression           go to state 160
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 123

   81 shift_expression: additive_expression UNSIGNED_SHIFT_RIGHT_OP . shift_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    shift_expression           go to state 161
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 124

   83 additive_expression: multiplicative_expression PLUS_OP . additive_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    additive_expression        go to state 162
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 125

   84 additive_expression: multiplicative_expression MINUS_OP . additive_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    additive_expression        go to state 163
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 126

   86 multiplicative_expression: unary_expression MULTIPLY_OP . multiplicative_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    multiplicative_expression  go to state 164
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 127

   87 multiplicative_expression: unary_expression DIVIDE_OP . multiplicative_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    multiplicative_expression  go to state 165
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 128

   88 multiplicative_expression: unary_expression MODULO_OP . multiplicative_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    multiplicative_expression  go to state 166
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 129

   90 unary_expression: LEFT_PARENTHESIS type RIGHT_PARENTHESIS . unary_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    unary_expression    go to state 167
    postfix_expression  go to state 87
    primary_expression  go to state 88
    literal_expression  go to state 89
    boolean_literal     go to state 90


State 130

  102 simple_type_absolute_opt: SCOPE .

    $default  reduce using rule 102 (simple_type_absolute_opt)


State 131

   92 type: frequency_qualifier_opt array_type .

    $default  reduce using rule 92 (type)


State 132

   98 array_type: simple_type . LEFT_SQUARE_BRACKET array_type_size_opt RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 168


State 133

  101 simple_type: simple_type_absolute_opt . relative_type

    BOOL                        shift, and go to state 169
    BOOL2                       shift, and go to state 170
    BOOL3                       shift, and go to state 171
    BOOL4                       shift, and go to state 172
    INT                         shift, and go to state 173
    INT2                        shift, and go to state 174
    INT3                        shift, and go to state 175
    INT4                        shift, and go to state 176
    FLOAT                       shift, and go to state 177
    FLOAT2                      shift, and go to state 178
    FLOAT3                      shift, and go to state 179
    FLOAT4                      shift, and go to state 180
    FLOAT2X2                    shift, and go to state 181
    FLOAT2X3                    shift, and go to state 182
    FLOAT2X4                    shift, and go to state 183
    FLOAT3X2                    shift, and go to state 184
    FLOAT3X3                    shift, and go to state 185
    FLOAT3X4                    shift, and go to state 186
    FLOAT4X2                    shift, and go to state 187
    FLOAT4X3                    shift, and go to state 188
    FLOAT4X4                    shift, and go to state 189
    DOUBLE                      shift, and go to state 190
    DOUBLE2                     shift, and go to state 191
    DOUBLE3                     shift, and go to state 192
    DOUBLE4                     shift, and go to state 193
    DOUBLE2X2                   shift, and go to state 194
    DOUBLE2X3                   shift, and go to state 195
    DOUBLE2X4                   shift, and go to state 196
    DOUBLE3X2                   shift, and go to state 197
    DOUBLE3X3                   shift, and go to state 198
    DOUBLE3X4                   shift, and go to state 199
    DOUBLE4X2                   shift, and go to state 200
    DOUBLE4X3                   shift, and go to state 201
    DOUBLE4X4                   shift, and go to state 202
    COLOR                       shift, and go to state 203
    STRING                      shift, and go to state 204
    SDF                         shift, and go to state 205
    EDF                         shift, and go to state 206
    VDF                         shift, and go to state 207
    LIGHT_PROFILE               shift, and go to state 208
    MATERIAL                    shift, and go to state 209
    MATERIAL_EMISSION           shift, and go to state 210
    MATERIAL_GEOMETRY           shift, and go to state 211
    MATERIAL_SURFACE            shift, and go to state 212
    MATERIAL_VOLUME             shift, and go to state 213
    TEXTURE_2D                  shift, and go to state 214
    TEXTURE_3D                  shift, and go to state 215
    TEXTURE_CUBE                shift, and go to state 216
    TEXTURE_PTEX                shift, and go to state 217
    BSDF_MEASUREMENT            shift, and go to state 218
    INTENSITY_MODE              shift, and go to state 219
    INTENSITY_RADIANT_EXITANCE  shift, and go to state 220
    INTENSITY_POWER             shift, and go to state 221
    HAIR_BSDF                   shift, and go to state 222
    IDENT                       shift, and go to state 223

    relative_type        go to state 224
    relative_type_ident  go to state 225


State 134

   47 assignment_expression: logical_or_expression ASSIGN_OP assignment_expression .

    $default  reduce using rule 47 (assignment_expression)


State 135

   48 assignment_expression: logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 48 (assignment_expression)


State 136

   49 assignment_expression: logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression .

    $default  reduce using rule 49 (assignment_expression)


State 137

   50 assignment_expression: logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 50 (assignment_expression)


State 138

   51 assignment_expression: logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 51 (assignment_expression)


State 139

   52 assignment_expression: logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 52 (assignment_expression)


State 140

   53 assignment_expression: logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 53 (assignment_expression)


State 141

   54 assignment_expression: logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression .

    $default  reduce using rule 54 (assignment_expression)


State 142

   55 assignment_expression: logical_or_expression DIVIDE_ASSIGN_OP assignment_expression .

    $default  reduce using rule 55 (assignment_expression)


State 143

   56 assignment_expression: logical_or_expression MODULO_ASSIGN_OP assignment_expression .

    $default  reduce using rule 56 (assignment_expression)


State 144

   57 assignment_expression: logical_or_expression PLUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 57 (assignment_expression)


State 145

   58 assignment_expression: logical_or_expression MINUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 58 (assignment_expression)


State 146

   60 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression . COLON assignment_expression

    COLON  shift, and go to state 226


State 147

   44 comma_expression: assignment_expression . COMMA comma_expression
   45                 | assignment_expression .

    COMMA  shift, and go to state 227

    $default  reduce using rule 45 (comma_expression)


State 148

   61 logical_or_expression: logical_and_expression LOGICAL_OR_OP logical_or_expression .

    $default  reduce using rule 61 (logical_or_expression)


State 149

   63 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP logical_and_expression .

    $default  reduce using rule 63 (logical_and_expression)


State 150

   65 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP inclusive_or_expression .

    $default  reduce using rule 65 (inclusive_or_expression)


State 151

   67 exclusive_or_expression: and_expression BITWISE_XOR_OP exclusive_or_expression .

    $default  reduce using rule 67 (exclusive_or_expression)


State 152

   69 and_expression: equality_expression BITWISE_AND_OP and_expression .

    $default  reduce using rule 69 (and_expression)


State 153

   71 equality_expression: relational_expression EQUAL_OP equality_expression .

    $default  reduce using rule 71 (equality_expression)


State 154

   72 equality_expression: relational_expression NOT_EQUAL_OP equality_expression .

    $default  reduce using rule 72 (equality_expression)


State 155

   74 relational_expression: shift_expression LESS_OP relational_expression .

    $default  reduce using rule 74 (relational_expression)


State 156

   75 relational_expression: shift_expression LESS_OR_EQUAL_OP relational_expression .

    $default  reduce using rule 75 (relational_expression)


State 157

   76 relational_expression: shift_expression GREATER_OR_EQUAL_OP relational_expression .

    $default  reduce using rule 76 (relational_expression)


State 158

   77 relational_expression: shift_expression GREATER_OP relational_expression .

    $default  reduce using rule 77 (relational_expression)


State 159

   79 shift_expression: additive_expression SHIFT_LEFT_OP shift_expression .

    $default  reduce using rule 79 (shift_expression)


State 160

   80 shift_expression: additive_expression SHIFT_RIGHT_OP shift_expression .

    $default  reduce using rule 80 (shift_expression)


State 161

   81 shift_expression: additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression .

    $default  reduce using rule 81 (shift_expression)


State 162

   83 additive_expression: multiplicative_expression PLUS_OP additive_expression .

    $default  reduce using rule 83 (additive_expression)


State 163

   84 additive_expression: multiplicative_expression MINUS_OP additive_expression .

    $default  reduce using rule 84 (additive_expression)


State 164

   86 multiplicative_expression: unary_expression MULTIPLY_OP multiplicative_expression .

    $default  reduce using rule 86 (multiplicative_expression)


State 165

   87 multiplicative_expression: unary_expression DIVIDE_OP multiplicative_expression .

    $default  reduce using rule 87 (multiplicative_expression)


State 166

   88 multiplicative_expression: unary_expression MODULO_OP multiplicative_expression .

    $default  reduce using rule 88 (multiplicative_expression)


State 167

   90 unary_expression: LEFT_PARENTHESIS type RIGHT_PARENTHESIS unary_expression .

    $default  reduce using rule 90 (unary_expression)


State 168

   98 array_type: simple_type LEFT_SQUARE_BRACKET . array_type_size_opt RIGHT_SQUARE_BRACKET

    TRUE                shift, and go to state 71
    FALSE               shift, and go to state 72
    LEFT_PARENTHESIS    shift, and go to state 73
    LEFT_ANGLE_BRACKET  shift, and go to state 228

    conditional_expression     go to state 229
    logical_or_expression      go to state 230
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    array_type_size_opt        go to state 231
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 169

  104 relative_type: BOOL .

    $default  reduce using rule 104 (relative_type)


State 170

  105 relative_type: BOOL2 .

    $default  reduce using rule 105 (relative_type)


State 171

  106 relative_type: BOOL3 .

    $default  reduce using rule 106 (relative_type)


State 172

  107 relative_type: BOOL4 .

    $default  reduce using rule 107 (relative_type)


State 173

  108 relative_type: INT .

    $default  reduce using rule 108 (relative_type)


State 174

  109 relative_type: INT2 .

    $default  reduce using rule 109 (relative_type)


State 175

  110 relative_type: INT3 .

    $default  reduce using rule 110 (relative_type)


State 176

  111 relative_type: INT4 .

    $default  reduce using rule 111 (relative_type)


State 177

  112 relative_type: FLOAT .

    $default  reduce using rule 112 (relative_type)


State 178

  113 relative_type: FLOAT2 .

    $default  reduce using rule 113 (relative_type)


State 179

  114 relative_type: FLOAT3 .

    $default  reduce using rule 114 (relative_type)


State 180

  115 relative_type: FLOAT4 .

    $default  reduce using rule 115 (relative_type)


State 181

  116 relative_type: FLOAT2X2 .

    $default  reduce using rule 116 (relative_type)


State 182

  117 relative_type: FLOAT2X3 .

    $default  reduce using rule 117 (relative_type)


State 183

  118 relative_type: FLOAT2X4 .

    $default  reduce using rule 118 (relative_type)


State 184

  119 relative_type: FLOAT3X2 .

    $default  reduce using rule 119 (relative_type)


State 185

  120 relative_type: FLOAT3X3 .

    $default  reduce using rule 120 (relative_type)


State 186

  121 relative_type: FLOAT3X4 .

    $default  reduce using rule 121 (relative_type)


State 187

  122 relative_type: FLOAT4X2 .

    $default  reduce using rule 122 (relative_type)


State 188

  123 relative_type: FLOAT4X3 .

    $default  reduce using rule 123 (relative_type)


State 189

  124 relative_type: FLOAT4X4 .

    $default  reduce using rule 124 (relative_type)


State 190

  125 relative_type: DOUBLE .

    $default  reduce using rule 125 (relative_type)


State 191

  126 relative_type: DOUBLE2 .

    $default  reduce using rule 126 (relative_type)


State 192

  127 relative_type: DOUBLE3 .

    $default  reduce using rule 127 (relative_type)


State 193

  128 relative_type: DOUBLE4 .

    $default  reduce using rule 128 (relative_type)


State 194

  129 relative_type: DOUBLE2X2 .

    $default  reduce using rule 129 (relative_type)


State 195

  130 relative_type: DOUBLE2X3 .

    $default  reduce using rule 130 (relative_type)


State 196

  131 relative_type: DOUBLE2X4 .

    $default  reduce using rule 131 (relative_type)


State 197

  132 relative_type: DOUBLE3X2 .

    $default  reduce using rule 132 (relative_type)


State 198

  133 relative_type: DOUBLE3X3 .

    $default  reduce using rule 133 (relative_type)


State 199

  134 relative_type: DOUBLE3X4 .

    $default  reduce using rule 134 (relative_type)


State 200

  135 relative_type: DOUBLE4X2 .

    $default  reduce using rule 135 (relative_type)


State 201

  136 relative_type: DOUBLE4X3 .

    $default  reduce using rule 136 (relative_type)


State 202

  137 relative_type: DOUBLE4X4 .

    $default  reduce using rule 137 (relative_type)


State 203

  138 relative_type: COLOR .

    $default  reduce using rule 138 (relative_type)


State 204

  139 relative_type: STRING .

    $default  reduce using rule 139 (relative_type)


State 205

  140 relative_type: SDF .

    $default  reduce using rule 140 (relative_type)


State 206

  141 relative_type: EDF .

    $default  reduce using rule 141 (relative_type)


State 207

  142 relative_type: VDF .

    $default  reduce using rule 142 (relative_type)


State 208

  143 relative_type: LIGHT_PROFILE .

    $default  reduce using rule 143 (relative_type)


State 209

  144 relative_type: MATERIAL .

    $default  reduce using rule 144 (relative_type)


State 210

  145 relative_type: MATERIAL_EMISSION .

    $default  reduce using rule 145 (relative_type)


State 211

  146 relative_type: MATERIAL_GEOMETRY .

    $default  reduce using rule 146 (relative_type)


State 212

  147 relative_type: MATERIAL_SURFACE .

    $default  reduce using rule 147 (relative_type)


State 213

  148 relative_type: MATERIAL_VOLUME .

    $default  reduce using rule 148 (relative_type)


State 214

  149 relative_type: TEXTURE_2D .

    $default  reduce using rule 149 (relative_type)


State 215

  150 relative_type: TEXTURE_3D .

    $default  reduce using rule 150 (relative_type)


State 216

  151 relative_type: TEXTURE_CUBE .

    $default  reduce using rule 151 (relative_type)


State 217

  152 relative_type: TEXTURE_PTEX .

    $default  reduce using rule 152 (relative_type)


State 218

  153 relative_type: BSDF_MEASUREMENT .

    $default  reduce using rule 153 (relative_type)


State 219

  154 relative_type: INTENSITY_MODE .

    $default  reduce using rule 154 (relative_type)


State 220

  155 relative_type: INTENSITY_RADIANT_EXITANCE .

    $default  reduce using rule 155 (relative_type)


State 221

  156 relative_type: INTENSITY_POWER .

    $default  reduce using rule 156 (relative_type)


State 222

  157 relative_type: HAIR_BSDF .

    $default  reduce using rule 157 (relative_type)


State 223

  159 relative_type_ident: IDENT . SCOPE relative_type_ident
  160                    | IDENT .

    SCOPE  shift, and go to state 232

    $default  reduce using rule 160 (relative_type_ident)


State 224

  101 simple_type: simple_type_absolute_opt relative_type .

    $default  reduce using rule 101 (simple_type)


State 225

  158 relative_type: relative_type_ident .

    $default  reduce using rule 158 (relative_type)


State 226

   60 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON . assignment_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    assignment_expression      go to state 233
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 227

   44 comma_expression: assignment_expression COMMA . comma_expression

    TRUE              shift, and go to state 71
    FALSE             shift, and go to state 72
    LEFT_PARENTHESIS  shift, and go to state 73

    comma_expression           go to state 234
    assignment_expression      go to state 147
    conditional_expression     go to state 75
    logical_or_expression      go to state 76
    logical_and_expression     go to state 77
    inclusive_or_expression    go to state 78
    exclusive_or_expression    go to state 79
    and_expression             go to state 80
    equality_expression        go to state 81
    relational_expression      go to state 82
    shift_expression           go to state 83
    additive_expression        go to state 84
    multiplicative_expression  go to state 85
    unary_expression           go to state 86
    postfix_expression         go to state 87
    primary_expression         go to state 88
    literal_expression         go to state 89
    boolean_literal            go to state 90


State 228

  100 array_type_size_opt: LEFT_ANGLE_BRACKET . simple_name RIGHT_ANGLE_BRACKET

    IDENT  shift, and go to state 30

    simple_name  go to state 235


State 229

   99 array_type_size_opt: conditional_expression .

    $default  reduce using rule 99 (array_type_size_opt)


State 230

   60 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression

    CONDITIONAL_OP  shift, and go to state 109


State 231

   98 array_type: simple_type LEFT_SQUARE_BRACKET array_type_size_opt . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 236


State 232

  159 relative_type_ident: IDENT SCOPE . relative_type_ident

    IDENT  shift, and go to state 223

    relative_type_ident  go to state 237


State 233

   60 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression .

    $default  reduce using rule 60 (conditional_expression)


State 234

   44 comma_expression: assignment_expression COMMA comma_expression .

    $default  reduce using rule 44 (comma_expression)


State 235

  100 array_type_size_opt: LEFT_ANGLE_BRACKET simple_name . RIGHT_ANGLE_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 238


State 236

   98 array_type: simple_type LEFT_SQUARE_BRACKET array_type_size_opt RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 98 (array_type)


State 237

  159 relative_type_ident: IDENT SCOPE relative_type_ident .

    $default  reduce using rule 159 (relative_type_ident)


State 238

  100 array_type_size_opt: LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET .

    $default  reduce using rule 100 (array_type_size_opt)
