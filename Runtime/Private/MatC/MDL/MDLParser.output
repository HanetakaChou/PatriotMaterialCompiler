Terminals unused in grammar

   INTEGER_LITERAL


Grammar

    0 $accept: mdl $end

    1 mdl: mdl_version import_declarations_opt module_declaration_opt

    2 mdl_version: MDL FLOATING_LITERAL SEMICOLON

    3 import_declarations_opt: import_declarations
    4                        | %empty

    5 module_declaration_opt: module_declaration
    6                       | %empty

    7 import_declarations: import_declarations import_declaration
    8                    | import_declaration

    9 import_declaration: IMPORT qualified_imports SEMICOLON
   10                   | EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON

   11 qualified_imports: qualified_imports COMMA qualified_import
   12                  | qualified_import

   13 qualified_import_prefix: qualified_import_prefix_opt qualified_name

   14 unqualified_import: unqualified_import_simple_names
   15                   | STAR

   16 qualified_import: qualified_import_prefix_opt qualified_name qualified_import_suffix_opt

   17 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name
   18                                | simple_name

   19 qualified_import_prefix_opt: qualified_import_prefix_relative_current
   20                            | qualified_import_prefix_relative_parent
   21                            | qualified_import_prefix_absolute
   22                            | %empty

   23 qualified_import_prefix_relative_current: DOT SCOPE

   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE
   25                                        | DOTDOT SCOPE

   26 qualified_import_prefix_absolute: SCOPE

   27 qualified_name: qualified_name SCOPE simple_name
   28               | simple_name

   29 qualified_import_suffix_opt: qualified_import_suffix
   30                            | %empty

   31 qualified_import_suffix: SCOPE STAR

   32 simple_name: IDENT

   33 module_declaration: MODULE annotation_block_opt SEMICOLON

   34 annotation_block_opt: annotation_block
   35                     | %empty

   36 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END

   37 annotations: annotations COMMA annotation
   38            | annotation

   39 annotation: qualified_name argument_list

   40 argument_list: LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS

   41 named_arguments: named_arguments COMMA named_argument
   42                | named_argument

   43 named_argument: simple_name COLON assignment_expression

   44 comma_expression: assignment_expression COMMA comma_expression
   45                 | assignment_expression

   46 assignment_expression: conditional_expression
   47                      | logical_or_expression ASSIGN_OP assignment_expression
   48                      | logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression
   49                      | logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression
   50                      | logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression
   51                      | logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression
   52                      | logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression
   53                      | logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
   54                      | logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression
   55                      | logical_or_expression DIVIDE_ASSIGN_OP assignment_expression
   56                      | logical_or_expression MODULO_ASSIGN_OP assignment_expression
   57                      | logical_or_expression PLUS_ASSIGN_OP assignment_expression
   58                      | logical_or_expression MINUS_ASSIGN_OP assignment_expression
   59                      | logical_or_expression

   60 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression

   61 logical_or_expression: logical_and_expression LOGICAL_OR_OP logical_or_expression
   62                      | logical_and_expression

   63 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP logical_and_expression
   64                       | inclusive_or_expression

   65 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP inclusive_or_expression
   66                        | exclusive_or_expression

   67 exclusive_or_expression: and_expression BITWISE_XOR_OP exclusive_or_expression
   68                        | and_expression

   69 and_expression: equality_expression BITWISE_AND_OP and_expression
   70               | equality_expression

   71 equality_expression: relational_expression EQUAL_OP equality_expression
   72                    | relational_expression NOT_EQUAL_OP equality_expression
   73                    | relational_expression

   74 relational_expression: shift_expression LESS_OP relational_expression
   75                      | shift_expression LESS_OR_EQUAL_OP relational_expression
   76                      | shift_expression GREATER_OR_EQUAL_OP relational_expression
   77                      | shift_expression GREATER_OP relational_expression
   78                      | shift_expression

   79 shift_expression: additive_expression SHIFT_LEFT_OP shift_expression
   80                 | additive_expression SHIFT_RIGHT_OP shift_expression
   81                 | additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression
   82                 | additive_expression

   83 additive_expression: multiplicative_expression PLUS_OP additive_expression
   84                    | multiplicative_expression MINUS_OP additive_expression
   85                    | multiplicative_expression

   86 multiplicative_expression: unary_expression MULTIPLY_OP multiplicative_expression
   87                          | unary_expression DIVIDE_OP multiplicative_expression
   88                          | unary_expression MODULO_OP multiplicative_expression
   89                          | unary_expression

   90 unary_expression: LEFT_PARENTHESIS type RIGHT_PARENTHESIS

   91 type: frequency_qualifier_opt array_type

   92 frequency_qualifier_opt: frequency_qualifier
   93                        | %empty

   94 frequency_qualifier: VARYING
   95                    | UNIFORM

   96 array_type: simple_type LEFT_SQUARE_BRACKET array_type_size_opt RIGHT_SQUARE_BRACKET

   97 array_type_size_opt: conditional_expression
   98                    | LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET

   99 simple_type: simple_type_absolute_opt relative_type

  100 simple_type_absolute_opt: SCOPE
  101                         | %empty

  102 relative_type: 'A'


Terminals, with rules where they appear

$end (0) 0
'A' (65) 102
error (256)
SEMICOLON (258) 2 9 10 33
COMMA (259) 11 17 37 41 44
MDL (260) 2
IMPORT (261) 9 10
USING (262) 10
MODULE (263) 33
EXPORT (264) 10
UNIFORM (265) 95
VARYING (266) 94
ASSIGN_OP (267) 47
BITWISE_OR_ASSIGN_OP (268) 48
BITWISE_AND_ASSIGN_OP (269) 49
BITWISE_XOR_ASSIGN_OP (270) 50
SHIFT_LEFT_ASSIGN_OP (271) 51
SHIFT_RIGHT_ASSIGN_OP (272) 52
UNSIGNED_SHIFT_RIGHT_ASSIGN_OP (273) 53
MULTIPLY_ASSIGN_OP (274) 54
DIVIDE_ASSIGN_OP (275) 55
MODULO_ASSIGN_OP (276) 56
PLUS_ASSIGN_OP (277) 57
MINUS_ASSIGN_OP (278) 58
CONDITIONAL_OP (279) 60
LOGICAL_OR_OP (280) 61
LOGICAL_AND_OP (281) 63
BITWISE_OR_OP (282) 65
BITWISE_XOR_OP (283) 67
BITWISE_AND_OP (284) 69
EQUAL_OP (285) 71
NOT_EQUAL_OP (286) 72
LESS_OP (287) 74
LESS_OR_EQUAL_OP (288) 75
GREATER_OR_EQUAL_OP (289) 76
GREATER_OP (290) 77
SHIFT_LEFT_OP (291) 79
SHIFT_RIGHT_OP (292) 80
UNSIGNED_SHIFT_RIGHT_OP (293) 81
PLUS_OP (294) 83
MINUS_OP (295) 84
MULTIPLY_OP (296) 86
DIVIDE_OP (297) 87
MODULO_OP (298) 88
DOT (299) 23
DOTDOT (300) 24 25
SCOPE (301) 23 24 25 26 27 31 100
STAR (302) 15 31
COLON (303) 43 60
ANNOTATION_BLOCK_BEGIN (304) 36
ANNOTATION_BLOCK_END (305) 36
LEFT_PARENTHESIS (306) 40 90
RIGHT_PARENTHESIS (307) 40 90
LEFT_SQUARE_BRACKET (308) 96
RIGHT_SQUARE_BRACKET (309) 96
LEFT_ANGLE_BRACKET (310) 98
RIGHT_ANGLE_BRACKET (311) 98
IDENT (312) 32
INTEGER_LITERAL (313)
FLOATING_LITERAL (314) 2


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
mdl (62)
    on left: 1, on right: 0
mdl_version (63)
    on left: 2, on right: 1
import_declarations_opt (64)
    on left: 3 4, on right: 1
module_declaration_opt (65)
    on left: 5 6, on right: 1
import_declarations (66)
    on left: 7 8, on right: 3 7
import_declaration (67)
    on left: 9 10, on right: 7 8
qualified_imports (68)
    on left: 11 12, on right: 9 11
qualified_import_prefix (69)
    on left: 13, on right: 10
unqualified_import (70)
    on left: 14 15, on right: 10
qualified_import (71)
    on left: 16, on right: 11 12
unqualified_import_simple_names (72)
    on left: 17 18, on right: 14 17
qualified_import_prefix_opt (73)
    on left: 19 20 21 22, on right: 13 16
qualified_import_prefix_relative_current (74)
    on left: 23, on right: 19
qualified_import_prefix_relative_parent (75)
    on left: 24 25, on right: 20 24
qualified_import_prefix_absolute (76)
    on left: 26, on right: 21
qualified_name (77)
    on left: 27 28, on right: 13 16 27 39
qualified_import_suffix_opt (78)
    on left: 29 30, on right: 16
qualified_import_suffix (79)
    on left: 31, on right: 29
simple_name (80)
    on left: 32, on right: 17 18 27 28 43 98
module_declaration (81)
    on left: 33, on right: 5
annotation_block_opt (82)
    on left: 34 35, on right: 33
annotation_block (83)
    on left: 36, on right: 34
annotations (84)
    on left: 37 38, on right: 36 37
annotation (85)
    on left: 39, on right: 37 38
argument_list (86)
    on left: 40, on right: 39
named_arguments (87)
    on left: 41 42, on right: 40 41
named_argument (88)
    on left: 43, on right: 41 42
comma_expression (89)
    on left: 44 45, on right: 44 60
assignment_expression (90)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59, on right: 43
    44 45 47 48 49 50 51 52 53 54 55 56 57 58 60
conditional_expression (91)
    on left: 60, on right: 46 97
logical_or_expression (92)
    on left: 61 62, on right: 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61
logical_and_expression (93)
    on left: 63 64, on right: 61 62 63
inclusive_or_expression (94)
    on left: 65 66, on right: 63 64 65
exclusive_or_expression (95)
    on left: 67 68, on right: 65 66 67
and_expression (96)
    on left: 69 70, on right: 67 68 69
equality_expression (97)
    on left: 71 72 73, on right: 69 70 71 72
relational_expression (98)
    on left: 74 75 76 77 78, on right: 71 72 73 74 75 76 77
shift_expression (99)
    on left: 79 80 81 82, on right: 74 75 76 77 78 79 80 81
additive_expression (100)
    on left: 83 84 85, on right: 79 80 81 82 83 84
multiplicative_expression (101)
    on left: 86 87 88 89, on right: 83 84 85 86 87 88
unary_expression (102)
    on left: 90, on right: 86 87 88 89
type (103)
    on left: 91, on right: 90
frequency_qualifier_opt (104)
    on left: 92 93, on right: 91
frequency_qualifier (105)
    on left: 94 95, on right: 92
array_type (106)
    on left: 96, on right: 91
array_type_size_opt (107)
    on left: 97 98, on right: 96
simple_type (108)
    on left: 99, on right: 96
simple_type_absolute_opt (109)
    on left: 100 101, on right: 99
relative_type (110)
    on left: 102, on right: 99


State 0

    0 $accept: . mdl $end

    MDL  shift, and go to state 1

    mdl          go to state 2
    mdl_version  go to state 3


State 1

    2 mdl_version: MDL . FLOATING_LITERAL SEMICOLON

    FLOATING_LITERAL  shift, and go to state 4


State 2

    0 $accept: mdl . $end

    $end  shift, and go to state 5


State 3

    1 mdl: mdl_version . import_declarations_opt module_declaration_opt

    IMPORT  shift, and go to state 6
    EXPORT  shift, and go to state 7

    $default  reduce using rule 4 (import_declarations_opt)

    import_declarations_opt  go to state 8
    import_declarations      go to state 9
    import_declaration       go to state 10


State 4

    2 mdl_version: MDL FLOATING_LITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 11


State 5

    0 $accept: mdl $end .

    $default  accept


State 6

    9 import_declaration: IMPORT . qualified_imports SEMICOLON

    DOT     shift, and go to state 12
    DOTDOT  shift, and go to state 13
    SCOPE   shift, and go to state 14

    $default  reduce using rule 22 (qualified_import_prefix_opt)

    qualified_imports                         go to state 15
    qualified_import                          go to state 16
    qualified_import_prefix_opt               go to state 17
    qualified_import_prefix_relative_current  go to state 18
    qualified_import_prefix_relative_parent   go to state 19
    qualified_import_prefix_absolute          go to state 20


State 7

   10 import_declaration: EXPORT . USING qualified_import_prefix IMPORT unqualified_import SEMICOLON

    USING  shift, and go to state 21


State 8

    1 mdl: mdl_version import_declarations_opt . module_declaration_opt

    MODULE  shift, and go to state 22

    $default  reduce using rule 6 (module_declaration_opt)

    module_declaration_opt  go to state 23
    module_declaration      go to state 24


State 9

    3 import_declarations_opt: import_declarations .
    7 import_declarations: import_declarations . import_declaration

    IMPORT  shift, and go to state 6
    EXPORT  shift, and go to state 7

    $default  reduce using rule 3 (import_declarations_opt)

    import_declaration  go to state 25


State 10

    8 import_declarations: import_declaration .

    $default  reduce using rule 8 (import_declarations)


State 11

    2 mdl_version: MDL FLOATING_LITERAL SEMICOLON .

    $default  reduce using rule 2 (mdl_version)


State 12

   23 qualified_import_prefix_relative_current: DOT . SCOPE

    SCOPE  shift, and go to state 26


State 13

   25 qualified_import_prefix_relative_parent: DOTDOT . SCOPE

    SCOPE  shift, and go to state 27


State 14

   26 qualified_import_prefix_absolute: SCOPE .

    $default  reduce using rule 26 (qualified_import_prefix_absolute)


State 15

    9 import_declaration: IMPORT qualified_imports . SEMICOLON
   11 qualified_imports: qualified_imports . COMMA qualified_import

    SEMICOLON  shift, and go to state 28
    COMMA      shift, and go to state 29


State 16

   12 qualified_imports: qualified_import .

    $default  reduce using rule 12 (qualified_imports)


State 17

   16 qualified_import: qualified_import_prefix_opt . qualified_name qualified_import_suffix_opt

    IDENT  shift, and go to state 30

    qualified_name  go to state 31
    simple_name     go to state 32


State 18

   19 qualified_import_prefix_opt: qualified_import_prefix_relative_current .

    $default  reduce using rule 19 (qualified_import_prefix_opt)


State 19

   20 qualified_import_prefix_opt: qualified_import_prefix_relative_parent .
   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent . DOTDOT SCOPE

    DOTDOT  shift, and go to state 33

    $default  reduce using rule 20 (qualified_import_prefix_opt)


State 20

   21 qualified_import_prefix_opt: qualified_import_prefix_absolute .

    $default  reduce using rule 21 (qualified_import_prefix_opt)


State 21

   10 import_declaration: EXPORT USING . qualified_import_prefix IMPORT unqualified_import SEMICOLON

    DOT     shift, and go to state 12
    DOTDOT  shift, and go to state 13
    SCOPE   shift, and go to state 14

    $default  reduce using rule 22 (qualified_import_prefix_opt)

    qualified_import_prefix                   go to state 34
    qualified_import_prefix_opt               go to state 35
    qualified_import_prefix_relative_current  go to state 18
    qualified_import_prefix_relative_parent   go to state 19
    qualified_import_prefix_absolute          go to state 20


State 22

   33 module_declaration: MODULE . annotation_block_opt SEMICOLON

    ANNOTATION_BLOCK_BEGIN  shift, and go to state 36

    $default  reduce using rule 35 (annotation_block_opt)

    annotation_block_opt  go to state 37
    annotation_block      go to state 38


State 23

    1 mdl: mdl_version import_declarations_opt module_declaration_opt .

    $default  reduce using rule 1 (mdl)


State 24

    5 module_declaration_opt: module_declaration .

    $default  reduce using rule 5 (module_declaration_opt)


State 25

    7 import_declarations: import_declarations import_declaration .

    $default  reduce using rule 7 (import_declarations)


State 26

   23 qualified_import_prefix_relative_current: DOT SCOPE .

    $default  reduce using rule 23 (qualified_import_prefix_relative_current)


State 27

   25 qualified_import_prefix_relative_parent: DOTDOT SCOPE .

    $default  reduce using rule 25 (qualified_import_prefix_relative_parent)


State 28

    9 import_declaration: IMPORT qualified_imports SEMICOLON .

    $default  reduce using rule 9 (import_declaration)


State 29

   11 qualified_imports: qualified_imports COMMA . qualified_import

    DOT     shift, and go to state 12
    DOTDOT  shift, and go to state 13
    SCOPE   shift, and go to state 14

    $default  reduce using rule 22 (qualified_import_prefix_opt)

    qualified_import                          go to state 39
    qualified_import_prefix_opt               go to state 17
    qualified_import_prefix_relative_current  go to state 18
    qualified_import_prefix_relative_parent   go to state 19
    qualified_import_prefix_absolute          go to state 20


State 30

   32 simple_name: IDENT .

    $default  reduce using rule 32 (simple_name)


State 31

   16 qualified_import: qualified_import_prefix_opt qualified_name . qualified_import_suffix_opt
   27 qualified_name: qualified_name . SCOPE simple_name

    SCOPE  shift, and go to state 40

    $default  reduce using rule 30 (qualified_import_suffix_opt)

    qualified_import_suffix_opt  go to state 41
    qualified_import_suffix      go to state 42


State 32

   28 qualified_name: simple_name .

    $default  reduce using rule 28 (qualified_name)


State 33

   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT . SCOPE

    SCOPE  shift, and go to state 43


State 34

   10 import_declaration: EXPORT USING qualified_import_prefix . IMPORT unqualified_import SEMICOLON

    IMPORT  shift, and go to state 44


State 35

   13 qualified_import_prefix: qualified_import_prefix_opt . qualified_name

    IDENT  shift, and go to state 30

    qualified_name  go to state 45
    simple_name     go to state 32


State 36

   36 annotation_block: ANNOTATION_BLOCK_BEGIN . annotations ANNOTATION_BLOCK_END

    IDENT  shift, and go to state 30

    qualified_name  go to state 46
    simple_name     go to state 32
    annotations     go to state 47
    annotation      go to state 48


State 37

   33 module_declaration: MODULE annotation_block_opt . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 38

   34 annotation_block_opt: annotation_block .

    $default  reduce using rule 34 (annotation_block_opt)


State 39

   11 qualified_imports: qualified_imports COMMA qualified_import .

    $default  reduce using rule 11 (qualified_imports)


State 40

   27 qualified_name: qualified_name SCOPE . simple_name
   31 qualified_import_suffix: SCOPE . STAR

    STAR   shift, and go to state 50
    IDENT  shift, and go to state 30

    simple_name  go to state 51


State 41

   16 qualified_import: qualified_import_prefix_opt qualified_name qualified_import_suffix_opt .

    $default  reduce using rule 16 (qualified_import)


State 42

   29 qualified_import_suffix_opt: qualified_import_suffix .

    $default  reduce using rule 29 (qualified_import_suffix_opt)


State 43

   24 qualified_import_prefix_relative_parent: qualified_import_prefix_relative_parent DOTDOT SCOPE .

    $default  reduce using rule 24 (qualified_import_prefix_relative_parent)


State 44

   10 import_declaration: EXPORT USING qualified_import_prefix IMPORT . unqualified_import SEMICOLON

    STAR   shift, and go to state 52
    IDENT  shift, and go to state 30

    unqualified_import               go to state 53
    unqualified_import_simple_names  go to state 54
    simple_name                      go to state 55


State 45

   13 qualified_import_prefix: qualified_import_prefix_opt qualified_name .
   27 qualified_name: qualified_name . SCOPE simple_name

    SCOPE  shift, and go to state 56

    $default  reduce using rule 13 (qualified_import_prefix)


State 46

   27 qualified_name: qualified_name . SCOPE simple_name
   39 annotation: qualified_name . argument_list

    SCOPE             shift, and go to state 56
    LEFT_PARENTHESIS  shift, and go to state 57

    argument_list  go to state 58


State 47

   36 annotation_block: ANNOTATION_BLOCK_BEGIN annotations . ANNOTATION_BLOCK_END
   37 annotations: annotations . COMMA annotation

    COMMA                 shift, and go to state 59
    ANNOTATION_BLOCK_END  shift, and go to state 60


State 48

   38 annotations: annotation .

    $default  reduce using rule 38 (annotations)


State 49

   33 module_declaration: MODULE annotation_block_opt SEMICOLON .

    $default  reduce using rule 33 (module_declaration)


State 50

   31 qualified_import_suffix: SCOPE STAR .

    $default  reduce using rule 31 (qualified_import_suffix)


State 51

   27 qualified_name: qualified_name SCOPE simple_name .

    $default  reduce using rule 27 (qualified_name)


State 52

   15 unqualified_import: STAR .

    $default  reduce using rule 15 (unqualified_import)


State 53

   10 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 54

   14 unqualified_import: unqualified_import_simple_names .
   17 unqualified_import_simple_names: unqualified_import_simple_names . COMMA simple_name

    COMMA  shift, and go to state 62

    $default  reduce using rule 14 (unqualified_import)


State 55

   18 unqualified_import_simple_names: simple_name .

    $default  reduce using rule 18 (unqualified_import_simple_names)


State 56

   27 qualified_name: qualified_name SCOPE . simple_name

    IDENT  shift, and go to state 30

    simple_name  go to state 51


State 57

   40 argument_list: LEFT_PARENTHESIS . named_arguments RIGHT_PARENTHESIS

    IDENT  shift, and go to state 30

    simple_name      go to state 63
    named_arguments  go to state 64
    named_argument   go to state 65


State 58

   39 annotation: qualified_name argument_list .

    $default  reduce using rule 39 (annotation)


State 59

   37 annotations: annotations COMMA . annotation

    IDENT  shift, and go to state 30

    qualified_name  go to state 46
    simple_name     go to state 32
    annotation      go to state 66


State 60

   36 annotation_block: ANNOTATION_BLOCK_BEGIN annotations ANNOTATION_BLOCK_END .

    $default  reduce using rule 36 (annotation_block)


State 61

   10 import_declaration: EXPORT USING qualified_import_prefix IMPORT unqualified_import SEMICOLON .

    $default  reduce using rule 10 (import_declaration)


State 62

   17 unqualified_import_simple_names: unqualified_import_simple_names COMMA . simple_name

    IDENT  shift, and go to state 30

    simple_name  go to state 67


State 63

   43 named_argument: simple_name . COLON assignment_expression

    COLON  shift, and go to state 68


State 64

   40 argument_list: LEFT_PARENTHESIS named_arguments . RIGHT_PARENTHESIS
   41 named_arguments: named_arguments . COMMA named_argument

    COMMA              shift, and go to state 69
    RIGHT_PARENTHESIS  shift, and go to state 70


State 65

   42 named_arguments: named_argument .

    $default  reduce using rule 42 (named_arguments)


State 66

   37 annotations: annotations COMMA annotation .

    $default  reduce using rule 37 (annotations)


State 67

   17 unqualified_import_simple_names: unqualified_import_simple_names COMMA simple_name .

    $default  reduce using rule 17 (unqualified_import_simple_names)


State 68

   43 named_argument: simple_name COLON . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 72
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 69

   41 named_arguments: named_arguments COMMA . named_argument

    IDENT  shift, and go to state 30

    simple_name     go to state 63
    named_argument  go to state 85


State 70

   40 argument_list: LEFT_PARENTHESIS named_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 40 (argument_list)


State 71

   90 unary_expression: LEFT_PARENTHESIS . type RIGHT_PARENTHESIS

    UNIFORM  shift, and go to state 86
    VARYING  shift, and go to state 87

    $default  reduce using rule 93 (frequency_qualifier_opt)

    type                     go to state 88
    frequency_qualifier_opt  go to state 89
    frequency_qualifier      go to state 90


State 72

   43 named_argument: simple_name COLON assignment_expression .

    $default  reduce using rule 43 (named_argument)


State 73

   46 assignment_expression: conditional_expression .

    $default  reduce using rule 46 (assignment_expression)


State 74

   47 assignment_expression: logical_or_expression . ASSIGN_OP assignment_expression
   48                      | logical_or_expression . BITWISE_OR_ASSIGN_OP assignment_expression
   49                      | logical_or_expression . BITWISE_AND_ASSIGN_OP assignment_expression
   50                      | logical_or_expression . BITWISE_XOR_ASSIGN_OP assignment_expression
   51                      | logical_or_expression . SHIFT_LEFT_ASSIGN_OP assignment_expression
   52                      | logical_or_expression . SHIFT_RIGHT_ASSIGN_OP assignment_expression
   53                      | logical_or_expression . UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression
   54                      | logical_or_expression . MULTIPLY_ASSIGN_OP assignment_expression
   55                      | logical_or_expression . DIVIDE_ASSIGN_OP assignment_expression
   56                      | logical_or_expression . MODULO_ASSIGN_OP assignment_expression
   57                      | logical_or_expression . PLUS_ASSIGN_OP assignment_expression
   58                      | logical_or_expression . MINUS_ASSIGN_OP assignment_expression
   59                      | logical_or_expression .
   60 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression

    ASSIGN_OP                       shift, and go to state 91
    BITWISE_OR_ASSIGN_OP            shift, and go to state 92
    BITWISE_AND_ASSIGN_OP           shift, and go to state 93
    BITWISE_XOR_ASSIGN_OP           shift, and go to state 94
    SHIFT_LEFT_ASSIGN_OP            shift, and go to state 95
    SHIFT_RIGHT_ASSIGN_OP           shift, and go to state 96
    UNSIGNED_SHIFT_RIGHT_ASSIGN_OP  shift, and go to state 97
    MULTIPLY_ASSIGN_OP              shift, and go to state 98
    DIVIDE_ASSIGN_OP                shift, and go to state 99
    MODULO_ASSIGN_OP                shift, and go to state 100
    PLUS_ASSIGN_OP                  shift, and go to state 101
    MINUS_ASSIGN_OP                 shift, and go to state 102
    CONDITIONAL_OP                  shift, and go to state 103

    $default  reduce using rule 59 (assignment_expression)


State 75

   61 logical_or_expression: logical_and_expression . LOGICAL_OR_OP logical_or_expression
   62                      | logical_and_expression .

    LOGICAL_OR_OP  shift, and go to state 104

    $default  reduce using rule 62 (logical_or_expression)


State 76

   63 logical_and_expression: inclusive_or_expression . LOGICAL_AND_OP logical_and_expression
   64                       | inclusive_or_expression .

    LOGICAL_AND_OP  shift, and go to state 105

    $default  reduce using rule 64 (logical_and_expression)


State 77

   65 inclusive_or_expression: exclusive_or_expression . BITWISE_OR_OP inclusive_or_expression
   66                        | exclusive_or_expression .

    BITWISE_OR_OP  shift, and go to state 106

    $default  reduce using rule 66 (inclusive_or_expression)


State 78

   67 exclusive_or_expression: and_expression . BITWISE_XOR_OP exclusive_or_expression
   68                        | and_expression .

    BITWISE_XOR_OP  shift, and go to state 107

    $default  reduce using rule 68 (exclusive_or_expression)


State 79

   69 and_expression: equality_expression . BITWISE_AND_OP and_expression
   70               | equality_expression .

    BITWISE_AND_OP  shift, and go to state 108

    $default  reduce using rule 70 (and_expression)


State 80

   71 equality_expression: relational_expression . EQUAL_OP equality_expression
   72                    | relational_expression . NOT_EQUAL_OP equality_expression
   73                    | relational_expression .

    EQUAL_OP      shift, and go to state 109
    NOT_EQUAL_OP  shift, and go to state 110

    $default  reduce using rule 73 (equality_expression)


State 81

   74 relational_expression: shift_expression . LESS_OP relational_expression
   75                      | shift_expression . LESS_OR_EQUAL_OP relational_expression
   76                      | shift_expression . GREATER_OR_EQUAL_OP relational_expression
   77                      | shift_expression . GREATER_OP relational_expression
   78                      | shift_expression .

    LESS_OP              shift, and go to state 111
    LESS_OR_EQUAL_OP     shift, and go to state 112
    GREATER_OR_EQUAL_OP  shift, and go to state 113
    GREATER_OP           shift, and go to state 114

    $default  reduce using rule 78 (relational_expression)


State 82

   79 shift_expression: additive_expression . SHIFT_LEFT_OP shift_expression
   80                 | additive_expression . SHIFT_RIGHT_OP shift_expression
   81                 | additive_expression . UNSIGNED_SHIFT_RIGHT_OP shift_expression
   82                 | additive_expression .

    SHIFT_LEFT_OP            shift, and go to state 115
    SHIFT_RIGHT_OP           shift, and go to state 116
    UNSIGNED_SHIFT_RIGHT_OP  shift, and go to state 117

    $default  reduce using rule 82 (shift_expression)


State 83

   83 additive_expression: multiplicative_expression . PLUS_OP additive_expression
   84                    | multiplicative_expression . MINUS_OP additive_expression
   85                    | multiplicative_expression .

    PLUS_OP   shift, and go to state 118
    MINUS_OP  shift, and go to state 119

    $default  reduce using rule 85 (additive_expression)


State 84

   86 multiplicative_expression: unary_expression . MULTIPLY_OP multiplicative_expression
   87                          | unary_expression . DIVIDE_OP multiplicative_expression
   88                          | unary_expression . MODULO_OP multiplicative_expression
   89                          | unary_expression .

    MULTIPLY_OP  shift, and go to state 120
    DIVIDE_OP    shift, and go to state 121
    MODULO_OP    shift, and go to state 122

    $default  reduce using rule 89 (multiplicative_expression)


State 85

   41 named_arguments: named_arguments COMMA named_argument .

    $default  reduce using rule 41 (named_arguments)


State 86

   95 frequency_qualifier: UNIFORM .

    $default  reduce using rule 95 (frequency_qualifier)


State 87

   94 frequency_qualifier: VARYING .

    $default  reduce using rule 94 (frequency_qualifier)


State 88

   90 unary_expression: LEFT_PARENTHESIS type . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 123


State 89

   91 type: frequency_qualifier_opt . array_type

    SCOPE  shift, and go to state 124

    $default  reduce using rule 101 (simple_type_absolute_opt)

    array_type                go to state 125
    simple_type               go to state 126
    simple_type_absolute_opt  go to state 127


State 90

   92 frequency_qualifier_opt: frequency_qualifier .

    $default  reduce using rule 92 (frequency_qualifier_opt)


State 91

   47 assignment_expression: logical_or_expression ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 128
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 92

   48 assignment_expression: logical_or_expression BITWISE_OR_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 129
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 93

   49 assignment_expression: logical_or_expression BITWISE_AND_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 130
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 94

   50 assignment_expression: logical_or_expression BITWISE_XOR_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 131
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 95

   51 assignment_expression: logical_or_expression SHIFT_LEFT_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 132
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 96

   52 assignment_expression: logical_or_expression SHIFT_RIGHT_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 133
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 97

   53 assignment_expression: logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 134
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 98

   54 assignment_expression: logical_or_expression MULTIPLY_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 135
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 99

   55 assignment_expression: logical_or_expression DIVIDE_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 136
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 100

   56 assignment_expression: logical_or_expression MODULO_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 137
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 101

   57 assignment_expression: logical_or_expression PLUS_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 138
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 102

   58 assignment_expression: logical_or_expression MINUS_ASSIGN_OP . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 139
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 103

   60 conditional_expression: logical_or_expression CONDITIONAL_OP . comma_expression COLON assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    comma_expression           go to state 140
    assignment_expression      go to state 141
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 104

   61 logical_or_expression: logical_and_expression LOGICAL_OR_OP . logical_or_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    logical_or_expression      go to state 142
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 105

   63 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP . logical_and_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    logical_and_expression     go to state 143
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 106

   65 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP . inclusive_or_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    inclusive_or_expression    go to state 144
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 107

   67 exclusive_or_expression: and_expression BITWISE_XOR_OP . exclusive_or_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    exclusive_or_expression    go to state 145
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 108

   69 and_expression: equality_expression BITWISE_AND_OP . and_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    and_expression             go to state 146
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 109

   71 equality_expression: relational_expression EQUAL_OP . equality_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    equality_expression        go to state 147
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 110

   72 equality_expression: relational_expression NOT_EQUAL_OP . equality_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    equality_expression        go to state 148
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 111

   74 relational_expression: shift_expression LESS_OP . relational_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    relational_expression      go to state 149
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 112

   75 relational_expression: shift_expression LESS_OR_EQUAL_OP . relational_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    relational_expression      go to state 150
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 113

   76 relational_expression: shift_expression GREATER_OR_EQUAL_OP . relational_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    relational_expression      go to state 151
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 114

   77 relational_expression: shift_expression GREATER_OP . relational_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    relational_expression      go to state 152
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 115

   79 shift_expression: additive_expression SHIFT_LEFT_OP . shift_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    shift_expression           go to state 153
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 116

   80 shift_expression: additive_expression SHIFT_RIGHT_OP . shift_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    shift_expression           go to state 154
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 117

   81 shift_expression: additive_expression UNSIGNED_SHIFT_RIGHT_OP . shift_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    shift_expression           go to state 155
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 118

   83 additive_expression: multiplicative_expression PLUS_OP . additive_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    additive_expression        go to state 156
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 119

   84 additive_expression: multiplicative_expression MINUS_OP . additive_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    additive_expression        go to state 157
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 120

   86 multiplicative_expression: unary_expression MULTIPLY_OP . multiplicative_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    multiplicative_expression  go to state 158
    unary_expression           go to state 84


State 121

   87 multiplicative_expression: unary_expression DIVIDE_OP . multiplicative_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    multiplicative_expression  go to state 159
    unary_expression           go to state 84


State 122

   88 multiplicative_expression: unary_expression MODULO_OP . multiplicative_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    multiplicative_expression  go to state 160
    unary_expression           go to state 84


State 123

   90 unary_expression: LEFT_PARENTHESIS type RIGHT_PARENTHESIS .

    $default  reduce using rule 90 (unary_expression)


State 124

  100 simple_type_absolute_opt: SCOPE .

    $default  reduce using rule 100 (simple_type_absolute_opt)


State 125

   91 type: frequency_qualifier_opt array_type .

    $default  reduce using rule 91 (type)


State 126

   96 array_type: simple_type . LEFT_SQUARE_BRACKET array_type_size_opt RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 161


State 127

   99 simple_type: simple_type_absolute_opt . relative_type

    'A'  shift, and go to state 162

    relative_type  go to state 163


State 128

   47 assignment_expression: logical_or_expression ASSIGN_OP assignment_expression .

    $default  reduce using rule 47 (assignment_expression)


State 129

   48 assignment_expression: logical_or_expression BITWISE_OR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 48 (assignment_expression)


State 130

   49 assignment_expression: logical_or_expression BITWISE_AND_ASSIGN_OP assignment_expression .

    $default  reduce using rule 49 (assignment_expression)


State 131

   50 assignment_expression: logical_or_expression BITWISE_XOR_ASSIGN_OP assignment_expression .

    $default  reduce using rule 50 (assignment_expression)


State 132

   51 assignment_expression: logical_or_expression SHIFT_LEFT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 51 (assignment_expression)


State 133

   52 assignment_expression: logical_or_expression SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 52 (assignment_expression)


State 134

   53 assignment_expression: logical_or_expression UNSIGNED_SHIFT_RIGHT_ASSIGN_OP assignment_expression .

    $default  reduce using rule 53 (assignment_expression)


State 135

   54 assignment_expression: logical_or_expression MULTIPLY_ASSIGN_OP assignment_expression .

    $default  reduce using rule 54 (assignment_expression)


State 136

   55 assignment_expression: logical_or_expression DIVIDE_ASSIGN_OP assignment_expression .

    $default  reduce using rule 55 (assignment_expression)


State 137

   56 assignment_expression: logical_or_expression MODULO_ASSIGN_OP assignment_expression .

    $default  reduce using rule 56 (assignment_expression)


State 138

   57 assignment_expression: logical_or_expression PLUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 57 (assignment_expression)


State 139

   58 assignment_expression: logical_or_expression MINUS_ASSIGN_OP assignment_expression .

    $default  reduce using rule 58 (assignment_expression)


State 140

   60 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression . COLON assignment_expression

    COLON  shift, and go to state 164


State 141

   44 comma_expression: assignment_expression . COMMA comma_expression
   45                 | assignment_expression .

    COMMA  shift, and go to state 165

    $default  reduce using rule 45 (comma_expression)


State 142

   61 logical_or_expression: logical_and_expression LOGICAL_OR_OP logical_or_expression .

    $default  reduce using rule 61 (logical_or_expression)


State 143

   63 logical_and_expression: inclusive_or_expression LOGICAL_AND_OP logical_and_expression .

    $default  reduce using rule 63 (logical_and_expression)


State 144

   65 inclusive_or_expression: exclusive_or_expression BITWISE_OR_OP inclusive_or_expression .

    $default  reduce using rule 65 (inclusive_or_expression)


State 145

   67 exclusive_or_expression: and_expression BITWISE_XOR_OP exclusive_or_expression .

    $default  reduce using rule 67 (exclusive_or_expression)


State 146

   69 and_expression: equality_expression BITWISE_AND_OP and_expression .

    $default  reduce using rule 69 (and_expression)


State 147

   71 equality_expression: relational_expression EQUAL_OP equality_expression .

    $default  reduce using rule 71 (equality_expression)


State 148

   72 equality_expression: relational_expression NOT_EQUAL_OP equality_expression .

    $default  reduce using rule 72 (equality_expression)


State 149

   74 relational_expression: shift_expression LESS_OP relational_expression .

    $default  reduce using rule 74 (relational_expression)


State 150

   75 relational_expression: shift_expression LESS_OR_EQUAL_OP relational_expression .

    $default  reduce using rule 75 (relational_expression)


State 151

   76 relational_expression: shift_expression GREATER_OR_EQUAL_OP relational_expression .

    $default  reduce using rule 76 (relational_expression)


State 152

   77 relational_expression: shift_expression GREATER_OP relational_expression .

    $default  reduce using rule 77 (relational_expression)


State 153

   79 shift_expression: additive_expression SHIFT_LEFT_OP shift_expression .

    $default  reduce using rule 79 (shift_expression)


State 154

   80 shift_expression: additive_expression SHIFT_RIGHT_OP shift_expression .

    $default  reduce using rule 80 (shift_expression)


State 155

   81 shift_expression: additive_expression UNSIGNED_SHIFT_RIGHT_OP shift_expression .

    $default  reduce using rule 81 (shift_expression)


State 156

   83 additive_expression: multiplicative_expression PLUS_OP additive_expression .

    $default  reduce using rule 83 (additive_expression)


State 157

   84 additive_expression: multiplicative_expression MINUS_OP additive_expression .

    $default  reduce using rule 84 (additive_expression)


State 158

   86 multiplicative_expression: unary_expression MULTIPLY_OP multiplicative_expression .

    $default  reduce using rule 86 (multiplicative_expression)


State 159

   87 multiplicative_expression: unary_expression DIVIDE_OP multiplicative_expression .

    $default  reduce using rule 87 (multiplicative_expression)


State 160

   88 multiplicative_expression: unary_expression MODULO_OP multiplicative_expression .

    $default  reduce using rule 88 (multiplicative_expression)


State 161

   96 array_type: simple_type LEFT_SQUARE_BRACKET . array_type_size_opt RIGHT_SQUARE_BRACKET

    LEFT_PARENTHESIS    shift, and go to state 71
    LEFT_ANGLE_BRACKET  shift, and go to state 166

    conditional_expression     go to state 167
    logical_or_expression      go to state 168
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84
    array_type_size_opt        go to state 169


State 162

  102 relative_type: 'A' .

    $default  reduce using rule 102 (relative_type)


State 163

   99 simple_type: simple_type_absolute_opt relative_type .

    $default  reduce using rule 99 (simple_type)


State 164

   60 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON . assignment_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    assignment_expression      go to state 170
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 165

   44 comma_expression: assignment_expression COMMA . comma_expression

    LEFT_PARENTHESIS  shift, and go to state 71

    comma_expression           go to state 171
    assignment_expression      go to state 141
    conditional_expression     go to state 73
    logical_or_expression      go to state 74
    logical_and_expression     go to state 75
    inclusive_or_expression    go to state 76
    exclusive_or_expression    go to state 77
    and_expression             go to state 78
    equality_expression        go to state 79
    relational_expression      go to state 80
    shift_expression           go to state 81
    additive_expression        go to state 82
    multiplicative_expression  go to state 83
    unary_expression           go to state 84


State 166

   98 array_type_size_opt: LEFT_ANGLE_BRACKET . simple_name RIGHT_ANGLE_BRACKET

    IDENT  shift, and go to state 30

    simple_name  go to state 172


State 167

   97 array_type_size_opt: conditional_expression .

    $default  reduce using rule 97 (array_type_size_opt)


State 168

   60 conditional_expression: logical_or_expression . CONDITIONAL_OP comma_expression COLON assignment_expression

    CONDITIONAL_OP  shift, and go to state 103


State 169

   96 array_type: simple_type LEFT_SQUARE_BRACKET array_type_size_opt . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 173


State 170

   60 conditional_expression: logical_or_expression CONDITIONAL_OP comma_expression COLON assignment_expression .

    $default  reduce using rule 60 (conditional_expression)


State 171

   44 comma_expression: assignment_expression COMMA comma_expression .

    $default  reduce using rule 44 (comma_expression)


State 172

   98 array_type_size_opt: LEFT_ANGLE_BRACKET simple_name . RIGHT_ANGLE_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 174


State 173

   96 array_type: simple_type LEFT_SQUARE_BRACKET array_type_size_opt RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 96 (array_type)


State 174

   98 array_type_size_opt: LEFT_ANGLE_BRACKET simple_name RIGHT_ANGLE_BRACKET .

    $default  reduce using rule 98 (array_type_size_opt)
